<!DOCTYPE html>
<html lang="en">
  <head>

<!-- Global site tag (gtag.js) - Google Analytics -->
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-156801664-1"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'UA-156801664-1');
</script>
    
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=Edge,chrome=1">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="description" content="3.3.3 
        Representing Tables
      " />
    <title>
         3.3.3 
        Representing Tables
      
    </title>

    <meta name="csrf-param" content="authenticity_token" />
<meta name="csrf-token" content="YVKUoRfX1/3N2R9uOs2xBhe3cVGb51rrh3RP5IGjjMi9BCeacLxpKieHogyUL/Gho9cHdX6FYftBEB4Jo1u93Q==" />

    <!--<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-alpha.6/css/bootstrap.min.css" integrity="sha384-rwoIResjU2yc3z8GV/NPeZWAv56rSmLldC3R/AZzGRnGxQQKnKkoFVhFQhNUwEyJ" crossorigin="anonymous">
    -->
    <link href="https://fonts.googleapis.com/css?family=Inconsolata&display?swap" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css?family=Droid+Sans|Droid+Serif" rel="stylesheet">
    <link rel="stylesheet" media="all" href="../assets/application-f313219f7bd4d132a6fd02c8f84b86f62781f5d155b9681036fc6390c9f3d06c.css" />

   <link rel="shortcut icon" type="image/x-icon" href="../assets/favicon-17dbf972938cc63d48794e3be2c66977e723014f9a9518097da971fb34202187.ico" />

<!--    <link rel="shortcut icon" type="image/png" href="/images/lambda.png" /> -->

    <!-- for support of progressive web app, see github README -->
    <link rel="manifest" href="../static/manifest.json">

    <script src="https://code.jquery.com/jquery-3.2.1.min.js" 
		     	  integrity="sha256-hwg4gsxgFZhOsEEamdOYGBf13FyQuiTwlAQgxVSNgt4="
	          crossorigin="anonymous">
    </script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/tether/1.4.0/js/tether.min.js"></script>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.6/umd/popper.min.js" integrity="sha384-wHAiFfRlMFy6i5SRaxvfOCifBUQy1xHdJ/yoi7FRNXMRBu5WHdZYu1hA6ZOblgut" crossorigin="anonymous"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.2.1/js/bootstrap.min.js" integrity="sha384-B0UglyR+jN6CkvvICOB2joaf5I4l3gm9GU6Hc1og6Ls7i6U/mkkaduKaBhlAXv9k" crossorigin="anonymous"></script>
    
    <!-- <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-alpha.6/js/bootstrap.min.js" integrity="sha384-vBWWzlZJ8ea9aCX4pEW3rVHjgjt7zpkNpZk+02D9phzyeVkE+jo0ieGizqPLForn" crossorigin="anonymous"></script> -->
    <script type="text/javascript" 
      src="https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.4/latest.js?config=TeX-AMS-MML_HTMLorMML-full">
    </script>
   <!--  <script type="text/javascript" 
      src="../MathJax/MathJax.js?config=TeX-AMS-MML_HTMLorMML-full">
    </script> -->

    <script src="../assets/application-77eef7aa2695bed514b473158fa8f35a6ae4cb10c6e0f2ae8e2b485af0611d43.js"></script>

    <!-- Rendering inline LaTeX -->
    <script type="text/x-mathjax-config">
      MathJax.Hub.Config({
        tex2jax: {
          inlineMath: [ ['$','$'], ["\\(","\\)"] ],
          processEscapes: true,
          jax: ["input/TeX","output/HTML-CSS"]
        }
      });
    </script>
    <!--<script src="/mathjax/MathJax.js?config=TeX-AMS_HTML-full.js" type="text/javascript"></script>-->
    <!-- Le HTML5 shim, for IE6-8 support of HTML elements -->
    <!--[if lt IE 9]>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.2/html5shiv.min.js" type="text/javascript"></script>
    <![endif]-->
  </head>
  <body>

    
    <!-- support for progressive web app, see README -->
    <script>
      if ('serviceWorker' in navigator && !navigator.serviceWorker.controller) {
          navigator.serviceWorker.register("/sw.js").then(function(reg) {
              console.log("Service worker has been registered for scope: " + reg.scope);
          });
      }
    </script>

     <nav class="navbar navbar-expand-sm navbar-dark bg-dark fixed-top justify-content-between">
       <button id="btn" class="navbar-toggler collapsed" type="button" data-toggle="collapse" data-target="#nav-sidebar" aria-controls="nav-sidebar" aria-expanded="false" aria-label="Toggle navigation" title="navigation">
         <span class="navbar-toggler-icon"></span>
       </button>
       <span class="navbar-brand-short"><a title="Go back to front page" href="../index.html" class="gray">SICP &mdash; JS</a></span>
       <span class="navbar-brand-long" ><a title="Go back to front page" href="../index.html" class="gray">Structure and Interpretation
            of Computer Programs &mdash; JavaScript Adaptation</a></span>

       <!-- edit the search engine by visiting: 
	    https://cse.google.com/cse/setup/basic?cx=015760785273492757659:nc_tznrzlsg 
	       -->
       <form class="form-inline ml-auto" id="xxx">
         <div id="search-box">
	         <script>
	           (function() {
	               var cx = "015760785273492757659:nc_tznrzlsg";
	               var gcse = document.createElement("script");
	               gcse.type = "text/javascript";
	               gcse.async = true;
	               gcse.src = "https://cse.google.com/cse.js?cx=" + cx;
	               var s = document.getElementsByTagName("script")[0];
	               s.parentNode.insertBefore(gcse, s);
	           })();
	           window.onload = function()
	           { 
	               var searchBox =  document.getElementById("gsc-i-id1");
	               searchBox.placeholder="search web edition";
	               searchBox.title="search web edition"; 
	           }
	         </script>
	         <gcse:search></gcse:search>
         </div>
       </form>
       <span class="navbar-brand-short">
         &nbsp;
         &nbsp;
         <a href="https://sicp.comp.nus.edu.sg/source/" title="Go to the Source language(s) definition(s)" class="gray">S</a>
       </span>
       <span class="navbar-brand-long">
         &nbsp;
         &nbsp;
         <a href="https://sicp.comp.nus.edu.sg/source/" title="Go to the Source language(s) definition(s)" class="gray">Source</a>
       </span>
     </nav>
     
     <div class="container scroll">

       <div class="collapse" id="nav-sidebar" role="tablist" aria-multiselectable="true">
	 <!-- insert a dummy entry, to give one extra line of space -->
         <a class="navbar-brand" href="index.html">&nbsp;</a>
                     <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-122">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-122" aria-expanded="false" aria-controls="sidebar-collapse-122">
                    <a href="122">        Foreword    </a>
                  </span>
                </h5>
              </div>
            </div>

                     <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-123">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-123" aria-expanded="false" aria-controls="sidebar-collapse-123">
                    <a href="123">        Prefaces    </a>
                  </span>
                </h5>
              </div>
            </div>

                     <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-124">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-124" aria-expanded="false" aria-controls="sidebar-collapse-124">
                    <a href="124">Acknowledgments from Second Edition of SICP, 1996    </a>
                  </span>
                </h5>
              </div>
            </div>

                     <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-1">
                <h5 class="mb-0">
                  <a class="sidebar-show collapsed" data-toggle="collapse" href="#sidebar-collapse-1" aria-expanded="true" aria-controls="sidebar-collapse-1">
                     &#10148;   <!-- ➤ (because this one is rendered blue on mobile: ▶  -->
                  </a>
                  <a class="sidebar-hide collapsed" data-toggle="collapse" href="#sidebar-collapse-1" aria-expanded="true" aria-controls="sidebar-collapse-1">
                    &#x25BC;    <!-- ▼ (because the corresponding one is not rendered) -->
                  </a>
                    <a href="1">1        Building Abstractions with       Functions    </a>
                </h5>
              </div>
              <div id="sidebar-collapse-1" class="collapse" role="tabpanel" aria-labelledby="headingOne">
                <div class="card-block">
                                <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-2">
                <h5 class="mb-0">
                  <a class="sidebar-show collapsed" data-toggle="collapse" href="#sidebar-collapse-2" aria-expanded="true" aria-controls="sidebar-collapse-2">
                     &#10148;   <!-- ➤ (because this one is rendered blue on mobile: ▶  -->
                  </a>
                  <a class="sidebar-hide collapsed" data-toggle="collapse" href="#sidebar-collapse-2" aria-expanded="true" aria-controls="sidebar-collapse-2">
                    &#x25BC;    <!-- ▼ (because the corresponding one is not rendered) -->
                  </a>
                    <a href="2">1.1  The Elements of Programming</a>
                </h5>
              </div>
              <div id="sidebar-collapse-2" class="collapse" role="tabpanel" aria-labelledby="headingOne">
                <div class="card-block">
                                <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-3">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-3" aria-expanded="false" aria-controls="sidebar-collapse-3">
                    <a href="3">1.1.1  Expressions</a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-4">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-4" aria-expanded="false" aria-controls="sidebar-collapse-4">
                    <a href="4">1.1.2  Naming and the Environment</a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-5">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-5" aria-expanded="false" aria-controls="sidebar-collapse-5">
                    <a href="5">1.1.3            Evaluating          Operator Combinations        </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-6">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-6" aria-expanded="false" aria-controls="sidebar-collapse-6">
                    <a href="6">1.1.4            Functions        </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-7">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-7" aria-expanded="false" aria-controls="sidebar-collapse-7">
                    <a href="7">1.1.5            The Substitution Model for                                                 Function                              Application        </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-8">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-8" aria-expanded="false" aria-controls="sidebar-collapse-8">
                    <a href="8">1.1.6            Conditional Expressions and Predicates        </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-9">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-9" aria-expanded="false" aria-controls="sidebar-collapse-9">
                    <a href="9">1.1.7  Example: Square Roots by Newtons Method</a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-10">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-10" aria-expanded="false" aria-controls="sidebar-collapse-10">
                    <a href="10">1.1.8                                                  Functions                                as Black-Box Abstractions        </a>
                  </span>
                </h5>
              </div>
            </div>

                </div>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-11">
                <h5 class="mb-0">
                  <a class="sidebar-show collapsed" data-toggle="collapse" href="#sidebar-collapse-11" aria-expanded="true" aria-controls="sidebar-collapse-11">
                     &#10148;   <!-- ➤ (because this one is rendered blue on mobile: ▶  -->
                  </a>
                  <a class="sidebar-hide collapsed" data-toggle="collapse" href="#sidebar-collapse-11" aria-expanded="true" aria-controls="sidebar-collapse-11">
                    &#x25BC;    <!-- ▼ (because the corresponding one is not rendered) -->
                  </a>
                    <a href="11">1.2              Functions            and the Processes They Generate      </a>
                </h5>
              </div>
              <div id="sidebar-collapse-11" class="collapse" role="tabpanel" aria-labelledby="headingOne">
                <div class="card-block">
                                <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-12">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-12" aria-expanded="false" aria-controls="sidebar-collapse-12">
                    <a href="12">1.2.1  Linear Recursion and Iteration</a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-13">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-13" aria-expanded="false" aria-controls="sidebar-collapse-13">
                    <a href="13">1.2.2  Tree Recursion</a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-14">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-14" aria-expanded="false" aria-controls="sidebar-collapse-14">
                    <a href="14">1.2.3  Orders of Growth</a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-15">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-15" aria-expanded="false" aria-controls="sidebar-collapse-15">
                    <a href="15">1.2.4  Exponentiation</a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-16">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-16" aria-expanded="false" aria-controls="sidebar-collapse-16">
                    <a href="16">1.2.5  Greatest Common Divisors</a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-17">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-17" aria-expanded="false" aria-controls="sidebar-collapse-17">
                    <a href="17">1.2.6  Example: Testing for Primality</a>
                  </span>
                </h5>
              </div>
            </div>

                </div>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-18">
                <h5 class="mb-0">
                  <a class="sidebar-show collapsed" data-toggle="collapse" href="#sidebar-collapse-18" aria-expanded="true" aria-controls="sidebar-collapse-18">
                     &#10148;   <!-- ➤ (because this one is rendered blue on mobile: ▶  -->
                  </a>
                  <a class="sidebar-hide collapsed" data-toggle="collapse" href="#sidebar-collapse-18" aria-expanded="true" aria-controls="sidebar-collapse-18">
                    &#x25BC;    <!-- ▼ (because the corresponding one is not rendered) -->
                  </a>
                    <a href="18">1.3          Formulating Abstractions with Higher-Order         Functions      </a>
                </h5>
              </div>
              <div id="sidebar-collapse-18" class="collapse" role="tabpanel" aria-labelledby="headingOne">
                <div class="card-block">
                                <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-19">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-19" aria-expanded="false" aria-controls="sidebar-collapse-19">
                    <a href="19">1.3.1            Functions          as Arguments        </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-20">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-20" aria-expanded="false" aria-controls="sidebar-collapse-20">
                    <a href="20">1.3.2            Function Definition Expressions          </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-21">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-21" aria-expanded="false" aria-controls="sidebar-collapse-21">
                    <a href="21">1.3.3              Functions            as General Methods          </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-22">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-22" aria-expanded="false" aria-controls="sidebar-collapse-22">
                    <a href="22">1.3.4      Functions    as Returned Values  </a>
                  </span>
                </h5>
              </div>
            </div>

                </div>
              </div>
            </div>

                </div>
              </div>
            </div>

                     <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-23">
                <h5 class="mb-0">
                  <a class="sidebar-show collapsed" data-toggle="collapse" href="#sidebar-collapse-23" aria-expanded="true" aria-controls="sidebar-collapse-23">
                     &#10148;   <!-- ➤ (because this one is rendered blue on mobile: ▶  -->
                  </a>
                  <a class="sidebar-hide collapsed" data-toggle="collapse" href="#sidebar-collapse-23" aria-expanded="true" aria-controls="sidebar-collapse-23">
                    &#x25BC;    <!-- ▼ (because the corresponding one is not rendered) -->
                  </a>
                    <a href="23">2  Building Abstractions with Data</a>
                </h5>
              </div>
              <div id="sidebar-collapse-23" class="collapse" role="tabpanel" aria-labelledby="headingOne">
                <div class="card-block">
                                <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-24">
                <h5 class="mb-0">
                  <a class="sidebar-show collapsed" data-toggle="collapse" href="#sidebar-collapse-24" aria-expanded="true" aria-controls="sidebar-collapse-24">
                     &#10148;   <!-- ➤ (because this one is rendered blue on mobile: ▶  -->
                  </a>
                  <a class="sidebar-hide collapsed" data-toggle="collapse" href="#sidebar-collapse-24" aria-expanded="true" aria-controls="sidebar-collapse-24">
                    &#x25BC;    <!-- ▼ (because the corresponding one is not rendered) -->
                  </a>
                    <a href="24">2.1  Introduction to Data Abstraction</a>
                </h5>
              </div>
              <div id="sidebar-collapse-24" class="collapse" role="tabpanel" aria-labelledby="headingOne">
                <div class="card-block">
                                <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-25">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-25" aria-expanded="false" aria-controls="sidebar-collapse-25">
                    <a href="25">2.1.1      Example: Arithmetic Operations for Rational Numbers  </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-26">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-26" aria-expanded="false" aria-controls="sidebar-collapse-26">
                    <a href="26">2.1.2          Abstraction Barriers      </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-27">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-27" aria-expanded="false" aria-controls="sidebar-collapse-27">
                    <a href="27">2.1.3          What Is Meant by Data?      </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-28">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-28" aria-expanded="false" aria-controls="sidebar-collapse-28">
                    <a href="28">2.1.4          Extended Exercise: Interval Arithmetic      </a>
                  </span>
                </h5>
              </div>
            </div>

                </div>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-29">
                <h5 class="mb-0">
                  <a class="sidebar-show collapsed" data-toggle="collapse" href="#sidebar-collapse-29" aria-expanded="true" aria-controls="sidebar-collapse-29">
                     &#10148;   <!-- ➤ (because this one is rendered blue on mobile: ▶  -->
                  </a>
                  <a class="sidebar-hide collapsed" data-toggle="collapse" href="#sidebar-collapse-29" aria-expanded="true" aria-controls="sidebar-collapse-29">
                    &#x25BC;    <!-- ▼ (because the corresponding one is not rendered) -->
                  </a>
                    <a href="29">2.2  Hierarchical Data and the Closure Property</a>
                </h5>
              </div>
              <div id="sidebar-collapse-29" class="collapse" role="tabpanel" aria-labelledby="headingOne">
                <div class="card-block">
                                <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-30">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-30" aria-expanded="false" aria-controls="sidebar-collapse-30">
                    <a href="30">2.2.1          Representing Sequences      </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-31">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-31" aria-expanded="false" aria-controls="sidebar-collapse-31">
                    <a href="31">2.2.2          Hierarchical Structures      </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-32">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-32" aria-expanded="false" aria-controls="sidebar-collapse-32">
                    <a href="32">2.2.3          Sequences as Conventional Interfaces      </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-33">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-33" aria-expanded="false" aria-controls="sidebar-collapse-33">
                    <a href="33">2.2.4          Example: A Picture Language      </a>
                  </span>
                </h5>
              </div>
            </div>

                </div>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-34">
                <h5 class="mb-0">
                  <a class="sidebar-show collapsed" data-toggle="collapse" href="#sidebar-collapse-34" aria-expanded="true" aria-controls="sidebar-collapse-34">
                     &#10148;   <!-- ➤ (because this one is rendered blue on mobile: ▶  -->
                  </a>
                  <a class="sidebar-hide collapsed" data-toggle="collapse" href="#sidebar-collapse-34" aria-expanded="true" aria-controls="sidebar-collapse-34">
                    &#x25BC;    <!-- ▼ (because the corresponding one is not rendered) -->
                  </a>
                    <a href="34">2.3  Symbolic Data</a>
                </h5>
              </div>
              <div id="sidebar-collapse-34" class="collapse" role="tabpanel" aria-labelledby="headingOne">
                <div class="card-block">
                                <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-35">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-35" aria-expanded="false" aria-controls="sidebar-collapse-35">
                    <a href="35">2.3.1          Strings      </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-36">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-36" aria-expanded="false" aria-controls="sidebar-collapse-36">
                    <a href="36">2.3.2          Example: Symbolic Differentiation      </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-37">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-37" aria-expanded="false" aria-controls="sidebar-collapse-37">
                    <a href="37">2.3.3          Example: Representing Sets      </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-38">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-38" aria-expanded="false" aria-controls="sidebar-collapse-38">
                    <a href="38">2.3.4          Example: Huffman Encoding Trees      </a>
                  </span>
                </h5>
              </div>
            </div>

                </div>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-39">
                <h5 class="mb-0">
                  <a class="sidebar-show collapsed" data-toggle="collapse" href="#sidebar-collapse-39" aria-expanded="true" aria-controls="sidebar-collapse-39">
                     &#10148;   <!-- ➤ (because this one is rendered blue on mobile: ▶  -->
                  </a>
                  <a class="sidebar-hide collapsed" data-toggle="collapse" href="#sidebar-collapse-39" aria-expanded="true" aria-controls="sidebar-collapse-39">
                    &#x25BC;    <!-- ▼ (because the corresponding one is not rendered) -->
                  </a>
                    <a href="39">2.4  Multiple Representations for Abstract Data</a>
                </h5>
              </div>
              <div id="sidebar-collapse-39" class="collapse" role="tabpanel" aria-labelledby="headingOne">
                <div class="card-block">
                                <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-40">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-40" aria-expanded="false" aria-controls="sidebar-collapse-40">
                    <a href="40">2.4.1          Representations for Complex Numbers      </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-41">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-41" aria-expanded="false" aria-controls="sidebar-collapse-41">
                    <a href="41">2.4.2          Tagged data      </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-42">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-42" aria-expanded="false" aria-controls="sidebar-collapse-42">
                    <a href="42">2.4.3          Data-Directed Programming and Additivity      </a>
                  </span>
                </h5>
              </div>
            </div>

                </div>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-43">
                <h5 class="mb-0">
                  <a class="sidebar-show collapsed" data-toggle="collapse" href="#sidebar-collapse-43" aria-expanded="true" aria-controls="sidebar-collapse-43">
                     &#10148;   <!-- ➤ (because this one is rendered blue on mobile: ▶  -->
                  </a>
                  <a class="sidebar-hide collapsed" data-toggle="collapse" href="#sidebar-collapse-43" aria-expanded="true" aria-controls="sidebar-collapse-43">
                    &#x25BC;    <!-- ▼ (because the corresponding one is not rendered) -->
                  </a>
                    <a href="43">2.5  Systems with Generic Operations</a>
                </h5>
              </div>
              <div id="sidebar-collapse-43" class="collapse" role="tabpanel" aria-labelledby="headingOne">
                <div class="card-block">
                                <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-44">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-44" aria-expanded="false" aria-controls="sidebar-collapse-44">
                    <a href="44">2.5.1          Generic Arithmetic Operations      </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-45">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-45" aria-expanded="false" aria-controls="sidebar-collapse-45">
                    <a href="45">2.5.2          Combining Data of Different Types      </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-46">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-46" aria-expanded="false" aria-controls="sidebar-collapse-46">
                    <a href="46">2.5.3          Example: Symbolic Algebra      </a>
                  </span>
                </h5>
              </div>
            </div>

                </div>
              </div>
            </div>

                </div>
              </div>
            </div>

                     <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-47">
                <h5 class="mb-0">
                  <a class="sidebar-show collapsed" data-toggle="collapse" href="#sidebar-collapse-47" aria-expanded="true" aria-controls="sidebar-collapse-47">
                     &#10148;   <!-- ➤ (because this one is rendered blue on mobile: ▶  -->
                  </a>
                  <a class="sidebar-hide collapsed" data-toggle="collapse" href="#sidebar-collapse-47" aria-expanded="true" aria-controls="sidebar-collapse-47">
                    &#x25BC;    <!-- ▼ (because the corresponding one is not rendered) -->
                  </a>
                    <a href="47">3  Modularity, Objects, and State</a>
                </h5>
              </div>
              <div id="sidebar-collapse-47" class="collapse" role="tabpanel" aria-labelledby="headingOne">
                <div class="card-block">
                                <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-48">
                <h5 class="mb-0">
                  <a class="sidebar-show collapsed" data-toggle="collapse" href="#sidebar-collapse-48" aria-expanded="true" aria-controls="sidebar-collapse-48">
                     &#10148;   <!-- ➤ (because this one is rendered blue on mobile: ▶  -->
                  </a>
                  <a class="sidebar-hide collapsed" data-toggle="collapse" href="#sidebar-collapse-48" aria-expanded="true" aria-controls="sidebar-collapse-48">
                    &#x25BC;    <!-- ▼ (because the corresponding one is not rendered) -->
                  </a>
                    <a href="48">3.1  Assignment and Local State</a>
                </h5>
              </div>
              <div id="sidebar-collapse-48" class="collapse" role="tabpanel" aria-labelledby="headingOne">
                <div class="card-block">
                                <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-49">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-49" aria-expanded="false" aria-controls="sidebar-collapse-49">
                    <a href="49">3.1.1          Local State Variables      </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-50">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-50" aria-expanded="false" aria-controls="sidebar-collapse-50">
                    <a href="50">3.1.2          The Benefits of Introducing Assignment      </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-51">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-51" aria-expanded="false" aria-controls="sidebar-collapse-51">
                    <a href="51">3.1.3          The Costs of Introducing Assignment      </a>
                  </span>
                </h5>
              </div>
            </div>

                </div>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-52">
                <h5 class="mb-0">
                  <a class="sidebar-show collapsed" data-toggle="collapse" href="#sidebar-collapse-52" aria-expanded="true" aria-controls="sidebar-collapse-52">
                     &#10148;   <!-- ➤ (because this one is rendered blue on mobile: ▶  -->
                  </a>
                  <a class="sidebar-hide collapsed" data-toggle="collapse" href="#sidebar-collapse-52" aria-expanded="true" aria-controls="sidebar-collapse-52">
                    &#x25BC;    <!-- ▼ (because the corresponding one is not rendered) -->
                  </a>
                    <a href="52">3.2  The Environment Model of Evaluation</a>
                </h5>
              </div>
              <div id="sidebar-collapse-52" class="collapse" role="tabpanel" aria-labelledby="headingOne">
                <div class="card-block">
                                <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-53">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-53" aria-expanded="false" aria-controls="sidebar-collapse-53">
                    <a href="53">3.2.1          The Rules for Evaluation      </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-54">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-54" aria-expanded="false" aria-controls="sidebar-collapse-54">
                    <a href="54">3.2.2          Applying Simple        Functions      </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-55">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-55" aria-expanded="false" aria-controls="sidebar-collapse-55">
                    <a href="55">3.2.3          Frames as the Repository of Local State      </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-56">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-56" aria-expanded="false" aria-controls="sidebar-collapse-56">
                    <a href="56">3.2.4          Internal Definitions      </a>
                  </span>
                </h5>
              </div>
            </div>

                </div>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-57">
                <h5 class="mb-0">
                  <a class="sidebar-show collapsed" data-toggle="collapse" href="#sidebar-collapse-57" aria-expanded="true" aria-controls="sidebar-collapse-57">
                     &#10148;   <!-- ➤ (because this one is rendered blue on mobile: ▶  -->
                  </a>
                  <a class="sidebar-hide collapsed" data-toggle="collapse" href="#sidebar-collapse-57" aria-expanded="true" aria-controls="sidebar-collapse-57">
                    &#x25BC;    <!-- ▼ (because the corresponding one is not rendered) -->
                  </a>
                    <a href="57">3.3  Modeling with Mutable Data</a>
                </h5>
              </div>
              <div id="sidebar-collapse-57" class="collapse" role="tabpanel" aria-labelledby="headingOne">
                <div class="card-block">
                                <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-58">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-58" aria-expanded="false" aria-controls="sidebar-collapse-58">
                    <a href="58">3.3.1          Mutable List Structure      </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-59">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-59" aria-expanded="false" aria-controls="sidebar-collapse-59">
                    <a href="59">3.3.2          Representing Queues      </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-60">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-60" aria-expanded="false" aria-controls="sidebar-collapse-60">
                    <a href="60">3.3.3          Representing Tables      </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-61">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-61" aria-expanded="false" aria-controls="sidebar-collapse-61">
                    <a href="61">3.3.4          A Simulator for Digital Circuits      </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-62">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-62" aria-expanded="false" aria-controls="sidebar-collapse-62">
                    <a href="62">3.3.5          Propagation of Constraints      </a>
                  </span>
                </h5>
              </div>
            </div>

                </div>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-63">
                <h5 class="mb-0">
                  <a class="sidebar-show collapsed" data-toggle="collapse" href="#sidebar-collapse-63" aria-expanded="true" aria-controls="sidebar-collapse-63">
                     &#10148;   <!-- ➤ (because this one is rendered blue on mobile: ▶  -->
                  </a>
                  <a class="sidebar-hide collapsed" data-toggle="collapse" href="#sidebar-collapse-63" aria-expanded="true" aria-controls="sidebar-collapse-63">
                    &#x25BC;    <!-- ▼ (because the corresponding one is not rendered) -->
                  </a>
                    <a href="63">3.4  Concurrency: Time Is of the Essence</a>
                </h5>
              </div>
              <div id="sidebar-collapse-63" class="collapse" role="tabpanel" aria-labelledby="headingOne">
                <div class="card-block">
                                <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-64">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-64" aria-expanded="false" aria-controls="sidebar-collapse-64">
                    <a href="64">3.4.1      The Nature of Time in Concurrent Systems  </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-65">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-65" aria-expanded="false" aria-controls="sidebar-collapse-65">
                    <a href="65">3.4.2      Mechanisms for Controlling Concurrency  </a>
                  </span>
                </h5>
              </div>
            </div>

                </div>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-66">
                <h5 class="mb-0">
                  <a class="sidebar-show collapsed" data-toggle="collapse" href="#sidebar-collapse-66" aria-expanded="true" aria-controls="sidebar-collapse-66">
                     &#10148;   <!-- ➤ (because this one is rendered blue on mobile: ▶  -->
                  </a>
                  <a class="sidebar-hide collapsed" data-toggle="collapse" href="#sidebar-collapse-66" aria-expanded="true" aria-controls="sidebar-collapse-66">
                    &#x25BC;    <!-- ▼ (because the corresponding one is not rendered) -->
                  </a>
                    <a href="66">3.5  Streams</a>
                </h5>
              </div>
              <div id="sidebar-collapse-66" class="collapse" role="tabpanel" aria-labelledby="headingOne">
                <div class="card-block">
                                <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-67">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-67" aria-expanded="false" aria-controls="sidebar-collapse-67">
                    <a href="67">3.5.1      Streams Are Delayed Lists  </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-68">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-68" aria-expanded="false" aria-controls="sidebar-collapse-68">
                    <a href="68">3.5.2      Infinite Streams  </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-69">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-69" aria-expanded="false" aria-controls="sidebar-collapse-69">
                    <a href="69">3.5.3      Exploiting the Stream Paradigm  </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-70">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-70" aria-expanded="false" aria-controls="sidebar-collapse-70">
                    <a href="70">3.5.4      Streams and Delayed Evaluation  </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-71">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-71" aria-expanded="false" aria-controls="sidebar-collapse-71">
                    <a href="71">3.5.5      Modularity of Functional Programs and Modularity of Objects  </a>
                  </span>
                </h5>
              </div>
            </div>

                </div>
              </div>
            </div>

                </div>
              </div>
            </div>

                     <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-72">
                <h5 class="mb-0">
                  <a class="sidebar-show collapsed" data-toggle="collapse" href="#sidebar-collapse-72" aria-expanded="true" aria-controls="sidebar-collapse-72">
                     &#10148;   <!-- ➤ (because this one is rendered blue on mobile: ▶  -->
                  </a>
                  <a class="sidebar-hide collapsed" data-toggle="collapse" href="#sidebar-collapse-72" aria-expanded="true" aria-controls="sidebar-collapse-72">
                    &#x25BC;    <!-- ▼ (because the corresponding one is not rendered) -->
                  </a>
                    <a href="72">4  Metalinguistic Abstraction</a>
                </h5>
              </div>
              <div id="sidebar-collapse-72" class="collapse" role="tabpanel" aria-labelledby="headingOne">
                <div class="card-block">
                                <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-73">
                <h5 class="mb-0">
                  <a class="sidebar-show collapsed" data-toggle="collapse" href="#sidebar-collapse-73" aria-expanded="true" aria-controls="sidebar-collapse-73">
                     &#10148;   <!-- ➤ (because this one is rendered blue on mobile: ▶  -->
                  </a>
                  <a class="sidebar-hide collapsed" data-toggle="collapse" href="#sidebar-collapse-73" aria-expanded="true" aria-controls="sidebar-collapse-73">
                    &#x25BC;    <!-- ▼ (because the corresponding one is not rendered) -->
                  </a>
                    <a href="73">4.1  The Metacircular Evaluator</a>
                </h5>
              </div>
              <div id="sidebar-collapse-73" class="collapse" role="tabpanel" aria-labelledby="headingOne">
                <div class="card-block">
                                <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-74">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-74" aria-expanded="false" aria-controls="sidebar-collapse-74">
                    <a href="74">4.1.1      The Core of the Evaluator  </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-75">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-75" aria-expanded="false" aria-controls="sidebar-collapse-75">
                    <a href="75">4.1.2      Representing                Statements and Expressions      </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-76">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-76" aria-expanded="false" aria-controls="sidebar-collapse-76">
                    <a href="76">4.1.3      Evaluator Data Structures  </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-77">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-77" aria-expanded="false" aria-controls="sidebar-collapse-77">
                    <a href="77">4.1.4      Running the Evaluator as a Program  </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-78">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-78" aria-expanded="false" aria-controls="sidebar-collapse-78">
                    <a href="78">4.1.5    Data as Programs      </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-79">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-79" aria-expanded="false" aria-controls="sidebar-collapse-79">
                    <a href="79">4.1.6      Internal Declarations  </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-80">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-80" aria-expanded="false" aria-controls="sidebar-collapse-80">
                    <a href="80">4.1.7      Separating Syntactic Analysis from Execution  </a>
                  </span>
                </h5>
              </div>
            </div>

                </div>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-81">
                <h5 class="mb-0">
                  <a class="sidebar-show collapsed" data-toggle="collapse" href="#sidebar-collapse-81" aria-expanded="true" aria-controls="sidebar-collapse-81">
                     &#10148;   <!-- ➤ (because this one is rendered blue on mobile: ▶  -->
                  </a>
                  <a class="sidebar-hide collapsed" data-toggle="collapse" href="#sidebar-collapse-81" aria-expanded="true" aria-controls="sidebar-collapse-81">
                    &#x25BC;    <!-- ▼ (because the corresponding one is not rendered) -->
                  </a>
                    <a href="81">4.2    Lazy Evaluation</a>
                </h5>
              </div>
              <div id="sidebar-collapse-81" class="collapse" role="tabpanel" aria-labelledby="headingOne">
                <div class="card-block">
                                <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-82">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-82" aria-expanded="false" aria-controls="sidebar-collapse-82">
                    <a href="82">4.2.1      Normal Order and Applicative Order  </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-83">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-83" aria-expanded="false" aria-controls="sidebar-collapse-83">
                    <a href="83">4.2.2      An Interpreter with Lazy Evaluation  </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-84">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-84" aria-expanded="false" aria-controls="sidebar-collapse-84">
                    <a href="84">4.2.3      Streams as Lazy Lists  </a>
                  </span>
                </h5>
              </div>
            </div>

                </div>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-85">
                <h5 class="mb-0">
                  <a class="sidebar-show collapsed" data-toggle="collapse" href="#sidebar-collapse-85" aria-expanded="true" aria-controls="sidebar-collapse-85">
                     &#10148;   <!-- ➤ (because this one is rendered blue on mobile: ▶  -->
                  </a>
                  <a class="sidebar-hide collapsed" data-toggle="collapse" href="#sidebar-collapse-85" aria-expanded="true" aria-controls="sidebar-collapse-85">
                    &#x25BC;    <!-- ▼ (because the corresponding one is not rendered) -->
                  </a>
                    <a href="85">4.3   Nondeterministic Computing</a>
                </h5>
              </div>
              <div id="sidebar-collapse-85" class="collapse" role="tabpanel" aria-labelledby="headingOne">
                <div class="card-block">
                                <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-86">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-86" aria-expanded="false" aria-controls="sidebar-collapse-86">
                    <a href="86">4.3.1    Amb and Search      </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-87">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-87" aria-expanded="false" aria-controls="sidebar-collapse-87">
                    <a href="87">4.3.2    Examples of Nondeterministic Programs      </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-88">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-88" aria-expanded="false" aria-controls="sidebar-collapse-88">
                    <a href="88">4.3.3    Implementing the amb Evaluator      </a>
                  </span>
                </h5>
              </div>
            </div>

                </div>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-89">
                <h5 class="mb-0">
                  <a class="sidebar-show collapsed" data-toggle="collapse" href="#sidebar-collapse-89" aria-expanded="true" aria-controls="sidebar-collapse-89">
                     &#10148;   <!-- ➤ (because this one is rendered blue on mobile: ▶  -->
                  </a>
                  <a class="sidebar-hide collapsed" data-toggle="collapse" href="#sidebar-collapse-89" aria-expanded="true" aria-controls="sidebar-collapse-89">
                    &#x25BC;    <!-- ▼ (because the corresponding one is not rendered) -->
                  </a>
                    <a href="89">4.4  Logic Programming</a>
                </h5>
              </div>
              <div id="sidebar-collapse-89" class="collapse" role="tabpanel" aria-labelledby="headingOne">
                <div class="card-block">
                                <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-90">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-90" aria-expanded="false" aria-controls="sidebar-collapse-90">
                    <a href="90">4.4.1    Deductive Information Retrieval      </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-91">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-91" aria-expanded="false" aria-controls="sidebar-collapse-91">
                    <a href="91">4.4.2    How the Query System Works      </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-92">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-92" aria-expanded="false" aria-controls="sidebar-collapse-92">
                    <a href="92">4.4.3    Is Logic Programming Mathematical Logic?      </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-93">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-93" aria-expanded="false" aria-controls="sidebar-collapse-93">
                    <a href="93">4.4.4    Implementing the Query System      </a>
                  </span>
                </h5>
              </div>
            </div>

                </div>
              </div>
            </div>

                </div>
              </div>
            </div>

                     <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-94">
                <h5 class="mb-0">
                  <a class="sidebar-show collapsed" data-toggle="collapse" href="#sidebar-collapse-94" aria-expanded="true" aria-controls="sidebar-collapse-94">
                     &#10148;   <!-- ➤ (because this one is rendered blue on mobile: ▶  -->
                  </a>
                  <a class="sidebar-hide collapsed" data-toggle="collapse" href="#sidebar-collapse-94" aria-expanded="true" aria-controls="sidebar-collapse-94">
                    &#x25BC;    <!-- ▼ (because the corresponding one is not rendered) -->
                  </a>
                    <a href="94">5  Computing with Register Machines</a>
                </h5>
              </div>
              <div id="sidebar-collapse-94" class="collapse" role="tabpanel" aria-labelledby="headingOne">
                <div class="card-block">
                                <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-95">
                <h5 class="mb-0">
                  <a class="sidebar-show collapsed" data-toggle="collapse" href="#sidebar-collapse-95" aria-expanded="true" aria-controls="sidebar-collapse-95">
                     &#10148;   <!-- ➤ (because this one is rendered blue on mobile: ▶  -->
                  </a>
                  <a class="sidebar-hide collapsed" data-toggle="collapse" href="#sidebar-collapse-95" aria-expanded="true" aria-controls="sidebar-collapse-95">
                    &#x25BC;    <!-- ▼ (because the corresponding one is not rendered) -->
                  </a>
                    <a href="95">5.1  Designing Register Machines</a>
                </h5>
              </div>
              <div id="sidebar-collapse-95" class="collapse" role="tabpanel" aria-labelledby="headingOne">
                <div class="card-block">
                                <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-96">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-96" aria-expanded="false" aria-controls="sidebar-collapse-96">
                    <a href="96">5.1.1    A Language for Describing Register Machines      </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-97">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-97" aria-expanded="false" aria-controls="sidebar-collapse-97">
                    <a href="97">5.1.2    Abstraction in Machine Design      </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-98">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-98" aria-expanded="false" aria-controls="sidebar-collapse-98">
                    <a href="98">5.1.3    Subroutines      </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-99">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-99" aria-expanded="false" aria-controls="sidebar-collapse-99">
                    <a href="99">5.1.4    Using a Stack to Implement Recursion      </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-100">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-100" aria-expanded="false" aria-controls="sidebar-collapse-100">
                    <a href="100">5.1.5    Instruction Summary      </a>
                  </span>
                </h5>
              </div>
            </div>

                </div>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-101">
                <h5 class="mb-0">
                  <a class="sidebar-show collapsed" data-toggle="collapse" href="#sidebar-collapse-101" aria-expanded="true" aria-controls="sidebar-collapse-101">
                     &#10148;   <!-- ➤ (because this one is rendered blue on mobile: ▶  -->
                  </a>
                  <a class="sidebar-hide collapsed" data-toggle="collapse" href="#sidebar-collapse-101" aria-expanded="true" aria-controls="sidebar-collapse-101">
                    &#x25BC;    <!-- ▼ (because the corresponding one is not rendered) -->
                  </a>
                    <a href="101">5.2  A Register-Machine Simulator</a>
                </h5>
              </div>
              <div id="sidebar-collapse-101" class="collapse" role="tabpanel" aria-labelledby="headingOne">
                <div class="card-block">
                                <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-102">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-102" aria-expanded="false" aria-controls="sidebar-collapse-102">
                    <a href="102">5.2.1    The Machine Model      </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-103">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-103" aria-expanded="false" aria-controls="sidebar-collapse-103">
                    <a href="103">5.2.2    The Assembler      </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-104">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-104" aria-expanded="false" aria-controls="sidebar-collapse-104">
                    <a href="104">5.2.3    Generating Execution  Functions  for Instructions      </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-105">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-105" aria-expanded="false" aria-controls="sidebar-collapse-105">
                    <a href="105">5.2.4    Monitoring Machine Performance      </a>
                  </span>
                </h5>
              </div>
            </div>

                </div>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-106">
                <h5 class="mb-0">
                  <a class="sidebar-show collapsed" data-toggle="collapse" href="#sidebar-collapse-106" aria-expanded="true" aria-controls="sidebar-collapse-106">
                     &#10148;   <!-- ➤ (because this one is rendered blue on mobile: ▶  -->
                  </a>
                  <a class="sidebar-hide collapsed" data-toggle="collapse" href="#sidebar-collapse-106" aria-expanded="true" aria-controls="sidebar-collapse-106">
                    &#x25BC;    <!-- ▼ (because the corresponding one is not rendered) -->
                  </a>
                    <a href="106">5.3  Storage Allocation and Garbage Collection</a>
                </h5>
              </div>
              <div id="sidebar-collapse-106" class="collapse" role="tabpanel" aria-labelledby="headingOne">
                <div class="card-block">
                                <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-107">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-107" aria-expanded="false" aria-controls="sidebar-collapse-107">
                    <a href="107">5.3.1    Memory as Vectors      </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-108">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-108" aria-expanded="false" aria-controls="sidebar-collapse-108">
                    <a href="108">5.3.2    Maintaining the Illusion of Infinite Memory      </a>
                  </span>
                </h5>
              </div>
            </div>

                </div>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-109">
                <h5 class="mb-0">
                  <a class="sidebar-show collapsed" data-toggle="collapse" href="#sidebar-collapse-109" aria-expanded="true" aria-controls="sidebar-collapse-109">
                     &#10148;   <!-- ➤ (because this one is rendered blue on mobile: ▶  -->
                  </a>
                  <a class="sidebar-hide collapsed" data-toggle="collapse" href="#sidebar-collapse-109" aria-expanded="true" aria-controls="sidebar-collapse-109">
                    &#x25BC;    <!-- ▼ (because the corresponding one is not rendered) -->
                  </a>
                    <a href="109">5.4  The Explicit-Control Evaluator</a>
                </h5>
              </div>
              <div id="sidebar-collapse-109" class="collapse" role="tabpanel" aria-labelledby="headingOne">
                <div class="card-block">
                                <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-110">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-110" aria-expanded="false" aria-controls="sidebar-collapse-110">
                    <a href="110">5.4.1    The Core of the Explicit-Control Evaluator      </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-111">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-111" aria-expanded="false" aria-controls="sidebar-collapse-111">
                    <a href="111">5.4.2    Sequence Evaluation and Tail Recursion      </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-112">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-112" aria-expanded="false" aria-controls="sidebar-collapse-112">
                    <a href="112">5.4.3    Conditionals, Assignments, and Definitions      </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-113">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-113" aria-expanded="false" aria-controls="sidebar-collapse-113">
                    <a href="113">5.4.4    Running the Evaluator      </a>
                  </span>
                </h5>
              </div>
            </div>

                </div>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-114">
                <h5 class="mb-0">
                  <a class="sidebar-show collapsed" data-toggle="collapse" href="#sidebar-collapse-114" aria-expanded="true" aria-controls="sidebar-collapse-114">
                     &#10148;   <!-- ➤ (because this one is rendered blue on mobile: ▶  -->
                  </a>
                  <a class="sidebar-hide collapsed" data-toggle="collapse" href="#sidebar-collapse-114" aria-expanded="true" aria-controls="sidebar-collapse-114">
                    &#x25BC;    <!-- ▼ (because the corresponding one is not rendered) -->
                  </a>
                    <a href="114">5.5  Compilation</a>
                </h5>
              </div>
              <div id="sidebar-collapse-114" class="collapse" role="tabpanel" aria-labelledby="headingOne">
                <div class="card-block">
                                <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-115">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-115" aria-expanded="false" aria-controls="sidebar-collapse-115">
                    <a href="115">5.5.1    Structure of the Compiler      </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-116">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-116" aria-expanded="false" aria-controls="sidebar-collapse-116">
                    <a href="116">5.5.2    Compiling Expressions      </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-117">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-117" aria-expanded="false" aria-controls="sidebar-collapse-117">
                    <a href="117">5.5.3    Compiling Combinations      </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-118">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-118" aria-expanded="false" aria-controls="sidebar-collapse-118">
                    <a href="118">5.5.4    Combining Instruction Sequences      </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-119">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-119" aria-expanded="false" aria-controls="sidebar-collapse-119">
                    <a href="119">5.5.5    An Example of Compiled Code      </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-120">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-120" aria-expanded="false" aria-controls="sidebar-collapse-120">
                    <a href="120">5.5.6    Lexical Addressing      </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-121">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-121" aria-expanded="false" aria-controls="sidebar-collapse-121">
                    <a href="121">5.5.7    Interfacing Compiled Code to the Evaluator      </a>
                  </span>
                </h5>
              </div>
            </div>

                </div>
              </div>
            </div>

                </div>
              </div>
            </div>

                     <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-125">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-125" aria-expanded="false" aria-controls="sidebar-collapse-125">
                    <a href="125">References</a>
                  </span>
                </h5>
              </div>
            </div>

                     <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-126">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-126" aria-expanded="false" aria-controls="sidebar-collapse-126">
                    <a href="126">Index</a>
                  </span>
                </h5>
              </div>
            </div>

                     <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-127">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-127" aria-expanded="false" aria-controls="sidebar-collapse-127">
                    <a href="127">Making of the JavaScript Adaptation</a>
                  </span>
                </h5>
              </div>
            </div>

       </div>

           <div id="permalink-msg">
  <div class="screen">
    <div class="alert alert-success">
      <strong>Permalink copied!</strong> 
    </div>
  </div>
</div>
<div class="chapter-content">

  <div class="chapter-title">
    <div class="permalink">
      <a name="top" class="permalink">3.3.3 
        Representing Tables
      </a>
    </div>
  </div>
    <div class="chapter-text" >
        <div class="SUBSECTION"><SUBSECTION> 
      

      
      

      <div class="permalink">
<a name="p1" class="permalink"></a><p>
        
        When we studied various ways of representing sets in chapter 2, we
        mentioned in section <REF NAME="sec:representing-sets"><a class="superscript" id="3.3.3-sec-link-2.3.3" href="37">2.3.3</a></REF> the task of
        maintaining a table of records indexed by identifying keys.  In the
        implementation of data-directed programming in
        section <REF NAME="sec:data-directed"><a class="superscript" id="3.3.3-sec-link-2.4.3" href="42">2.4.3</a></REF>, we made extensive use of
        two-dimensional tables, in which information is stored and retrieved
        using two keys.  Here we see how to build tables as mutable list
        structures.
      </p>
</div>

      <div class="permalink">
<a name="p2" class="permalink"></a><p>
        
        We first consider a one-dimensional table, in which each value is
        stored under a single key.  We implement the table as a list of
        records, each of which is implemented as a pair consisting of a key
        and the associated value. The records are glued together to form a
        list by pairs whose <kbd>head</kbd>s point to successive records.  These
        gluing pairs are called the 
        
        <EM>backbone</EM> of the table.  In order to
        have a place that we can change when we add a new record to the table,
        we build the table as a 
        
        
        <EM>headed list</EM>.  A headed list has a
        special backbone pair at the beginning, which holds a dummy
        <QUOTE>record</QUOTE>—in this case the arbitrarily chosen 
  string <kbd>"*table*"</kbd>. Figure <REF NAME="fig:table"><a class="superscript" id="3.3.3-fig-link-3.22" href="60#fig_3.22">3.22</a></REF> shows the box-and-pointer diagram for the table

        <div class="snippet" id="javascript_60_0_div"><div class="pre-prettyprint"><pre class="prettyprint no-eval">a: 1
b: 2
c: 3</pre></div></div>

        <SPLIT>
          
          
            <FIGURE>
              <img src="img_javascript/ch3-Z-G-22.svg">
              <div class="chapter-text-CAPTION">
<b><a class="caption" id="fig_3.22" href="60#fig_3.22">Figure 3.22 </a></b>A table represented as a headed list. </div>
              
            </FIGURE>
          
        </SPLIT>

      </p>
</div>

      <div class="permalink">
<a name="p3" class="permalink"></a><p>
        To extract information from a table we use the <kbd>lookup</kbd>
        function, which takes a key as argument and returns the associated
        value (or false if there is no value stored under that key).
        The function <kbd>lookup</kbd> is defined in terms of the <kbd>assoc</kbd> operation, which
        expects a key and a list of records as arguments.  
  Note that <kbd>assoc</kbd> never sees the dummy record.  
  The function <kbd>assoc</kbd> returns the record
        that has the given key as its <kbd>head</kbd>.<SPLIT><a class="superscript" id="footnote-link-1" href="60#footnote-1">[1]</a></SPLIT>
        The function <kbd>lookup</kbd> then
        checks to see that the resulting record returned by <kbd>assoc</kbd> is not
        false, and returns the value (the <kbd>tail</kbd>) of the record.

        <div class="snippet" id="javascript_60_1_div"><div class="pre-prettyprint"><pre class="prettyprint" title="Evaluate Javascript expression" onclick="var compressed = LZString.compressToEncodedURIComponent('\nfunction is_equal(a, b) {\n    return (is_pair(a) &amp;&amp; is_pair(b) &amp;&amp;\n            is_equal(head(a), head(b)) &amp;&amp; is_equal(tail(a), tail(b)))\n           || \n           a === b;\n}\n        \nfunction assoc(key, records) {\n    return is_null(records)\n           ? undefined\n           : is_equal(key, head(head(records)))\n             ? head(records)\n             : assoc(key, tail(records));\n}\n    '+'\n'+'function lookup(key, table) {\n    const record = assoc(key, tail(table));\n    return record === undefined\n           ? undefined\n           : tail(record);\n}'+'\n'+''+'\n'); var url = 'https://source-academy.github.io/playground#chap=3&amp;prgrm='+compressed; window.open(url); ">function lookup(key, table) {
    const record = assoc(key, tail(table));
    return record === undefined
           ? undefined
           : tail(record);
}</pre></div></div>

    <div class="snippet" id="javascript_60_2_div"><div class="pre-prettyprint"><pre class="prettyprint" title="Evaluate Javascript expression" onclick="var compressed = LZString.compressToEncodedURIComponent('\nfunction is_equal(a, b) {\n    return (is_pair(a) &amp;&amp; is_pair(b) &amp;&amp;\n            is_equal(head(a), head(b)) &amp;&amp; is_equal(tail(a), tail(b)))\n           || \n           a === b;\n}\n        '+'\n'+'function assoc(key, records) {\n    return is_null(records)\n           ? undefined\n           : is_equal(key, head(head(records)))\n             ? head(records)\n             : assoc(key, tail(records));\n}'+'\n'+''+'\n'); var url = 'https://source-academy.github.io/playground#chap=3&amp;prgrm='+compressed; window.open(url); ">function assoc(key, records) {
    return is_null(records)
           ? undefined
           : is_equal(key, head(head(records)))
             ? head(records)
             : assoc(key, tail(records));
}</pre></div></div>
      </p>
</div>

      <div class="permalink">
<a name="p4" class="permalink"></a><p>
        To insert a value in a table under a specified key, we first use <kbd>assoc</kbd> to see if there is already a record in the table with this key.
        If not, we form a new record by <kbd>pair</kbd>ing the key with the value,
        and insert this at the head of the table's list of records, after the
        dummy record.  If there already is a record with this key, we set the
        <kbd>tail</kbd> of this record to the designated new value.  The header of
        the table provides us with a fixed location to modify in order to
        insert the new record.<a class="superscript" id="footnote-link-2" href="60#footnote-2">[2]</a>

        <div class="snippet" id="javascript_60_3_div"><div class="pre-prettyprint"><pre class="prettyprint" title="Evaluate Javascript expression" onclick="var compressed = LZString.compressToEncodedURIComponent('\nfunction is_equal(a, b) {\n    return (is_pair(a) &amp;&amp; is_pair(b) &amp;&amp;\n            is_equal(head(a), head(b)) &amp;&amp; is_equal(tail(a), tail(b)))\n           || \n           a === b;\n}\n        \nfunction assoc(key, records) {\n    return is_null(records)\n           ? undefined\n           : is_equal(key, head(head(records)))\n             ? head(records)\n             : assoc(key, tail(records));\n}\n    '+'\n'+'function insert(key, value, table) {\n    const record = assoc(key, tail(table));\n    return record === undefined\n           ? set_tail(table, pair(pair(key, value),\n                                  tail(table)))\n           : set_tail(record, value);\n}'+'\n'+''+'\n'); var url = 'https://source-academy.github.io/playground#chap=3&amp;prgrm='+compressed; window.open(url); ">function insert(key, value, table) {
    const record = assoc(key, tail(table));
    return record === undefined
           ? set_tail(table, pair(pair(key, value),
                                  tail(table)))
           : set_tail(record, value);
}</pre></div></div>
      </p>
</div>

      <div class="permalink">
<a name="p5" class="permalink"></a><p>
        To construct a new table, we simply create a list containing the
        symbol <kbd>*table*</kbd>:

        <div class="snippet" id="javascript_60_4_div"><div class="pre-prettyprint"><pre class="prettyprint" title="Evaluate Javascript expression" onclick="var compressed = LZString.compressToEncodedURIComponent(''+'\n'+'function make_table() {\n    return list(&quot;*table*&quot;);\n}'+'\n'+''+'\n'); var url = 'https://source-academy.github.io/playground#chap=3&amp;prgrm='+compressed; window.open(url); ">function make_table() {
    return list("*table*");
}</pre></div></div>
        
      </p>
</div>

      <div class="permalink">
<a name="h1" class="permalink"></a><h2> 
        Two-dimensional tables
      </h2>
</div>

      

      <div class="permalink">
<a name="p6" class="permalink"></a><p>
        In a two-dimensional table, each value is indexed by two keys.  We can
        construct such a table as a one-dimensional table in which each key identifies a subtable.
        Figure <REF NAME="fig:2dtable"><a class="superscript" id="3.3.3-fig-link-3.23" href="60#fig_3.23">3.23</a></REF> shows the box-and-pointer diagram for the table
        <div class="snippet" id="javascript_60_5_div"><div class="pre-prettyprint"><pre class="prettyprint no-eval">math:
    +:  43
    -:  45
    *:  42
letters:
    a:  97
    b:  98</pre></div></div>
        which has two subtables.  (The subtables don't need a
        special header symbol, since the key that identifies the subtable
        serves this purpose.)

        <SPLIT>
          
          
            <FIGURE>
              <img src="img_javascript/ch3-Z-G-23.svg">
              <div class="chapter-text-CAPTION">
<b><a class="caption" id="fig_3.23" href="60#fig_3.23">Figure 3.23 </a></b>A two-dimensional table.</div>
              
            </FIGURE>
          
        </SPLIT>

      </p>
</div>

      <div class="permalink">
<a name="p7" class="permalink"></a><p>
        When we look up an item, we use the first key
        to identify the correct subtable.  Then we use the second key to
        identify the record within the subtable.

        <div class="snippet" id="javascript_60_6_div"><div class="pre-prettyprint"><pre class="prettyprint" title="Evaluate Javascript expression" onclick="var compressed = LZString.compressToEncodedURIComponent('\nfunction is_equal(a, b) {\n    return (is_pair(a) &amp;&amp; is_pair(b) &amp;&amp;\n            is_equal(head(a), head(b)) &amp;&amp; is_equal(tail(a), tail(b)))\n           || \n           a === b;\n}\n        \nfunction assoc(key, records) {\n    return is_null(records)\n           ? undefined\n           : is_equal(key, head(head(records)))\n             ? head(records)\n             : assoc(key, tail(records));\n}\n    '+'\n'+'function lookup(key_1, key_2, table) {\n    const subtable = assoc(key_1, tail(table));\n    if (subtable === undefined) {\n        return undefined;\n    } else {\n        const record = assoc(key_2, tail(subtable));\n        if (record === undefined) {\n            return undefined;\n        } else {\n            return tail(record);\n        }\n    }\n}'+'\n'+''+'\n'); var url = 'https://source-academy.github.io/playground#chap=3&amp;prgrm='+compressed; window.open(url); ">function lookup(key_1, key_2, table) {
    const subtable = assoc(key_1, tail(table));
    if (subtable === undefined) {
        return undefined;
    } else {
        const record = assoc(key_2, tail(subtable));
        if (record === undefined) {
            return undefined;
        } else {
            return tail(record);
        }
    }
}</pre></div></div>
      </p>
</div>

      <div class="permalink">
<a name="p8" class="permalink"></a><p>
        To insert a new item under a pair of keys, we use <kbd>assoc</kbd> to see if
        there is a subtable stored under the first key.  If not, we build a
        new subtable containing the single record (<kbd>key_2</kbd>, <kbd>value</kbd>)
        and insert it into the table under the first key.  If a subtable
        already exists for the first key, we insert the new record into this
        subtable, using the insertion method for one-dimensional tables
        described above:

        <div class="snippet" id="javascript_60_7_div"><div class="pre-prettyprint"><pre class="prettyprint" title="Evaluate Javascript expression" onclick="var compressed = LZString.compressToEncodedURIComponent('\nfunction is_equal(a, b) {\n    return (is_pair(a) &amp;&amp; is_pair(b) &amp;&amp;\n            is_equal(head(a), head(b)) &amp;&amp; is_equal(tail(a), tail(b)))\n           || \n           a === b;\n}\n        \nfunction assoc(key, records) {\n    return is_null(records)\n           ? undefined\n           : is_equal(key, head(head(records)))\n             ? head(records)\n             : assoc(key, tail(records));\n}\n    '+'\n'+'function insert(key_1, key_2, value, table) {\n    const subtable = assoc(key_1, tail(table));\n    if (subtable === undefined) {\n        set_tail(table,\n                 pair(list(key_1, pair(key_2, value)),\n                      tail(table)));\n    } else {\n        const record = assoc(key_2, tail(table));\n        if (record === undefined) {\n            set_tail(subtable,\n                     pair(pair(key_2, value),\n                          tail(subtable)));\n        } else {\n            set_tail(record, value);\n        }\n    }\n}'+'\n'+''+'\n'); var url = 'https://source-academy.github.io/playground#chap=3&amp;prgrm='+compressed; window.open(url); ">function insert(key_1, key_2, value, table) {
    const subtable = assoc(key_1, tail(table));
    if (subtable === undefined) {
        set_tail(table,
                 pair(list(key_1, pair(key_2, value)),
                      tail(table)));
    } else {
        const record = assoc(key_2, tail(table));
        if (record === undefined) {
            set_tail(subtable,
                     pair(pair(key_2, value),
                          tail(subtable)));
        } else {
            set_tail(record, value);
        }
    }
}</pre></div></div>
        
      </p>
</div>

      <div class="permalink">
<a name="h2" class="permalink"></a><h2> 
        Creating local tables
      </h2>
</div>

      

      <div class="permalink">
<a name="p9" class="permalink"></a><p>
        The <kbd>lookup</kbd> and 
  <kbd>insert</kbd>
  operations defined above take the
        table as an argument.  This enables us to use programs that access
        more than one table.  Another way to deal with multiple tables is to
        have separate <kbd>lookup</kbd> and 
        <kbd>insert</kbd>
        functions
        for each
        table.  We can do this by representing a table 
            procedurally, 
        as an
        object that maintains an internal table as part of its local state.
        When sent an appropriate message, this <QUOTE>table object</QUOTE> supplies the
        function
        with which to operate on the internal table.  Here is a
        generator for two-dimensional tables represented in this fashion:
        
        <div class="snippet" id="javascript_60_8_div"><div class="pre-prettyprint"><pre class="prettyprint" title="Evaluate Javascript expression" onclick="var compressed = LZString.compressToEncodedURIComponent(''+'\n'+'function make_table() {\n    const local_table = list(&quot;*table*&quot;);\n    function lookup(key_1, key_2) {\n        const subtable = assoc(key_1, tail(local_table));\n        if (subtable === undefined) {\n            return undefined;\n        } else {\n            const record = assoc(key_2, tail(subtable));\n            if (record === undefined) {\n                return undefined;\n            } else {\n                return tail(record);\n            }\n        }\n    }\n    function insert(key_1, key_2, value) {\n        const subtable = assoc(key_1, tail(local_table));\n        if (subtable === undefined) {\n            set_tail(local_table,\n                     pair(list(key_1, pair(key_2, value)),\n                          tail(local_table)));\n        } else {\n            const record = assoc(key_2, tail(subtable));\n            if (record === undefined) {\n      	        set_tail(subtable,\n	                       pair(pair(key_2, value),\n                              tail(subtable)));\n	    } else {\n                set_tail(record, value);\n            }\n        }\n    }\n    function dispatch(m) {\n        return m === &quot;lookup&quot;\n               ? lookup\n               : m === &quot;insert&quot;\n                 ? insert\n                 : &quot;undefined operation -- table&quot;;\n    }\n    return dispatch;\n}'+'\n'+''+'\n'); var url = 'https://source-academy.github.io/playground#chap=3&amp;prgrm='+compressed; window.open(url); ">function make_table() {
    const local_table = list("*table*");
    function lookup(key_1, key_2) {
        const subtable = assoc(key_1, tail(local_table));
        if (subtable === undefined) {
            return undefined;
        } else {
            const record = assoc(key_2, tail(subtable));
            if (record === undefined) {
                return undefined;
            } else {
                return tail(record);
            }
        }
    }
    function insert(key_1, key_2, value) {
        const subtable = assoc(key_1, tail(local_table));
        if (subtable === undefined) {
            set_tail(local_table,
                     pair(list(key_1, pair(key_2, value)),
                          tail(local_table)));
        } else {
            const record = assoc(key_2, tail(subtable));
            if (record === undefined) {
      	        set_tail(subtable,
	                       pair(pair(key_2, value),
                              tail(subtable)));
	    } else {
                set_tail(record, value);
            }
        }
    }
    function dispatch(m) {
        return m === "lookup"
               ? lookup
               : m === "insert"
                 ? insert
                 : "undefined operation -- table";
    }
    return dispatch;
}</pre></div></div>
      </p>
</div>

      <div class="permalink">
<a name="p10" class="permalink"></a><p>
        Using <kbd>make_table</kbd>, we could implement the <kbd>get</kbd> and <kbd>put</kbd>
        operations used in section <REF NAME="sec:data-directed"><a class="superscript" id="3.3.3-sec-link-2.4.3" href="42">2.4.3</a></REF> for data-directed
        programming, as follows:

        <div class="snippet" id="javascript_60_9_div"><div class="pre-prettyprint"><pre class="prettyprint" title="Evaluate Javascript expression" onclick="var compressed = LZString.compressToEncodedURIComponent('\nfunction is_equal(a, b) {\n    return (is_pair(a) &amp;&amp; is_pair(b) &amp;&amp;\n            is_equal(head(a), head(b)) &amp;&amp; is_equal(tail(a), tail(b)))\n           || \n           a === b;\n}\n        \nfunction assoc(key, records) {\n    return is_null(records)\n           ? undefined\n           : is_equal(key, head(head(records)))\n             ? head(records)\n             : assoc(key, tail(records));\n}\n    \nfunction make_table() {\n    const local_table = list(&quot;*table*&quot;);\n    function lookup(key_1, key_2) {\n        const subtable = assoc(key_1, tail(local_table));\n        if (subtable === undefined) {\n            return undefined;\n        } else {\n            const record = assoc(key_2, tail(subtable));\n            if (record === undefined) {\n                return undefined;\n            } else {\n                return tail(record);\n            }\n        }\n    }\n    function insert(key_1, key_2, value) {\n        const subtable = assoc(key_1, tail(local_table));\n        if (subtable === undefined) {\n            set_tail(local_table,\n                     pair(list(key_1, pair(key_2, value)),\n                          tail(local_table)));\n        } else {\n            const record = assoc(key_2, tail(subtable));\n            if (record === undefined) {\n      	        set_tail(subtable,\n	                       pair(pair(key_2, value),\n                              tail(subtable)));\n	    } else {\n                set_tail(record, value);\n            }\n        }\n    }\n    function dispatch(m) {\n        return m === &quot;lookup&quot;\n               ? lookup\n               : m === &quot;insert&quot;\n                 ? insert\n                 : &quot;undefined operation -- table&quot;;\n    }\n    return dispatch;\n}\n    '+'\n'+'const operation_table = make_table();\nconst get = operation_table(&quot;lookup&quot;);\nconst put = operation_table(&quot;insert&quot;);'+'\n'+''+'\n'); var url = 'https://source-academy.github.io/playground#chap=3&amp;prgrm='+compressed; window.open(url); ">const operation_table = make_table();
const get = operation_table("lookup");
const put = operation_table("insert");</pre></div></div>
      </p>
</div>

      <div class="permalink">
<a name="p11" class="permalink"></a><p>
        The function <kbd>get</kbd>
  takes as arguments two keys, and <kbd>put</kbd> takes
        as arguments two keys and a value.  Both operations access the same
        local table, which is encapsulated within the object created by the
        call to 
  <kbd>make_table</kbd>.
        
      </p>
</div>

      <div class="permalink">
<a name="ex_3.24" class="permalink"></a><EXERCISE><b><a class="exercise-number permalink" id="ex_3.24">Exercise 3.24 </a></b> 
        
        
        In the table implementations above, the keys are tested for equality
        using 
        <kbd>is_equal</kbd>
        (called by <kbd>assoc</kbd>).  This is not always the appropriate test.  For
        instance, we might have a table with numeric keys in which we don't
        need an exact match to the number we're looking up,
        but only a number within some tolerance of it.
        Design a table constructor 
  <kbd>make_table</kbd>
        that takes as an argument a 
  <kbd>same_key</kbd>
        function
        that will be used to test <QUOTE>equality</QUOTE> of keys.  
  The function <kbd>make_table</kbd> should
        return a <kbd>dispatch</kbd>
        function
        that can be used to access
        appropriate 
  <kbd>lookup</kbd> and 
<kbd>insert</kbd>
        functions
        for a local
        table.
        
      <div class="Solution">
<div class="solution_btn"><button class="btn btn-secondary solution_btn" href="#no_solution_60_1_div" data-toggle="collapse">Add solution</button></div>
<div class="solution_content collapse" id="no_solution_60_1_div">There is currently no solution available for this exercise. This textbook adaptation is a community effort. Do consider contributing by providing a solution for this exercise, using a Pull Request in <a address="https://github.com/source-academy/sicp" href="https://github.com/source-academy/sicp">Github</a>.</div>
</div></EXERCISE>
</div>

      <div class="permalink">
<a name="ex_3.25" class="permalink"></a><EXERCISE><b><a class="exercise-number permalink" id="ex_3.25">Exercise 3.25 </a></b> 
        
        Generalizing one- and two-dimensional tables, show how to implement a
        table in which values are stored under an arbitrary number of keys and
        different values may be stored under different numbers of keys.  The
        <kbd>lookup</kbd> and 
<kbd>insert</kbd>
        functions
        should take as input a list
        of keys used to access the table.
      <div class="Solution">
<div class="solution_btn"><button class="btn btn-secondary solution_btn" href="#no_solution_60_1_div" data-toggle="collapse">Add solution</button></div>
<div class="solution_content collapse" id="no_solution_60_1_div">There is currently no solution available for this exercise. This textbook adaptation is a community effort. Do consider contributing by providing a solution for this exercise, using a Pull Request in <a address="https://github.com/source-academy/sicp" href="https://github.com/source-academy/sicp">Github</a>.</div>
</div></EXERCISE>
</div>

      <div class="permalink">
<a name="ex_3.26" class="permalink"></a><EXERCISE><b><a class="exercise-number permalink" id="ex_3.26">Exercise 3.26 </a></b>
        
        
        To search a table as implemented above, one needs to scan through the
        list of records.  This is basically the unordered list representation of
        section <REF NAME="sec:representing-sets"><a class="superscript" id="3.3.3-sec-link-2.3.3" href="37">2.3.3</a></REF>.  For large tables, it may be more
        efficient to structure the table in a different manner.  Describe a
        table implementation where the (key, value) records are organized
        using a binary tree, assuming that keys can be ordered in some way
        (e.g., numerically or alphabetically).  (Compare
        exercise <REF NAME="ex:set-lookup-binary-tree"><a class="superscript" id="3.3.3-ex-link-2.66" href="37#ex_2.66">2.66</a></REF> of chapter 2.)
      <div class="Solution">
<div class="solution_btn"><button class="btn btn-secondary solution_btn" href="#no_solution_60_1_div" data-toggle="collapse">Add solution</button></div>
<div class="solution_content collapse" id="no_solution_60_1_div">There is currently no solution available for this exercise. This textbook adaptation is a community effort. Do consider contributing by providing a solution for this exercise, using a Pull Request in <a address="https://github.com/source-academy/sicp" href="https://github.com/source-academy/sicp">Github</a>.</div>
</div></EXERCISE>
</div>

      <div class="permalink">
<a name="ex_3.27" class="permalink"></a><EXERCISE><b><a class="exercise-number permalink" id="ex_3.27">Exercise 3.27 </a></b>
        
        
        
        
        <EM>Memoization</EM> (also called <EM>tabulation</EM>) is a technique that
        enables a
        function
        to record, in a local table, values that have
        previously been computed.  This technique can make a vast difference
        in the performance of a program.  A memoized
        function
        maintains a
        table in which values of previous calls are stored
        using as keys the arguments that produced the values.  When the
        memoized
        function
        is asked to compute a value, it first checks the
        table to see if the value is already there and, if so, just returns
        that value.  Otherwise, it computes the new value in the ordinary way
        and stores this in the table.  As an example of memoization, recall
        from section <REF NAME="sec:tree-recursion"><a class="superscript" id="3.3.3-sec-link-1.2.2" href="13">1.2.2</a></REF> the exponential process for
        computing Fibonacci numbers:

        <div class="snippet" id="javascript_60_10_div"><div class="pre-prettyprint"><pre class="prettyprint" title="Evaluate Javascript expression" onclick="var compressed = LZString.compressToEncodedURIComponent(''+'\n'+'function fib(n) {\n    return n === 0\n           ? 0\n           : n === 1\n             ? 1\n             : fib(n - 1) + fib(n - 2);\n}'+'\n'+''+'\n'); var url = 'https://source-academy.github.io/playground#chap=3&amp;prgrm='+compressed; window.open(url); ">function fib(n) {
    return n === 0
           ? 0
           : n === 1
             ? 1
             : fib(n - 1) + fib(n - 2);
}</pre></div></div>

        The memoized version of the same
        function
        is

        <div class="snippet" id="javascript_60_11_div"><div class="pre-prettyprint"><pre class="prettyprint" title="Evaluate Javascript expression" onclick="var compressed = LZString.compressToEncodedURIComponent('\nfunction make_table() {\n    const local_table = list(&quot;*table*&quot;);\n    function lookup(key_1, key_2) {\n        const subtable = assoc(key_1, tail(local_table));\n        if (subtable === undefined) {\n            return undefined;\n        } else {\n            const record = assoc(key_2, tail(subtable));\n            if (record === undefined) {\n                return undefined;\n            } else {\n                return tail(record);\n            }\n        }\n    }\n    function insert(key_1, key_2, value) {\n        const subtable = assoc(key_1, tail(local_table));\n        if (subtable === undefined) {\n            set_tail(local_table,\n                     pair(list(key_1, pair(key_2, value)),\n                          tail(local_table)));\n        } else {\n            const record = assoc(key_2, tail(subtable));\n            if (record === undefined) {\n      	        set_tail(subtable,\n	                       pair(pair(key_2, value),\n                              tail(subtable)));\n	    } else {\n                set_tail(record, value);\n            }\n        }\n    }\n    function dispatch(m) {\n        return m === &quot;lookup&quot;\n               ? lookup\n               : m === &quot;insert&quot;\n                 ? insert\n                 : &quot;undefined operation -- table&quot;;\n    }\n    return dispatch;\n}\n    \nfunction is_equal(a, b) {\n    return (is_pair(a) &amp;&amp; is_pair(b) &amp;&amp;\n            is_equal(head(a), head(b)) &amp;&amp; is_equal(tail(a), tail(b)))\n           || \n           a === b;\n}\n        \nfunction assoc(key, records) {\n    return is_null(records)\n           ? undefined\n           : is_equal(key, head(head(records)))\n             ? head(records)\n             : assoc(key, tail(records));\n}\n    \nfunction lookup(key_1, key_2, table) {\n    const subtable = assoc(key_1, tail(table));\n    if (subtable === undefined) {\n        return undefined;\n    } else {\n        const record = assoc(key_2, tail(subtable));\n        if (record === undefined) {\n            return undefined;\n        } else {\n            return tail(record);\n        }\n    }\n}\n    \nfunction insert(key_1, key_2, value, table) {\n    const subtable = assoc(key_1, tail(table));\n    if (subtable === undefined) {\n        set_tail(table,\n                 pair(list(key_1, pair(key_2, value)),\n                      tail(table)));\n    } else {\n        const record = assoc(key_2, tail(table));\n        if (record === undefined) {\n            set_tail(subtable,\n                     pair(pair(key_2, value),\n                          tail(subtable)));\n        } else {\n            set_tail(record, value);\n        }\n    }\n}\n    \nfunction memoize(f) {\n    const table = make_table();\n    return x =&gt; {\n        const previously_computed_result \n            = lookup(x, table);\n        if (previously_computed_result === undefined) {\n            const result = f(x);\n            insert(x, result, table);\n            return result;\n        } else {\n            return previously_computed_result;\n        }\n    };\n}\n          '+'\n'+'const memo_fib = memoize(n =&gt; n === 0\n                              ? 0\n                              : n === 1\n                                ? 1\n                                : memo_fib(n - 1) +\n                                  memo_fib(n - 2)\n                        );'+'\n'+''+'\n'); var url = 'https://source-academy.github.io/playground#chap=3&amp;prgrm='+compressed; window.open(url); ">const memo_fib = memoize(n =&gt; n === 0
                              ? 0
                              : n === 1
                                ? 1
                                : memo_fib(n - 1) +
                                  memo_fib(n - 2)
                        );</pre></div></div>

        where the memoizer is defined as
        <div class="snippet" id="javascript_60_12_div"><div class="pre-prettyprint"><pre class="prettyprint" title="Evaluate Javascript expression" onclick="var compressed = LZString.compressToEncodedURIComponent('\nfunction make_table() {\n    const local_table = list(&quot;*table*&quot;);\n    function lookup(key_1, key_2) {\n        const subtable = assoc(key_1, tail(local_table));\n        if (subtable === undefined) {\n            return undefined;\n        } else {\n            const record = assoc(key_2, tail(subtable));\n            if (record === undefined) {\n                return undefined;\n            } else {\n                return tail(record);\n            }\n        }\n    }\n    function insert(key_1, key_2, value) {\n        const subtable = assoc(key_1, tail(local_table));\n        if (subtable === undefined) {\n            set_tail(local_table,\n                     pair(list(key_1, pair(key_2, value)),\n                          tail(local_table)));\n        } else {\n            const record = assoc(key_2, tail(subtable));\n            if (record === undefined) {\n      	        set_tail(subtable,\n	                       pair(pair(key_2, value),\n                              tail(subtable)));\n	    } else {\n                set_tail(record, value);\n            }\n        }\n    }\n    function dispatch(m) {\n        return m === &quot;lookup&quot;\n               ? lookup\n               : m === &quot;insert&quot;\n                 ? insert\n                 : &quot;undefined operation -- table&quot;;\n    }\n    return dispatch;\n}\n    \nfunction is_equal(a, b) {\n    return (is_pair(a) &amp;&amp; is_pair(b) &amp;&amp;\n            is_equal(head(a), head(b)) &amp;&amp; is_equal(tail(a), tail(b)))\n           || \n           a === b;\n}\n        \nfunction assoc(key, records) {\n    return is_null(records)\n           ? undefined\n           : is_equal(key, head(head(records)))\n             ? head(records)\n             : assoc(key, tail(records));\n}\n    \nfunction lookup(key_1, key_2, table) {\n    const subtable = assoc(key_1, tail(table));\n    if (subtable === undefined) {\n        return undefined;\n    } else {\n        const record = assoc(key_2, tail(subtable));\n        if (record === undefined) {\n            return undefined;\n        } else {\n            return tail(record);\n        }\n    }\n}\n    \nfunction insert(key_1, key_2, value, table) {\n    const subtable = assoc(key_1, tail(table));\n    if (subtable === undefined) {\n        set_tail(table,\n                 pair(list(key_1, pair(key_2, value)),\n                      tail(table)));\n    } else {\n        const record = assoc(key_2, tail(table));\n        if (record === undefined) {\n            set_tail(subtable,\n                     pair(pair(key_2, value),\n                          tail(subtable)));\n        } else {\n            set_tail(record, value);\n        }\n    }\n}\n    '+'\n'+'function memoize(f) {\n    const table = make_table();\n    return x =&gt; {\n        const previously_computed_result \n            = lookup(x, table);\n        if (previously_computed_result === undefined) {\n            const result = f(x);\n            insert(x, result, table);\n            return result;\n        } else {\n            return previously_computed_result;\n        }\n    };\n}'+'\n'+''+'\n'); var url = 'https://source-academy.github.io/playground#chap=3&amp;prgrm='+compressed; window.open(url); ">function memoize(f) {
    const table = make_table();
    return x =&gt; {
        const previously_computed_result 
            = lookup(x, table);
        if (previously_computed_result === undefined) {
            const result = f(x);
            insert(x, result, table);
            return result;
        } else {
            return previously_computed_result;
        }
    };
}</pre></div></div>

        Draw an environment diagram to analyze the computation of <kbd>memo_fib(3)</kbd>.  Explain why 
        <kbd>memo_fib</kbd>
  computes the $n$th
        Fibonacci number in a number of steps proportional to $n$.
        Would the scheme still
        work if we had simply defined 
        <kbd>memo_fib</kbd>
  to be <kbd>memoize(fib)</kbd>?
        
      <div class="Solution">
<div class="solution_btn"><button class="btn btn-secondary solution_btn" href="#no_solution_60_1_div" data-toggle="collapse">Add solution</button></div>
<div class="solution_content collapse" id="no_solution_60_1_div">There is currently no solution available for this exercise. This textbook adaptation is a community effort. Do consider contributing by providing a solution for this exercise, using a Pull Request in <a address="https://github.com/source-academy/sicp" href="https://github.com/source-academy/sicp">Github</a>.</div>
</div></EXERCISE>
</div>
      

    <hr>
<div class="footnote">
<a class="footnote-number" id="footnote-1" href="60#footnote-link-1">[1] </a><FOOTNOTE>Because <kbd>assoc</kbd>
          uses <kbd>is_equal</kbd>, it can recognize keys that are strings, numbers,
          or list structure.</FOOTNOTE>
</div>
<div class="footnote">
<a class="footnote-number" id="footnote-2" href="60#footnote-link-2">[2] </a><FOOTNOTE>Thus, the first backbone pair is the
          object that represents the table <QUOTE>itself</QUOTE>; that is, a pointer to the
          table is a pointer to this pair.  This same backbone pair always
          starts the table.  If we did not arrange things in this way,
	  
	    
	    <kbd>insert</kbd>
	    
	  
	  would have to return a new value for the start of the table
          when it added a new record.</FOOTNOTE>
</div></SUBSECTION></div>
    </div>

    <div class="nav">

        <button type="button" class="btn btn-secondary" style="background-color: #fff;">
          <a href="59">&lt; Previous</a>
        </button>

    <div style="flex-grow: 1;"></div>
    
        <button type="button" class="btn btn-secondary" style="background-color: #fff;">
          <a class="scroll-next" href="61">Next &gt;</a>
        </button>


  </div>
  <div class="chapter_sign">
        3.3.3 
        Representing Tables
      
    </div>
  <script>
//<![CDATA[
var chapter_id = 60;
//]]>
</script>
  <div class="next-page"></div>
</div>

     </div><!-- /.container -->


     <!--<script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-alpha.6/js/bootstrap.min.js" integrity="sha384-vBWWzlZJ8ea9aCX4pEW3rVHjgjt7zpkNpZk+02D9phzyeVkE+jo0ieGizqPLForn" crossorigin="anonymous"></script>
     -->
   </body>
</html>
