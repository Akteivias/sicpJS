<!DOCTYPE html>
<html lang="en">
  <head>

<!-- Global site tag (gtag.js) - Google Analytics -->
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-156801664-1"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'UA-156801664-1');
</script>
    
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=Edge,chrome=1">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="description" content="3.1.1 
        Local State Variables
      " />
    <title>
         3.1.1 
        Local State Variables
      
    </title>

    <meta name="csrf-param" content="authenticity_token" />
<meta name="csrf-token" content="L0Gbatd60x0eUJqvEJHOoQAU2c4RRx91QBTbL/GHpfZYKOxsEzTThy9N0Kd/Tm3RJpb0lw/kpQTe1Ewk/zw63w==" />

    <!--<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-alpha.6/css/bootstrap.min.css" integrity="sha384-rwoIResjU2yc3z8GV/NPeZWAv56rSmLldC3R/AZzGRnGxQQKnKkoFVhFQhNUwEyJ" crossorigin="anonymous">
    -->
    <link href="https://fonts.googleapis.com/css?family=Inconsolata&display?swap" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css?family=Droid+Sans|Droid+Serif" rel="stylesheet">
    <link rel="stylesheet" media="all" href="../assets/application-646697584dca3e04ba2ffbdf497816ce21a735eef61eccd54a0f8bf08a4e82e9.css" />

   <link rel="shortcut icon" type="image/x-icon" href="../assets/favicon-17dbf972938cc63d48794e3be2c66977e723014f9a9518097da971fb34202187.ico" />

<!--    <link rel="shortcut icon" type="image/png" href="/images/lambda.png" /> -->

    <!-- for support of progressive web app, see github README -->
    <link rel="manifest" href="../static/manifest.json">

    <script src="https://code.jquery.com/jquery-3.2.1.min.js" 
		     	  integrity="sha256-hwg4gsxgFZhOsEEamdOYGBf13FyQuiTwlAQgxVSNgt4="
	          crossorigin="anonymous">
    </script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/tether/1.4.0/js/tether.min.js"></script>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.6/umd/popper.min.js" integrity="sha384-wHAiFfRlMFy6i5SRaxvfOCifBUQy1xHdJ/yoi7FRNXMRBu5WHdZYu1hA6ZOblgut" crossorigin="anonymous"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.2.1/js/bootstrap.min.js" integrity="sha384-B0UglyR+jN6CkvvICOB2joaf5I4l3gm9GU6Hc1og6Ls7i6U/mkkaduKaBhlAXv9k" crossorigin="anonymous"></script>
    
    <!-- <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-alpha.6/js/bootstrap.min.js" integrity="sha384-vBWWzlZJ8ea9aCX4pEW3rVHjgjt7zpkNpZk+02D9phzyeVkE+jo0ieGizqPLForn" crossorigin="anonymous"></script> -->
    <script type="text/javascript" 
      src="https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.4/latest.js?config=TeX-AMS-MML_HTMLorMML-full">
    </script>
   <!--  <script type="text/javascript" 
      src="../MathJax/MathJax.js?config=TeX-AMS-MML_HTMLorMML-full">
    </script> -->

    <script src="../assets/application-77eef7aa2695bed514b473158fa8f35a6ae4cb10c6e0f2ae8e2b485af0611d43.js"></script>

    <!-- Rendering inline LaTeX -->
    <script type="text/x-mathjax-config">
      MathJax.Hub.Config({
        tex2jax: {
          inlineMath: [ ['$','$'], ["\\(","\\)"] ],
          processEscapes: true,
          jax: ["input/TeX","output/HTML-CSS"]
        }
      });
    </script>
    <!--<script src="/mathjax/MathJax.js?config=TeX-AMS_HTML-full.js" type="text/javascript"></script>-->
    <!-- Le HTML5 shim, for IE6-8 support of HTML elements -->
    <!--[if lt IE 9]>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.2/html5shiv.min.js" type="text/javascript"></script>
    <![endif]-->
  </head>
  <body>

    
    <!-- support for progressive web app, see README -->
    <script>
      if ('serviceWorker' in navigator && !navigator.serviceWorker.controller) {
          navigator.serviceWorker.register("/sw.js").then(function(reg) {
              console.log("Service worker has been registered for scope: " + reg.scope);
          });
      }
    </script>

     <nav class="navbar navbar-expand-sm navbar-dark bg-dark fixed-top justify-content-between">
       <button id="btn" class="navbar-toggler collapsed" type="button" data-toggle="collapse" data-target="#nav-sidebar" aria-controls="nav-sidebar" aria-expanded="false" aria-label="Toggle navigation" title="navigation">
         <span class="navbar-toggler-icon"></span>
       </button>
       <span class="navbar-brand-short"><a title="Go back to front page" href="../index.html" class="gray">SICP &mdash; JS</a></span>
       <span class="navbar-brand-long" ><a title="Go back to front page" href="../index.html" class="gray">Structure and Interpretation
            of Computer Programs &mdash; JavaScript Adaptation</a></span>

       <!-- edit the search engine by visiting: 
	    https://cse.google.com/cse/setup/basic?cx=015760785273492757659:nc_tznrzlsg 
	       -->
       <form class="form-inline ml-auto" id="xxx">
         <div id="search-box">
	         <script>
	           (function() {
	               var cx = "015760785273492757659:nc_tznrzlsg";
	               var gcse = document.createElement("script");
	               gcse.type = "text/javascript";
	               gcse.async = true;
	               gcse.src = "https://cse.google.com/cse.js?cx=" + cx;
	               var s = document.getElementsByTagName("script")[0];
	               s.parentNode.insertBefore(gcse, s);
	           })();
	           window.onload = function()
	           { 
	               var searchBox =  document.getElementById("gsc-i-id1");
	               searchBox.placeholder="search web edition";
	               searchBox.title="search web edition"; 
	           }
	         </script>
	         <gcse:search></gcse:search>
         </div>
       </form>
       <span class="navbar-brand-short">
         &nbsp;
         &nbsp;
         <a href="https://sicp.comp.nus.edu.sg/source/" title="Go to the Source language(s) definition(s)" class="gray">S</a>
       </span>
       <span class="navbar-brand-long">
         &nbsp;
         &nbsp;
         <a href="https://sicp.comp.nus.edu.sg/source/" title="Go to the Source language(s) definition(s)" class="gray">Source</a>
       </span>
     </nav>
     
     <div class="container scroll">

       <div class="collapse" id="nav-sidebar" role="tablist" aria-multiselectable="true">
	 <!-- insert a dummy entry, to give one extra line of space -->
         <a class="navbar-brand" href="index.html">&nbsp;</a>
                     <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-122">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-122" aria-expanded="false" aria-controls="sidebar-collapse-122">
                    <a href="122">        Foreword    </a>
                  </span>
                </h5>
              </div>
            </div>

                     <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-123">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-123" aria-expanded="false" aria-controls="sidebar-collapse-123">
                    <a href="123">        Prefaces    </a>
                  </span>
                </h5>
              </div>
            </div>

                     <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-124">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-124" aria-expanded="false" aria-controls="sidebar-collapse-124">
                    <a href="124">Acknowledgments    </a>
                  </span>
                </h5>
              </div>
            </div>

                     <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-1">
                <h5 class="mb-0">
                  <a class="sidebar-show collapsed" data-toggle="collapse" href="#sidebar-collapse-1" aria-expanded="true" aria-controls="sidebar-collapse-1">
                     &#10148;   <!-- ➤ (because this one is rendered blue on mobile: ▶  -->
                  </a>
                  <a class="sidebar-hide collapsed" data-toggle="collapse" href="#sidebar-collapse-1" aria-expanded="true" aria-controls="sidebar-collapse-1">
                    &#x25BC;    <!-- ▼ (because the corresponding one is not rendered) -->
                  </a>
                    <a href="1">1        Building Abstractions with       Functions    </a>
                </h5>
              </div>
              <div id="sidebar-collapse-1" class="collapse" role="tabpanel" aria-labelledby="headingOne">
                <div class="card-block">
                                <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-2">
                <h5 class="mb-0">
                  <a class="sidebar-show collapsed" data-toggle="collapse" href="#sidebar-collapse-2" aria-expanded="true" aria-controls="sidebar-collapse-2">
                     &#10148;   <!-- ➤ (because this one is rendered blue on mobile: ▶  -->
                  </a>
                  <a class="sidebar-hide collapsed" data-toggle="collapse" href="#sidebar-collapse-2" aria-expanded="true" aria-controls="sidebar-collapse-2">
                    &#x25BC;    <!-- ▼ (because the corresponding one is not rendered) -->
                  </a>
                    <a href="2">1.1  The Elements of Programming</a>
                </h5>
              </div>
              <div id="sidebar-collapse-2" class="collapse" role="tabpanel" aria-labelledby="headingOne">
                <div class="card-block">
                                <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-3">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-3" aria-expanded="false" aria-controls="sidebar-collapse-3">
                    <a href="3">1.1.1  Expressions</a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-4">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-4" aria-expanded="false" aria-controls="sidebar-collapse-4">
                    <a href="4">1.1.2  Naming and the Environment</a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-5">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-5" aria-expanded="false" aria-controls="sidebar-collapse-5">
                    <a href="5">1.1.3            Evaluating          Operator Combinations        </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-6">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-6" aria-expanded="false" aria-controls="sidebar-collapse-6">
                    <a href="6">1.1.4            Functions        </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-7">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-7" aria-expanded="false" aria-controls="sidebar-collapse-7">
                    <a href="7">1.1.5            The Substitution Model for                                                 Function                              Application        </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-8">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-8" aria-expanded="false" aria-controls="sidebar-collapse-8">
                    <a href="8">1.1.6            Conditional Expressions and Predicates        </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-9">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-9" aria-expanded="false" aria-controls="sidebar-collapse-9">
                    <a href="9">1.1.7  Example: Square Roots by Newtons Method</a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-10">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-10" aria-expanded="false" aria-controls="sidebar-collapse-10">
                    <a href="10">1.1.8                                                  Functions                                as Black-Box Abstractions        </a>
                  </span>
                </h5>
              </div>
            </div>

                </div>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-11">
                <h5 class="mb-0">
                  <a class="sidebar-show collapsed" data-toggle="collapse" href="#sidebar-collapse-11" aria-expanded="true" aria-controls="sidebar-collapse-11">
                     &#10148;   <!-- ➤ (because this one is rendered blue on mobile: ▶  -->
                  </a>
                  <a class="sidebar-hide collapsed" data-toggle="collapse" href="#sidebar-collapse-11" aria-expanded="true" aria-controls="sidebar-collapse-11">
                    &#x25BC;    <!-- ▼ (because the corresponding one is not rendered) -->
                  </a>
                    <a href="11">1.2              Functions            and the Processes They Generate      </a>
                </h5>
              </div>
              <div id="sidebar-collapse-11" class="collapse" role="tabpanel" aria-labelledby="headingOne">
                <div class="card-block">
                                <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-12">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-12" aria-expanded="false" aria-controls="sidebar-collapse-12">
                    <a href="12">1.2.1  Linear Recursion and Iteration</a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-13">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-13" aria-expanded="false" aria-controls="sidebar-collapse-13">
                    <a href="13">1.2.2  Tree Recursion</a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-14">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-14" aria-expanded="false" aria-controls="sidebar-collapse-14">
                    <a href="14">1.2.3  Orders of Growth</a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-15">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-15" aria-expanded="false" aria-controls="sidebar-collapse-15">
                    <a href="15">1.2.4  Exponentiation</a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-16">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-16" aria-expanded="false" aria-controls="sidebar-collapse-16">
                    <a href="16">1.2.5  Greatest Common Divisors</a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-17">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-17" aria-expanded="false" aria-controls="sidebar-collapse-17">
                    <a href="17">1.2.6  Example: Testing for Primality</a>
                  </span>
                </h5>
              </div>
            </div>

                </div>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-18">
                <h5 class="mb-0">
                  <a class="sidebar-show collapsed" data-toggle="collapse" href="#sidebar-collapse-18" aria-expanded="true" aria-controls="sidebar-collapse-18">
                     &#10148;   <!-- ➤ (because this one is rendered blue on mobile: ▶  -->
                  </a>
                  <a class="sidebar-hide collapsed" data-toggle="collapse" href="#sidebar-collapse-18" aria-expanded="true" aria-controls="sidebar-collapse-18">
                    &#x25BC;    <!-- ▼ (because the corresponding one is not rendered) -->
                  </a>
                    <a href="18">1.3          Formulating Abstractions with Higher-Order         Functions      </a>
                </h5>
              </div>
              <div id="sidebar-collapse-18" class="collapse" role="tabpanel" aria-labelledby="headingOne">
                <div class="card-block">
                                <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-19">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-19" aria-expanded="false" aria-controls="sidebar-collapse-19">
                    <a href="19">1.3.1            Functions          as Arguments        </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-20">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-20" aria-expanded="false" aria-controls="sidebar-collapse-20">
                    <a href="20">1.3.2            Function Definition Expressions          </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-21">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-21" aria-expanded="false" aria-controls="sidebar-collapse-21">
                    <a href="21">1.3.3              Functions            as General Methods          </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-22">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-22" aria-expanded="false" aria-controls="sidebar-collapse-22">
                    <a href="22">1.3.4      Functions    as Returned Values  </a>
                  </span>
                </h5>
              </div>
            </div>

                </div>
              </div>
            </div>

                </div>
              </div>
            </div>

                     <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-23">
                <h5 class="mb-0">
                  <a class="sidebar-show collapsed" data-toggle="collapse" href="#sidebar-collapse-23" aria-expanded="true" aria-controls="sidebar-collapse-23">
                     &#10148;   <!-- ➤ (because this one is rendered blue on mobile: ▶  -->
                  </a>
                  <a class="sidebar-hide collapsed" data-toggle="collapse" href="#sidebar-collapse-23" aria-expanded="true" aria-controls="sidebar-collapse-23">
                    &#x25BC;    <!-- ▼ (because the corresponding one is not rendered) -->
                  </a>
                    <a href="23">2  Building Abstractions with Data</a>
                </h5>
              </div>
              <div id="sidebar-collapse-23" class="collapse" role="tabpanel" aria-labelledby="headingOne">
                <div class="card-block">
                                <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-24">
                <h5 class="mb-0">
                  <a class="sidebar-show collapsed" data-toggle="collapse" href="#sidebar-collapse-24" aria-expanded="true" aria-controls="sidebar-collapse-24">
                     &#10148;   <!-- ➤ (because this one is rendered blue on mobile: ▶  -->
                  </a>
                  <a class="sidebar-hide collapsed" data-toggle="collapse" href="#sidebar-collapse-24" aria-expanded="true" aria-controls="sidebar-collapse-24">
                    &#x25BC;    <!-- ▼ (because the corresponding one is not rendered) -->
                  </a>
                    <a href="24">2.1  Introduction to Data Abstraction</a>
                </h5>
              </div>
              <div id="sidebar-collapse-24" class="collapse" role="tabpanel" aria-labelledby="headingOne">
                <div class="card-block">
                                <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-25">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-25" aria-expanded="false" aria-controls="sidebar-collapse-25">
                    <a href="25">2.1.1      Example: Arithmetic Operations for Rational Numbers  </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-26">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-26" aria-expanded="false" aria-controls="sidebar-collapse-26">
                    <a href="26">2.1.2          Abstraction Barriers      </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-27">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-27" aria-expanded="false" aria-controls="sidebar-collapse-27">
                    <a href="27">2.1.3          What Is Meant by Data?      </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-28">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-28" aria-expanded="false" aria-controls="sidebar-collapse-28">
                    <a href="28">2.1.4          Extended Exercise: Interval Arithmetic      </a>
                  </span>
                </h5>
              </div>
            </div>

                </div>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-29">
                <h5 class="mb-0">
                  <a class="sidebar-show collapsed" data-toggle="collapse" href="#sidebar-collapse-29" aria-expanded="true" aria-controls="sidebar-collapse-29">
                     &#10148;   <!-- ➤ (because this one is rendered blue on mobile: ▶  -->
                  </a>
                  <a class="sidebar-hide collapsed" data-toggle="collapse" href="#sidebar-collapse-29" aria-expanded="true" aria-controls="sidebar-collapse-29">
                    &#x25BC;    <!-- ▼ (because the corresponding one is not rendered) -->
                  </a>
                    <a href="29">2.2  Hierarchical Data and the Closure Property</a>
                </h5>
              </div>
              <div id="sidebar-collapse-29" class="collapse" role="tabpanel" aria-labelledby="headingOne">
                <div class="card-block">
                                <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-30">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-30" aria-expanded="false" aria-controls="sidebar-collapse-30">
                    <a href="30">2.2.1          Representing Sequences      </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-31">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-31" aria-expanded="false" aria-controls="sidebar-collapse-31">
                    <a href="31">2.2.2          Hierarchical Structures      </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-32">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-32" aria-expanded="false" aria-controls="sidebar-collapse-32">
                    <a href="32">2.2.3          Sequences as Conventional Interfaces      </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-33">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-33" aria-expanded="false" aria-controls="sidebar-collapse-33">
                    <a href="33">2.2.4          Example: A Picture Language      </a>
                  </span>
                </h5>
              </div>
            </div>

                </div>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-34">
                <h5 class="mb-0">
                  <a class="sidebar-show collapsed" data-toggle="collapse" href="#sidebar-collapse-34" aria-expanded="true" aria-controls="sidebar-collapse-34">
                     &#10148;   <!-- ➤ (because this one is rendered blue on mobile: ▶  -->
                  </a>
                  <a class="sidebar-hide collapsed" data-toggle="collapse" href="#sidebar-collapse-34" aria-expanded="true" aria-controls="sidebar-collapse-34">
                    &#x25BC;    <!-- ▼ (because the corresponding one is not rendered) -->
                  </a>
                    <a href="34">2.3  Symbolic Data</a>
                </h5>
              </div>
              <div id="sidebar-collapse-34" class="collapse" role="tabpanel" aria-labelledby="headingOne">
                <div class="card-block">
                                <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-35">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-35" aria-expanded="false" aria-controls="sidebar-collapse-35">
                    <a href="35">2.3.1          Strings      </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-36">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-36" aria-expanded="false" aria-controls="sidebar-collapse-36">
                    <a href="36">2.3.2          Example: Symbolic Differentiation      </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-37">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-37" aria-expanded="false" aria-controls="sidebar-collapse-37">
                    <a href="37">2.3.3          Example: Representing Sets      </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-38">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-38" aria-expanded="false" aria-controls="sidebar-collapse-38">
                    <a href="38">2.3.4          Example: Huffman Encoding Trees      </a>
                  </span>
                </h5>
              </div>
            </div>

                </div>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-39">
                <h5 class="mb-0">
                  <a class="sidebar-show collapsed" data-toggle="collapse" href="#sidebar-collapse-39" aria-expanded="true" aria-controls="sidebar-collapse-39">
                     &#10148;   <!-- ➤ (because this one is rendered blue on mobile: ▶  -->
                  </a>
                  <a class="sidebar-hide collapsed" data-toggle="collapse" href="#sidebar-collapse-39" aria-expanded="true" aria-controls="sidebar-collapse-39">
                    &#x25BC;    <!-- ▼ (because the corresponding one is not rendered) -->
                  </a>
                    <a href="39">2.4  Multiple Representations for Abstract Data</a>
                </h5>
              </div>
              <div id="sidebar-collapse-39" class="collapse" role="tabpanel" aria-labelledby="headingOne">
                <div class="card-block">
                                <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-40">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-40" aria-expanded="false" aria-controls="sidebar-collapse-40">
                    <a href="40">2.4.1          Representations for Complex Numbers      </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-41">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-41" aria-expanded="false" aria-controls="sidebar-collapse-41">
                    <a href="41">2.4.2          Tagged data      </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-42">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-42" aria-expanded="false" aria-controls="sidebar-collapse-42">
                    <a href="42">2.4.3          Data-Directed Programming and Additivity      </a>
                  </span>
                </h5>
              </div>
            </div>

                </div>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-43">
                <h5 class="mb-0">
                  <a class="sidebar-show collapsed" data-toggle="collapse" href="#sidebar-collapse-43" aria-expanded="true" aria-controls="sidebar-collapse-43">
                     &#10148;   <!-- ➤ (because this one is rendered blue on mobile: ▶  -->
                  </a>
                  <a class="sidebar-hide collapsed" data-toggle="collapse" href="#sidebar-collapse-43" aria-expanded="true" aria-controls="sidebar-collapse-43">
                    &#x25BC;    <!-- ▼ (because the corresponding one is not rendered) -->
                  </a>
                    <a href="43">2.5  Systems with Generic Operations</a>
                </h5>
              </div>
              <div id="sidebar-collapse-43" class="collapse" role="tabpanel" aria-labelledby="headingOne">
                <div class="card-block">
                                <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-44">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-44" aria-expanded="false" aria-controls="sidebar-collapse-44">
                    <a href="44">2.5.1          Generic Arithmetic Operations      </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-45">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-45" aria-expanded="false" aria-controls="sidebar-collapse-45">
                    <a href="45">2.5.2          Combining Data of Different Types      </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-46">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-46" aria-expanded="false" aria-controls="sidebar-collapse-46">
                    <a href="46">2.5.3          Example: Symbolic Algebra      </a>
                  </span>
                </h5>
              </div>
            </div>

                </div>
              </div>
            </div>

                </div>
              </div>
            </div>

                     <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-47">
                <h5 class="mb-0">
                  <a class="sidebar-show collapsed" data-toggle="collapse" href="#sidebar-collapse-47" aria-expanded="true" aria-controls="sidebar-collapse-47">
                     &#10148;   <!-- ➤ (because this one is rendered blue on mobile: ▶  -->
                  </a>
                  <a class="sidebar-hide collapsed" data-toggle="collapse" href="#sidebar-collapse-47" aria-expanded="true" aria-controls="sidebar-collapse-47">
                    &#x25BC;    <!-- ▼ (because the corresponding one is not rendered) -->
                  </a>
                    <a href="47">3  Modularity, Objects, and State</a>
                </h5>
              </div>
              <div id="sidebar-collapse-47" class="collapse" role="tabpanel" aria-labelledby="headingOne">
                <div class="card-block">
                                <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-48">
                <h5 class="mb-0">
                  <a class="sidebar-show collapsed" data-toggle="collapse" href="#sidebar-collapse-48" aria-expanded="true" aria-controls="sidebar-collapse-48">
                     &#10148;   <!-- ➤ (because this one is rendered blue on mobile: ▶  -->
                  </a>
                  <a class="sidebar-hide collapsed" data-toggle="collapse" href="#sidebar-collapse-48" aria-expanded="true" aria-controls="sidebar-collapse-48">
                    &#x25BC;    <!-- ▼ (because the corresponding one is not rendered) -->
                  </a>
                    <a href="48">3.1  Assignment and Local State</a>
                </h5>
              </div>
              <div id="sidebar-collapse-48" class="collapse" role="tabpanel" aria-labelledby="headingOne">
                <div class="card-block">
                                <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-49">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-49" aria-expanded="false" aria-controls="sidebar-collapse-49">
                    <a href="49">3.1.1          Local State Variables      </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-50">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-50" aria-expanded="false" aria-controls="sidebar-collapse-50">
                    <a href="50">3.1.2          The Benefits of Introducing Assignment      </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-51">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-51" aria-expanded="false" aria-controls="sidebar-collapse-51">
                    <a href="51">3.1.3          The Costs of Introducing Assignment      </a>
                  </span>
                </h5>
              </div>
            </div>

                </div>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-52">
                <h5 class="mb-0">
                  <a class="sidebar-show collapsed" data-toggle="collapse" href="#sidebar-collapse-52" aria-expanded="true" aria-controls="sidebar-collapse-52">
                     &#10148;   <!-- ➤ (because this one is rendered blue on mobile: ▶  -->
                  </a>
                  <a class="sidebar-hide collapsed" data-toggle="collapse" href="#sidebar-collapse-52" aria-expanded="true" aria-controls="sidebar-collapse-52">
                    &#x25BC;    <!-- ▼ (because the corresponding one is not rendered) -->
                  </a>
                    <a href="52">3.2  The Environment Model of Evaluation</a>
                </h5>
              </div>
              <div id="sidebar-collapse-52" class="collapse" role="tabpanel" aria-labelledby="headingOne">
                <div class="card-block">
                                <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-53">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-53" aria-expanded="false" aria-controls="sidebar-collapse-53">
                    <a href="53">3.2.1          The Rules for Evaluation      </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-54">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-54" aria-expanded="false" aria-controls="sidebar-collapse-54">
                    <a href="54">3.2.2          Applying Simple        Functions      </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-55">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-55" aria-expanded="false" aria-controls="sidebar-collapse-55">
                    <a href="55">3.2.3          Frames as the Repository of Local State      </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-56">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-56" aria-expanded="false" aria-controls="sidebar-collapse-56">
                    <a href="56">3.2.4          Internal Definitions      </a>
                  </span>
                </h5>
              </div>
            </div>

                </div>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-57">
                <h5 class="mb-0">
                  <a class="sidebar-show collapsed" data-toggle="collapse" href="#sidebar-collapse-57" aria-expanded="true" aria-controls="sidebar-collapse-57">
                     &#10148;   <!-- ➤ (because this one is rendered blue on mobile: ▶  -->
                  </a>
                  <a class="sidebar-hide collapsed" data-toggle="collapse" href="#sidebar-collapse-57" aria-expanded="true" aria-controls="sidebar-collapse-57">
                    &#x25BC;    <!-- ▼ (because the corresponding one is not rendered) -->
                  </a>
                    <a href="57">3.3  Modeling with Mutable Data</a>
                </h5>
              </div>
              <div id="sidebar-collapse-57" class="collapse" role="tabpanel" aria-labelledby="headingOne">
                <div class="card-block">
                                <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-58">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-58" aria-expanded="false" aria-controls="sidebar-collapse-58">
                    <a href="58">3.3.1          Mutable List Structure      </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-59">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-59" aria-expanded="false" aria-controls="sidebar-collapse-59">
                    <a href="59">3.3.2          Representing Queues      </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-60">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-60" aria-expanded="false" aria-controls="sidebar-collapse-60">
                    <a href="60">3.3.3          Representing Tables      </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-61">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-61" aria-expanded="false" aria-controls="sidebar-collapse-61">
                    <a href="61">3.3.4          A Simulator for Digital Circuits      </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-62">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-62" aria-expanded="false" aria-controls="sidebar-collapse-62">
                    <a href="62">3.3.5          Propagation of Constraints      </a>
                  </span>
                </h5>
              </div>
            </div>

                </div>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-63">
                <h5 class="mb-0">
                  <a class="sidebar-show collapsed" data-toggle="collapse" href="#sidebar-collapse-63" aria-expanded="true" aria-controls="sidebar-collapse-63">
                     &#10148;   <!-- ➤ (because this one is rendered blue on mobile: ▶  -->
                  </a>
                  <a class="sidebar-hide collapsed" data-toggle="collapse" href="#sidebar-collapse-63" aria-expanded="true" aria-controls="sidebar-collapse-63">
                    &#x25BC;    <!-- ▼ (because the corresponding one is not rendered) -->
                  </a>
                    <a href="63">3.4  Concurrency: Time Is of the Essence</a>
                </h5>
              </div>
              <div id="sidebar-collapse-63" class="collapse" role="tabpanel" aria-labelledby="headingOne">
                <div class="card-block">
                                <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-64">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-64" aria-expanded="false" aria-controls="sidebar-collapse-64">
                    <a href="64">3.4.1      The Nature of Time in Concurrent Systems  </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-65">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-65" aria-expanded="false" aria-controls="sidebar-collapse-65">
                    <a href="65">3.4.2      Mechanisms for Controlling Concurrency  </a>
                  </span>
                </h5>
              </div>
            </div>

                </div>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-66">
                <h5 class="mb-0">
                  <a class="sidebar-show collapsed" data-toggle="collapse" href="#sidebar-collapse-66" aria-expanded="true" aria-controls="sidebar-collapse-66">
                     &#10148;   <!-- ➤ (because this one is rendered blue on mobile: ▶  -->
                  </a>
                  <a class="sidebar-hide collapsed" data-toggle="collapse" href="#sidebar-collapse-66" aria-expanded="true" aria-controls="sidebar-collapse-66">
                    &#x25BC;    <!-- ▼ (because the corresponding one is not rendered) -->
                  </a>
                    <a href="66">3.5  Streams</a>
                </h5>
              </div>
              <div id="sidebar-collapse-66" class="collapse" role="tabpanel" aria-labelledby="headingOne">
                <div class="card-block">
                                <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-67">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-67" aria-expanded="false" aria-controls="sidebar-collapse-67">
                    <a href="67">3.5.1      Streams Are Delayed Lists  </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-68">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-68" aria-expanded="false" aria-controls="sidebar-collapse-68">
                    <a href="68">3.5.2      Infinite Streams  </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-69">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-69" aria-expanded="false" aria-controls="sidebar-collapse-69">
                    <a href="69">3.5.3      Exploiting the Stream Paradigm  </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-70">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-70" aria-expanded="false" aria-controls="sidebar-collapse-70">
                    <a href="70">3.5.4      Streams and Delayed Evaluation  </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-71">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-71" aria-expanded="false" aria-controls="sidebar-collapse-71">
                    <a href="71">3.5.5      Modularity of Functional Programs and Modularity of Objects  </a>
                  </span>
                </h5>
              </div>
            </div>

                </div>
              </div>
            </div>

                </div>
              </div>
            </div>

                     <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-72">
                <h5 class="mb-0">
                  <a class="sidebar-show collapsed" data-toggle="collapse" href="#sidebar-collapse-72" aria-expanded="true" aria-controls="sidebar-collapse-72">
                     &#10148;   <!-- ➤ (because this one is rendered blue on mobile: ▶  -->
                  </a>
                  <a class="sidebar-hide collapsed" data-toggle="collapse" href="#sidebar-collapse-72" aria-expanded="true" aria-controls="sidebar-collapse-72">
                    &#x25BC;    <!-- ▼ (because the corresponding one is not rendered) -->
                  </a>
                    <a href="72">4  Metalinguistic Abstraction</a>
                </h5>
              </div>
              <div id="sidebar-collapse-72" class="collapse" role="tabpanel" aria-labelledby="headingOne">
                <div class="card-block">
                                <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-73">
                <h5 class="mb-0">
                  <a class="sidebar-show collapsed" data-toggle="collapse" href="#sidebar-collapse-73" aria-expanded="true" aria-controls="sidebar-collapse-73">
                     &#10148;   <!-- ➤ (because this one is rendered blue on mobile: ▶  -->
                  </a>
                  <a class="sidebar-hide collapsed" data-toggle="collapse" href="#sidebar-collapse-73" aria-expanded="true" aria-controls="sidebar-collapse-73">
                    &#x25BC;    <!-- ▼ (because the corresponding one is not rendered) -->
                  </a>
                    <a href="73">4.1  The Metacircular Evaluator</a>
                </h5>
              </div>
              <div id="sidebar-collapse-73" class="collapse" role="tabpanel" aria-labelledby="headingOne">
                <div class="card-block">
                                <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-74">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-74" aria-expanded="false" aria-controls="sidebar-collapse-74">
                    <a href="74">4.1.1      The Core of the Evaluator  </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-75">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-75" aria-expanded="false" aria-controls="sidebar-collapse-75">
                    <a href="75">4.1.2      Representing                Statements and Expressions      </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-76">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-76" aria-expanded="false" aria-controls="sidebar-collapse-76">
                    <a href="76">4.1.3      Evaluator Data Structures  </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-77">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-77" aria-expanded="false" aria-controls="sidebar-collapse-77">
                    <a href="77">4.1.4      Running the Evaluator as a Program  </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-78">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-78" aria-expanded="false" aria-controls="sidebar-collapse-78">
                    <a href="78">4.1.5    Data as Programs      </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-79">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-79" aria-expanded="false" aria-controls="sidebar-collapse-79">
                    <a href="79">4.1.6      Internal Declarations  </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-80">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-80" aria-expanded="false" aria-controls="sidebar-collapse-80">
                    <a href="80">4.1.7      Separating Syntactic Analysis from Execution  </a>
                  </span>
                </h5>
              </div>
            </div>

                </div>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-81">
                <h5 class="mb-0">
                  <a class="sidebar-show collapsed" data-toggle="collapse" href="#sidebar-collapse-81" aria-expanded="true" aria-controls="sidebar-collapse-81">
                     &#10148;   <!-- ➤ (because this one is rendered blue on mobile: ▶  -->
                  </a>
                  <a class="sidebar-hide collapsed" data-toggle="collapse" href="#sidebar-collapse-81" aria-expanded="true" aria-controls="sidebar-collapse-81">
                    &#x25BC;    <!-- ▼ (because the corresponding one is not rendered) -->
                  </a>
                    <a href="81">4.2    Lazy Evaluation</a>
                </h5>
              </div>
              <div id="sidebar-collapse-81" class="collapse" role="tabpanel" aria-labelledby="headingOne">
                <div class="card-block">
                                <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-82">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-82" aria-expanded="false" aria-controls="sidebar-collapse-82">
                    <a href="82">4.2.1      Normal Order and Applicative Order  </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-83">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-83" aria-expanded="false" aria-controls="sidebar-collapse-83">
                    <a href="83">4.2.2      An Interpreter with Lazy Evaluation  </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-84">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-84" aria-expanded="false" aria-controls="sidebar-collapse-84">
                    <a href="84">4.2.3      Streams as Lazy Lists  </a>
                  </span>
                </h5>
              </div>
            </div>

                </div>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-85">
                <h5 class="mb-0">
                  <a class="sidebar-show collapsed" data-toggle="collapse" href="#sidebar-collapse-85" aria-expanded="true" aria-controls="sidebar-collapse-85">
                     &#10148;   <!-- ➤ (because this one is rendered blue on mobile: ▶  -->
                  </a>
                  <a class="sidebar-hide collapsed" data-toggle="collapse" href="#sidebar-collapse-85" aria-expanded="true" aria-controls="sidebar-collapse-85">
                    &#x25BC;    <!-- ▼ (because the corresponding one is not rendered) -->
                  </a>
                    <a href="85">4.3   Nondeterministic Computing</a>
                </h5>
              </div>
              <div id="sidebar-collapse-85" class="collapse" role="tabpanel" aria-labelledby="headingOne">
                <div class="card-block">
                                <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-86">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-86" aria-expanded="false" aria-controls="sidebar-collapse-86">
                    <a href="86">4.3.1    Amb and Search      </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-87">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-87" aria-expanded="false" aria-controls="sidebar-collapse-87">
                    <a href="87">4.3.2    Examples of Nondeterministic Programs      </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-88">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-88" aria-expanded="false" aria-controls="sidebar-collapse-88">
                    <a href="88">4.3.3    Implementing the amb Evaluator      </a>
                  </span>
                </h5>
              </div>
            </div>

                </div>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-89">
                <h5 class="mb-0">
                  <a class="sidebar-show collapsed" data-toggle="collapse" href="#sidebar-collapse-89" aria-expanded="true" aria-controls="sidebar-collapse-89">
                     &#10148;   <!-- ➤ (because this one is rendered blue on mobile: ▶  -->
                  </a>
                  <a class="sidebar-hide collapsed" data-toggle="collapse" href="#sidebar-collapse-89" aria-expanded="true" aria-controls="sidebar-collapse-89">
                    &#x25BC;    <!-- ▼ (because the corresponding one is not rendered) -->
                  </a>
                    <a href="89">4.4  Logic Programming</a>
                </h5>
              </div>
              <div id="sidebar-collapse-89" class="collapse" role="tabpanel" aria-labelledby="headingOne">
                <div class="card-block">
                                <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-90">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-90" aria-expanded="false" aria-controls="sidebar-collapse-90">
                    <a href="90">4.4.1    Deductive Information Retrieval      </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-91">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-91" aria-expanded="false" aria-controls="sidebar-collapse-91">
                    <a href="91">4.4.2    How the Query System Works      </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-92">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-92" aria-expanded="false" aria-controls="sidebar-collapse-92">
                    <a href="92">4.4.3    Is Logic Programming Mathematical Logic?      </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-93">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-93" aria-expanded="false" aria-controls="sidebar-collapse-93">
                    <a href="93">4.4.4    Implementing the Query System      </a>
                  </span>
                </h5>
              </div>
            </div>

                </div>
              </div>
            </div>

                </div>
              </div>
            </div>

                     <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-94">
                <h5 class="mb-0">
                  <a class="sidebar-show collapsed" data-toggle="collapse" href="#sidebar-collapse-94" aria-expanded="true" aria-controls="sidebar-collapse-94">
                     &#10148;   <!-- ➤ (because this one is rendered blue on mobile: ▶  -->
                  </a>
                  <a class="sidebar-hide collapsed" data-toggle="collapse" href="#sidebar-collapse-94" aria-expanded="true" aria-controls="sidebar-collapse-94">
                    &#x25BC;    <!-- ▼ (because the corresponding one is not rendered) -->
                  </a>
                    <a href="94">5  Computing with Register Machines</a>
                </h5>
              </div>
              <div id="sidebar-collapse-94" class="collapse" role="tabpanel" aria-labelledby="headingOne">
                <div class="card-block">
                                <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-95">
                <h5 class="mb-0">
                  <a class="sidebar-show collapsed" data-toggle="collapse" href="#sidebar-collapse-95" aria-expanded="true" aria-controls="sidebar-collapse-95">
                     &#10148;   <!-- ➤ (because this one is rendered blue on mobile: ▶  -->
                  </a>
                  <a class="sidebar-hide collapsed" data-toggle="collapse" href="#sidebar-collapse-95" aria-expanded="true" aria-controls="sidebar-collapse-95">
                    &#x25BC;    <!-- ▼ (because the corresponding one is not rendered) -->
                  </a>
                    <a href="95">5.1  Designing Register Machines</a>
                </h5>
              </div>
              <div id="sidebar-collapse-95" class="collapse" role="tabpanel" aria-labelledby="headingOne">
                <div class="card-block">
                                <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-96">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-96" aria-expanded="false" aria-controls="sidebar-collapse-96">
                    <a href="96">5.1.1    A Language for Describing Register Machines      </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-97">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-97" aria-expanded="false" aria-controls="sidebar-collapse-97">
                    <a href="97">5.1.2    Abstraction in Machine Design      </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-98">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-98" aria-expanded="false" aria-controls="sidebar-collapse-98">
                    <a href="98">5.1.3    Subroutines      </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-99">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-99" aria-expanded="false" aria-controls="sidebar-collapse-99">
                    <a href="99">5.1.4    Using a Stack to Implement Recursion      </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-100">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-100" aria-expanded="false" aria-controls="sidebar-collapse-100">
                    <a href="100">5.1.5    Instruction Summary      </a>
                  </span>
                </h5>
              </div>
            </div>

                </div>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-101">
                <h5 class="mb-0">
                  <a class="sidebar-show collapsed" data-toggle="collapse" href="#sidebar-collapse-101" aria-expanded="true" aria-controls="sidebar-collapse-101">
                     &#10148;   <!-- ➤ (because this one is rendered blue on mobile: ▶  -->
                  </a>
                  <a class="sidebar-hide collapsed" data-toggle="collapse" href="#sidebar-collapse-101" aria-expanded="true" aria-controls="sidebar-collapse-101">
                    &#x25BC;    <!-- ▼ (because the corresponding one is not rendered) -->
                  </a>
                    <a href="101">5.2  A Register-Machine Simulator</a>
                </h5>
              </div>
              <div id="sidebar-collapse-101" class="collapse" role="tabpanel" aria-labelledby="headingOne">
                <div class="card-block">
                                <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-102">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-102" aria-expanded="false" aria-controls="sidebar-collapse-102">
                    <a href="102">5.2.1    The Machine Model      </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-103">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-103" aria-expanded="false" aria-controls="sidebar-collapse-103">
                    <a href="103">5.2.2    The Assembler      </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-104">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-104" aria-expanded="false" aria-controls="sidebar-collapse-104">
                    <a href="104">5.2.3    Generating Execution  Functions  for Instructions      </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-105">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-105" aria-expanded="false" aria-controls="sidebar-collapse-105">
                    <a href="105">5.2.4    Monitoring Machine Performance      </a>
                  </span>
                </h5>
              </div>
            </div>

                </div>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-106">
                <h5 class="mb-0">
                  <a class="sidebar-show collapsed" data-toggle="collapse" href="#sidebar-collapse-106" aria-expanded="true" aria-controls="sidebar-collapse-106">
                     &#10148;   <!-- ➤ (because this one is rendered blue on mobile: ▶  -->
                  </a>
                  <a class="sidebar-hide collapsed" data-toggle="collapse" href="#sidebar-collapse-106" aria-expanded="true" aria-controls="sidebar-collapse-106">
                    &#x25BC;    <!-- ▼ (because the corresponding one is not rendered) -->
                  </a>
                    <a href="106">5.3  Storage Allocation and Garbage Collection</a>
                </h5>
              </div>
              <div id="sidebar-collapse-106" class="collapse" role="tabpanel" aria-labelledby="headingOne">
                <div class="card-block">
                                <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-107">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-107" aria-expanded="false" aria-controls="sidebar-collapse-107">
                    <a href="107">5.3.1    Memory as Vectors      </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-108">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-108" aria-expanded="false" aria-controls="sidebar-collapse-108">
                    <a href="108">5.3.2    Maintaining the Illusion of Infinite Memory      </a>
                  </span>
                </h5>
              </div>
            </div>

                </div>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-109">
                <h5 class="mb-0">
                  <a class="sidebar-show collapsed" data-toggle="collapse" href="#sidebar-collapse-109" aria-expanded="true" aria-controls="sidebar-collapse-109">
                     &#10148;   <!-- ➤ (because this one is rendered blue on mobile: ▶  -->
                  </a>
                  <a class="sidebar-hide collapsed" data-toggle="collapse" href="#sidebar-collapse-109" aria-expanded="true" aria-controls="sidebar-collapse-109">
                    &#x25BC;    <!-- ▼ (because the corresponding one is not rendered) -->
                  </a>
                    <a href="109">5.4  The Explicit-Control Evaluator</a>
                </h5>
              </div>
              <div id="sidebar-collapse-109" class="collapse" role="tabpanel" aria-labelledby="headingOne">
                <div class="card-block">
                                <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-110">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-110" aria-expanded="false" aria-controls="sidebar-collapse-110">
                    <a href="110">5.4.1    The Core of the Explicit-Control Evaluator      </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-111">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-111" aria-expanded="false" aria-controls="sidebar-collapse-111">
                    <a href="111">5.4.2    Sequence Evaluation and Tail Recursion      </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-112">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-112" aria-expanded="false" aria-controls="sidebar-collapse-112">
                    <a href="112">5.4.3    Conditionals, Assignments, and Definitions      </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-113">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-113" aria-expanded="false" aria-controls="sidebar-collapse-113">
                    <a href="113">5.4.4    Running the Evaluator      </a>
                  </span>
                </h5>
              </div>
            </div>

                </div>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-114">
                <h5 class="mb-0">
                  <a class="sidebar-show collapsed" data-toggle="collapse" href="#sidebar-collapse-114" aria-expanded="true" aria-controls="sidebar-collapse-114">
                     &#10148;   <!-- ➤ (because this one is rendered blue on mobile: ▶  -->
                  </a>
                  <a class="sidebar-hide collapsed" data-toggle="collapse" href="#sidebar-collapse-114" aria-expanded="true" aria-controls="sidebar-collapse-114">
                    &#x25BC;    <!-- ▼ (because the corresponding one is not rendered) -->
                  </a>
                    <a href="114">5.5  Compilation</a>
                </h5>
              </div>
              <div id="sidebar-collapse-114" class="collapse" role="tabpanel" aria-labelledby="headingOne">
                <div class="card-block">
                                <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-115">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-115" aria-expanded="false" aria-controls="sidebar-collapse-115">
                    <a href="115">5.5.1    Structure of the Compiler      </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-116">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-116" aria-expanded="false" aria-controls="sidebar-collapse-116">
                    <a href="116">5.5.2    Compiling Expressions      </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-117">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-117" aria-expanded="false" aria-controls="sidebar-collapse-117">
                    <a href="117">5.5.3    Compiling Combinations      </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-118">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-118" aria-expanded="false" aria-controls="sidebar-collapse-118">
                    <a href="118">5.5.4    Combining Instruction Sequences      </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-119">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-119" aria-expanded="false" aria-controls="sidebar-collapse-119">
                    <a href="119">5.5.5    An Example of Compiled Code      </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-120">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-120" aria-expanded="false" aria-controls="sidebar-collapse-120">
                    <a href="120">5.5.6    Lexical Addressing      </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-121">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-121" aria-expanded="false" aria-controls="sidebar-collapse-121">
                    <a href="121">5.5.7    Interfacing Compiled Code to the Evaluator      </a>
                  </span>
                </h5>
              </div>
            </div>

                </div>
              </div>
            </div>

                </div>
              </div>
            </div>

                     <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-125">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-125" aria-expanded="false" aria-controls="sidebar-collapse-125">
                    <a href="125">References</a>
                  </span>
                </h5>
              </div>
            </div>

                     <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-126">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-126" aria-expanded="false" aria-controls="sidebar-collapse-126">
                    <a href="126">Index</a>
                  </span>
                </h5>
              </div>
            </div>

                     <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-127">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-127" aria-expanded="false" aria-controls="sidebar-collapse-127">
                    <a href="127">JavaScript Adaptation Making-of</a>
                  </span>
                </h5>
              </div>
            </div>

       </div>

           <div id="permalink-msg">
  <div class="screen">
    <div class="alert alert-success">
      <strong>Permalink copied!</strong> 
    </div>
  </div>
</div>
<div class="chapter-content">

  <div class="chapter-title">
    <div class="permalink">
      <a name="top" class="permalink">3.1.1 
        Local State Variables
      </a>
    </div>
  </div>
    <div class="chapter-text" >
        <div class="SUBSECTION"><SUBSECTION>
      

      
      
      

      <div class="permalink">
<a name="p1" class="permalink"></a><p>
        
        
        To illustrate what we mean by having a computational object with
        time-varying state, let us model the situation of withdrawing money
        from a bank account.  We will do this using a
        function
        <kbd>withdraw</kbd>, which takes as argument an <kbd>amount</kbd> 
  to be withdrawn.
        If there is enough money in the account to accommodate the withdrawal,
        then <kbd>withdraw</kbd> should return the balance remaining after the
        withdrawal.  Otherwise, <kbd>withdraw</kbd> should return the message <EM>
        Insufficient funds.</EM> For example, if we begin with <DOLLAR></DOLLAR>100 in the
        account, we should obtain the following sequence of responses using
        <kbd>withdraw</kbd>:

        <div class="snippet" id="javascript_49_0_div"><div class="pre-prettyprint"><pre class="prettyprint" title="Evaluate Javascript expression" onclick="var compressed = LZString.compressToEncodedURIComponent('\nlet balance = 100;\n\nfunction withdraw(amount) {\n   if (balance &gt;= amount) {\n      balance = balance - amount;\n      return balance;\n   } else {\n      return &quot;Insufficient funds&quot;;\n   }\n}\n          '+'\n'+'withdraw(25); // output: 75'+'\n'+''+'\n'); var url = 'https://sourceacademy.nus.edu.sg/playground#chap=3&amp;prgrm='+compressed; window.open(url); ">withdraw(25); // output: 75</pre></div></div>
       
        <div class="snippet" id="javascript_49_1_div"><div class="pre-prettyprint"><pre class="prettyprint" title="Evaluate Javascript expression" onclick="var compressed = LZString.compressToEncodedURIComponent('\nlet balance = 100;\n\nfunction withdraw(amount) {\n   if (balance &gt;= amount) {\n      balance = balance - amount;\n      return balance;\n   } else {\n      return &quot;Insufficient funds&quot;;\n   }\n}\n          \nwithdraw(25); // output: 75\n          '+'\n'+'withdraw(25); // output: 50'+'\n'+''+'\n'); var url = 'https://sourceacademy.nus.edu.sg/playground#chap=3&amp;prgrm='+compressed; window.open(url); ">withdraw(25); // output: 50</pre></div></div>

        <div class="snippet" id="javascript_49_2_div"><div class="pre-prettyprint"><pre class="prettyprint" title="Evaluate Javascript expression" onclick="var compressed = LZString.compressToEncodedURIComponent('\nlet balance = 100;\n\nfunction withdraw(amount) {\n   if (balance &gt;= amount) {\n      balance = balance - amount;\n      return balance;\n   } else {\n      return &quot;Insufficient funds&quot;;\n   }\n}\n          \nwithdraw(25); // output: 75\n          \nwithdraw(25); // output: 50\n          '+'\n'+'withdraw(60); // output: &quot;Insufficient funds&quot;'+'\n'+''+'\n'); var url = 'https://sourceacademy.nus.edu.sg/playground#chap=3&amp;prgrm='+compressed; window.open(url); ">withdraw(60); // output: "Insufficient funds"</pre></div></div>
        <div class="snippet" id="javascript_49_3_div"><div class="pre-prettyprint"><pre class="prettyprint" title="Evaluate Javascript expression" onclick="var compressed = LZString.compressToEncodedURIComponent('\nlet balance = 100;\n\nfunction withdraw(amount) {\n   if (balance &gt;= amount) {\n      balance = balance - amount;\n      return balance;\n   } else {\n      return &quot;Insufficient funds&quot;;\n   }\n}\n          \nwithdraw(25); // output: 75\n          \nwithdraw(25); // output: 50\n          \nwithdraw(60); // output: &quot;Insufficient funds&quot;\n          '+'\n'+'withdraw(15); // output: 35'+'\n'+''+'\n'); var url = 'https://sourceacademy.nus.edu.sg/playground#chap=3&amp;prgrm='+compressed; window.open(url); ">withdraw(15); // output: 35</pre></div></div>
      </p>
</div>

      <div class="permalink">
<a name="p2" class="permalink"></a><p>
        Observe that the expression <kbd>withdraw(25)</kbd>, evaluated twice,
        yields different values.  This is a new kind of behavior for a
        function.  Until now, all our
        functions
        could be viewed as
        specifications for computing mathematical functions.  A call to a
        function
        computed the value of the function applied to the given
        arguments, and two calls to the same
        function
        with the
        same arguments always produced the same result.<a class="superscript" id="footnote-link-1" href="49#footnote-1">[1]</a>
      </p>
</div>

      <div class="permalink">
<a name="p3" class="permalink"></a><p>
	<SPLIT>
	  
	    So far, all our names were <EM>constants</EM> as declared by the keyword
	    <kbd>const</kbd>. Once declared, they did not change their value,
	    as appropriate for constants.
	    To implement functions like  <kbd>withdraw</kbd>, we introduce a new kind
	    of declaration—<EM>variable declarations</EM> using the keyword <kbd>let</kbd>
	    instead of <kbd>const</kbd>.
            After declaring a variable <kbd>balance</kbd>,
	    to indicate the balance of money in the account, we can define <kbd>withdraw</kbd>
            as a function that accesses <kbd>balance</kbd>.
	
	
	</SPLIT>
	The <kbd>withdraw</kbd>
        function
        checks to see if <kbd>balance</kbd> is at least as large as the
        requested <kbd>amount</kbd>.  If so, <kbd>withdraw</kbd> decrements <kbd>balance</kbd> by <kbd>amount</kbd> and returns the new value of <kbd>balance</kbd>.
        Otherwise, <kbd>withdraw</kbd> returns the <EM>Insufficient funds</EM>
        message.
	Here are the declarations of
	<kbd>balance</kbd> and <kbd>withdraw</kbd>:

        <div class="snippet" id="javascript_49_4_div"><div class="pre-prettyprint"><pre class="prettyprint" title="Evaluate Javascript expression" onclick="var compressed = LZString.compressToEncodedURIComponent(''+'\n'+'let balance = 100;\n\nfunction withdraw(amount) {\n   if (balance &gt;= amount) {\n      balance = balance - amount;\n      return balance;\n   } else {\n      return &quot;Insufficient funds&quot;;\n   }\n}'+'\n'+'\nwithdraw(25); // output: 75\n          '+'\n'); var url = 'https://sourceacademy.nus.edu.sg/playground#chap=3&amp;prgrm='+compressed; window.open(url); ">let balance = 100;

function withdraw(amount) {
   if (balance &gt;= amount) {
      balance = balance - amount;
      return balance;
   } else {
      return "Insufficient funds";
   }
}</pre></div></div>
      </p>
</div>

      <div class="permalink">
<a name="p4" class="permalink"></a><p>
        Decrementing <kbd>balance</kbd> is accomplished by the 
        statement

        <div class="snippet" id="javascript_49_5_div"><div class="pre-prettyprint"><pre class="prettyprint no-eval">balance = balance - amount;</pre></div></div>

        
        <SPLIT>
          
          
            The syntax of such <EM>assignment statements</EM> is
          
        </SPLIT>
        <kbd EVAL="no" LATEX="yes" class="snippet">$\textit{name}$ = $\textit{new-value}$;</kbd>
      </p>
</div>

      <div class="permalink">
<a name="p5" class="permalink"></a><p>
        Here $\textit{name}$ is a symbol and 
$\textit{new-value}$ is any expression.  
The assignment 
changes $\textit{name}$ so that its value is the result obtained by
evaluating $\textit{new-value}$.  In the case at hand, 
we are changing <kbd>balance</kbd> so that its new value will be the result of 
subtracting <kbd>amount</kbd> from the previous value 
of <kbd>balance</kbd>.<SPLIT>
          
            <a class="superscript" id="footnote-link-2" href="49#footnote-2">[2]</a>
          
        </SPLIT>
      </p>
</div>

      <div class="permalink">
<a name="p6" class="permalink"></a><p>
        
        <SPLIT>
          
          The function <kbd>withdraw</kbd> 
          also uses a <EM>sequential composition</EM>
          to cause two expressions to be evaluated
          in the case where the <kbd>if</kbd> test is true: first decrementing 
          <kbd>balance</kbd> and then returning the value of 
          <kbd>balance</kbd>.  

          In general, executing the statement

        <kbd EVAL="no" LATEX="yes" class="snippet">$\textit{stmt}_{1}$ $\textit{stmt}_{2}$</kbd>
 
        causes the statements $\textit{stmt}_{1}$ and $\textit{stmt}_{2}$ to be evaluated in sequence.<a class="superscript" id="footnote-link-3" href="49#footnote-3">[3]</a>
          
        </SPLIT>
      </p>
</div>

      <div class="permalink">
<a name="p7" class="permalink"></a><p>
        Although <kbd>withdraw</kbd> works as desired, the variable
        <kbd>balance</kbd> presents a problem.  As specified above, <kbd>balance</kbd>
        is a name defined in the program environment and is freely accessible
        to be examined or modified by any
        function.  It would be much better
        if we could somehow make <kbd>balance</kbd> internal to <kbd>withdraw</kbd>, so
        that <kbd>withdraw</kbd> would be the only
        function
        that could access <kbd>balance</kbd> directly and any other
        function
        could access <kbd>balance</kbd>
        only indirectly (through calls to <kbd>withdraw</kbd>).  This would more
        accurately model the notion that <kbd>balance</kbd> is a local state
        variable used by <kbd>withdraw</kbd> to keep track of the state of the
        account.
      </p>
</div>

      <div class="permalink">
<a name="p8" class="permalink"></a><p>
        We can make <kbd>balance</kbd> internal to <kbd>withdraw</kbd> by rewriting the definition as follows:

        
	
        <div class="snippet" id="javascript_49_6_div"><div class="pre-prettyprint"><pre class="prettyprint" title="Evaluate Javascript expression" onclick="var compressed = LZString.compressToEncodedURIComponent(''+'\n'+'function make_withdraw() {\n    let balance = 100;\n    return amount =&gt; {\n        if (balance &gt;= amount) {\n            balance = balance - amount;\n            return balance;\n        } else {\n            return &quot;insufficient funds&quot;;\n        }\n    };\n}\nconst new_withdraw = make_withdraw();'+'\n'+'\nnew_withdraw(60);\nnew_withdraw(60);\n	  '+'\n'); var url = 'https://sourceacademy.nus.edu.sg/playground#chap=3&amp;prgrm='+compressed; window.open(url); ">function make_withdraw() {
    let balance = 100;
    return amount =&gt; {
        if (balance &gt;= amount) {
            balance = balance - amount;
            return balance;
        } else {
            return "insufficient funds";
        }
    };
}
const new_withdraw = make_withdraw();</pre></div></div>
        </p>
</div>

      <div class="permalink">
<a name="p9" class="permalink"></a><p>
        <SPLIT>
          
          
            What we have done here is use <kbd>let</kbd>
	    to establish an environment
            with a local variable <kbd>balance</kbd>, bound to the initial
	    value 100.
            Within this local environment, we use function definition<a class="superscript" id="footnote-link-4" href="49#footnote-4">[4]</a> to create a
	    function that takes <kbd>amount</kbd> as an argument and behaves
	    like our previous <kbd>withdraw</kbd>
            function.  This
	    function—returned as the
            result of evaluating the body of the <kbd>make_withdraw</kbd>
	    function—behaves in precisely
	    the same way as
	    <kbd>withdraw</kbd> but whose
            variable <kbd>balance</kbd> is not accessible by any other
	    function.<a class="superscript" id="footnote-link-5" href="49#footnote-5">[5]</a>
          
        </SPLIT>
      </p>
</div>

      <div class="permalink">
<a name="p10" class="permalink"></a><p>
        Combining 
        
          
          
            assignment statements with variable statements
          
        
        is the general programming
        technique we will use for constructing computational objects with
        local state.  Unfortunately, using this technique raises a serious
        problem: When we first introduced
        functions, 
        we also introduced the substitution model of evaluation
        (section <REF NAME="sec:substitution-model"><a class="superscript" id="3.1.1-sec-link-1.1.5" href="7">1.1.5</a></REF>) to provide an interpretation of
        what
        function
        application means.  We said that applying a
        function
        should be interpreted as evaluating the body of the
        function
        with the
        formal parameters replaced by their values.  The trouble is that, as
        soon as we introduce assignment into our language, substitution is no
        longer an adequate model of
        function
        application.  (We will see why
        this is so in section <REF NAME="sec:costs-of-assignment"><a class="superscript" id="3.1.1-sec-link-3.1.3" href="51">3.1.3</a></REF>.)  As a
        consequence, we technically have at this point no way to understand
        why the <kbd>new_withdraw</kbd>
        function
        behaves as claimed above.  In
        order to really understand a
        function
        such as <kbd>new_withdraw</kbd>, we
        will need to develop a new model of
        function
        application.  In
        section <REF NAME="sec:environment-model"><a class="superscript" id="3.1.1-sec-link-3.2" href="52">3.2</a></REF> we will introduce such a model,
        together with an explanation of 
        assignment statements and variable statements.
        First, however, we examine some variations on the theme established by
        <kbd>make_withdraw</kbd>.
      </p>
</div>

      <div class="permalink">
<a name="p11" class="permalink"></a><p>
	<SPLIT>
	  
	  
        The following
	function, <kbd>make_withdraw_with_balance</kbd>,
	abstracts the initial balance into a parameter.
	  
	</SPLIT>
	The formal parameter <kbd>balance</kbd> in
	
	  
	  <kbd>make_withdraw_with_balance</kbd>
	  
	
	specifies the initial amount of money in the
        account.<a class="superscript" id="footnote-link-6" href="49#footnote-6">[6]</a>

        <div class="snippet" id="javascript_49_7_div"><div class="pre-prettyprint"><pre class="prettyprint" title="Evaluate Javascript expression" onclick="var compressed = LZString.compressToEncodedURIComponent(''+'\n'+'function make_withdraw_with_balance(balance) {\n    return amount =&gt; {\n        if (balance &gt;= amount) {\n            balance = balance - amount;\n            return balance;\n        } else {\n            return &quot;insufficient funds&quot;;\n        }\n    };\n}'+'\n'+''+'\n'); var url = 'https://sourceacademy.nus.edu.sg/playground#chap=3&amp;prgrm='+compressed; window.open(url); ">function make_withdraw_with_balance(balance) {
    return amount =&gt; {
        if (balance &gt;= amount) {
            balance = balance - amount;
            return balance;
        } else {
            return "insufficient funds";
        }
    };
}</pre></div></div>
      </p>
</div>

      <div class="permalink">
<a name="p12" class="permalink"></a><p>
        The function <kbd>make_withdraw_with_balance</kbd> can be used as follows to create two objects
        <kbd>w1</kbd>
and 
<kbd>w2</kbd>:

        <div class="snippet" id="javascript_49_8_div"><div class="pre-prettyprint"><pre class="prettyprint" title="Evaluate Javascript expression" onclick="var compressed = LZString.compressToEncodedURIComponent('\nfunction make_withdraw_with_balance(balance) {\n    return amount =&gt; {\n        if (balance &gt;= amount) {\n            balance = balance - amount;\n            return balance;\n        } else {\n            return &quot;insufficient funds&quot;;\n        }\n    };\n}\n          '+'\n'+'const w1 = make_withdraw_with_balance(100);\nconst w2 = make_withdraw_with_balance(100);'+'\n'+''+'\n'); var url = 'https://sourceacademy.nus.edu.sg/playground#chap=3&amp;prgrm='+compressed; window.open(url); ">const w1 = make_withdraw_with_balance(100);
const w2 = make_withdraw_with_balance(100);</pre></div></div>

        <div class="snippet" id="javascript_49_9_div"><div class="pre-prettyprint"><pre class="prettyprint" title="Evaluate Javascript expression" onclick="var compressed = LZString.compressToEncodedURIComponent('\nfunction make_withdraw_with_balance(balance) {\n    return amount =&gt; {\n        if (balance &gt;= amount) {\n            balance = balance - amount;\n            return balance;\n        } else {\n            return &quot;insufficient funds&quot;;\n        }\n    };\n}\n          \nconst w1 = make_withdraw_with_balance(100);\nconst w2 = make_withdraw_with_balance(100);\n          '+'\n'+'w1(50); // output: 50'+'\n'+''+'\n'); var url = 'https://sourceacademy.nus.edu.sg/playground#chap=3&amp;prgrm='+compressed; window.open(url); ">w1(50); // output: 50</pre></div></div>

        <div class="snippet" id="javascript_49_10_div"><div class="pre-prettyprint"><pre class="prettyprint" title="Evaluate Javascript expression" onclick="var compressed = LZString.compressToEncodedURIComponent('\nfunction make_withdraw_with_balance(balance) {\n    return amount =&gt; {\n        if (balance &gt;= amount) {\n            balance = balance - amount;\n            return balance;\n        } else {\n            return &quot;insufficient funds&quot;;\n        }\n    };\n}\n          \nconst w1 = make_withdraw_with_balance(100);\nconst w2 = make_withdraw_with_balance(100);\n          \nw1(50); // output: 50\n          '+'\n'+'w2(70); // output: 30'+'\n'+''+'\n'); var url = 'https://sourceacademy.nus.edu.sg/playground#chap=3&amp;prgrm='+compressed; window.open(url); ">w2(70); // output: 30</pre></div></div>

        <div class="snippet" id="javascript_49_11_div"><div class="pre-prettyprint"><pre class="prettyprint" title="Evaluate Javascript expression" onclick="var compressed = LZString.compressToEncodedURIComponent('\nfunction make_withdraw_with_balance(balance) {\n    return amount =&gt; {\n        if (balance &gt;= amount) {\n            balance = balance - amount;\n            return balance;\n        } else {\n            return &quot;insufficient funds&quot;;\n        }\n    };\n}\n          \nconst w1 = make_withdraw_with_balance(100);\nconst w2 = make_withdraw_with_balance(100);\n          \nw1(50); // output: 50\n          \nw2(70); // output: 30\n          '+'\n'+'w2(40); // output: &quot;Insufficient funds&quot;'+'\n'+''+'\n'); var url = 'https://sourceacademy.nus.edu.sg/playground#chap=3&amp;prgrm='+compressed; window.open(url); ">w2(40); // output: "Insufficient funds"</pre></div></div>

        <div class="snippet" id="javascript_49_12_div"><div class="pre-prettyprint"><pre class="prettyprint" title="Evaluate Javascript expression" onclick="var compressed = LZString.compressToEncodedURIComponent('\nfunction make_withdraw_with_balance(balance) {\n    return amount =&gt; {\n        if (balance &gt;= amount) {\n            balance = balance - amount;\n            return balance;\n        } else {\n            return &quot;insufficient funds&quot;;\n        }\n    };\n}\n          \nconst w1 = make_withdraw_with_balance(100);\nconst w2 = make_withdraw_with_balance(100);\n          \nw1(50); // output: 50\n          \nw2(70); // output: 30\n          \nw2(40); // output: &quot;Insufficient funds&quot;\n          '+'\n'+'w1(40); // output: 10'+'\n'+''+'\n'); var url = 'https://sourceacademy.nus.edu.sg/playground#chap=3&amp;prgrm='+compressed; window.open(url); ">w1(40); // output: 10</pre></div></div>
      </p>
</div>

      <div class="permalink">
<a name="p13" class="permalink"></a><p>
        Observe that 
<kbd>w1</kbd>
and 
<kbd>w2</kbd> 
are completely independent objects,
        each with its own local state variable <kbd>balance</kbd>.  Withdrawals
        from one do not affect the other.
      </p>
</div>

      <div class="permalink">
<a name="p14" class="permalink"></a><p>
        We can also create objects that handle deposits as well as
        withdrawals, and thus we can represent simple bank accounts.  Here is
        a
        function
        that returns a <QUOTE>bank-account object</QUOTE> with
        a specified initial balance:

        <div class="snippet" id="javascript_49_13_div"><div class="pre-prettyprint"><pre class="prettyprint" title="Evaluate Javascript expression" onclick="var compressed = LZString.compressToEncodedURIComponent(''+'\n'+'function make_account(balance) {\n    function withdraw(amount) {\n        if (balance &gt;= amount) {\n            balance = balance - amount;\n            return balance;\n        } else {\n            return &quot;Insufficient funds&quot;;\n        }\n    }\n    function deposit(amount) {\n        balance = balance + amount;\n        return balance;\n    }\n    function dispatch(m) {\n        if (m === &quot;withdraw&quot;) {\n            return withdraw;\n        } else if (m === &quot;deposit&quot;) {\n            return deposit;\n        } else {\n            return &quot;Unknown request - - MAKE-ACCOUNT&quot;;\n        }\n    }\n    return dispatch;\n}'+'\n'+''+'\n'); var url = 'https://sourceacademy.nus.edu.sg/playground#chap=3&amp;prgrm='+compressed; window.open(url); ">function make_account(balance) {
    function withdraw(amount) {
        if (balance &gt;= amount) {
            balance = balance - amount;
            return balance;
        } else {
            return "Insufficient funds";
        }
    }
    function deposit(amount) {
        balance = balance + amount;
        return balance;
    }
    function dispatch(m) {
        if (m === "withdraw") {
            return withdraw;
        } else if (m === "deposit") {
            return deposit;
        } else {
            return "Unknown request - - MAKE-ACCOUNT";
        }
    }
    return dispatch;
}</pre></div></div>
      </p>
</div>

      <div class="permalink">
<a name="p15" class="permalink"></a><p>
        Each call to <kbd>make_account</kbd> sets up an environment with a local
        state variable <kbd>balance</kbd>.
	Within this environment, <kbd>make_account</kbd> defines
        functions
        <kbd>deposit</kbd> and <kbd>withdraw</kbd>
        that access <kbd>balance</kbd> and an additional
        function
        <kbd>dispatch</kbd>
        that takes a <QUOTE>message</QUOTE> as input and returns one of the two local
        functions.
	The <kbd>dispatch</kbd>
        function
        itself is returned as the
        value that represents the bank-account object.
        This is precisely the 
        
        <EM>message-passing</EM>
        style of programming that we saw in section <REF NAME="sec:data-directed"><a class="superscript" id="3.1.1-sec-link-2.4.3" href="42">2.4.3</a></REF>, although
        here we are using it in conjunction with the ability to modify local
        variables.
      </p>
</div>

      <div class="permalink">
<a name="p16" class="permalink"></a><p>
        <kbd>make_account</kbd> can be used as follows:

        <div class="snippet" id="javascript_49_14_div"><div class="pre-prettyprint"><pre class="prettyprint" title="Evaluate Javascript expression" onclick="var compressed = LZString.compressToEncodedURIComponent('\nfunction make_account(balance) {\n    function withdraw(amount) {\n        if (balance &gt;= amount) {\n            balance = balance - amount;\n            return balance;\n        } else {\n            return &quot;Insufficient funds&quot;;\n        }\n    }\n    function deposit(amount) {\n        balance = balance + amount;\n        return balance;\n    }\n    function dispatch(m) {\n        if (m === &quot;withdraw&quot;) {\n            return withdraw;\n        } else if (m === &quot;deposit&quot;) {\n            return deposit;\n        } else {\n            return &quot;Unknown request - - MAKE-ACCOUNT&quot;;\n        }\n    }\n    return dispatch;\n}\n          '+'\n'+'const acc = make_account(100);'+'\n'+''+'\n'); var url = 'https://sourceacademy.nus.edu.sg/playground#chap=3&amp;prgrm='+compressed; window.open(url); ">const acc = make_account(100);</pre></div></div>
        <div class="snippet" id="javascript_49_15_div"><div class="pre-prettyprint"><pre class="prettyprint" title="Evaluate Javascript expression" onclick="var compressed = LZString.compressToEncodedURIComponent('\nfunction make_account(balance) {\n    function withdraw(amount) {\n        if (balance &gt;= amount) {\n            balance = balance - amount;\n            return balance;\n        } else {\n            return &quot;Insufficient funds&quot;;\n        }\n    }\n    function deposit(amount) {\n        balance = balance + amount;\n        return balance;\n    }\n    function dispatch(m) {\n        if (m === &quot;withdraw&quot;) {\n            return withdraw;\n        } else if (m === &quot;deposit&quot;) {\n            return deposit;\n        } else {\n            return &quot;Unknown request - - MAKE-ACCOUNT&quot;;\n        }\n    }\n    return dispatch;\n}\n          \nconst acc = make_account(100);\n    '+'\n'+'(acc(&quot;withdraw&quot;))(50);'+'\n'+''+'\n'); var url = 'https://sourceacademy.nus.edu.sg/playground#chap=3&amp;prgrm='+compressed; window.open(url); ">(acc("withdraw"))(50);</pre></div></div>

        <div class="snippet" id="javascript_49_16_div"><div class="pre-prettyprint"><pre class="prettyprint" title="Evaluate Javascript expression" onclick="var compressed = LZString.compressToEncodedURIComponent('\nfunction make_account(balance) {\n    function withdraw(amount) {\n        if (balance &gt;= amount) {\n            balance = balance - amount;\n            return balance;\n        } else {\n            return &quot;Insufficient funds&quot;;\n        }\n    }\n    function deposit(amount) {\n        balance = balance + amount;\n        return balance;\n    }\n    function dispatch(m) {\n        if (m === &quot;withdraw&quot;) {\n            return withdraw;\n        } else if (m === &quot;deposit&quot;) {\n            return deposit;\n        } else {\n            return &quot;Unknown request - - MAKE-ACCOUNT&quot;;\n        }\n    }\n    return dispatch;\n}\n          \nconst acc = make_account(100);\n    \n(acc(&quot;withdraw&quot;))(50);\n    '+'\n'+'(acc(&quot;withdraw&quot;))(60);'+'\n'+''+'\n'); var url = 'https://sourceacademy.nus.edu.sg/playground#chap=3&amp;prgrm='+compressed; window.open(url); ">(acc("withdraw"))(60);</pre></div></div>

        <div class="snippet" id="javascript_49_17_div"><div class="pre-prettyprint"><pre class="prettyprint" title="Evaluate Javascript expression" onclick="var compressed = LZString.compressToEncodedURIComponent('\nfunction make_account(balance) {\n    function withdraw(amount) {\n        if (balance &gt;= amount) {\n            balance = balance - amount;\n            return balance;\n        } else {\n            return &quot;Insufficient funds&quot;;\n        }\n    }\n    function deposit(amount) {\n        balance = balance + amount;\n        return balance;\n    }\n    function dispatch(m) {\n        if (m === &quot;withdraw&quot;) {\n            return withdraw;\n        } else if (m === &quot;deposit&quot;) {\n            return deposit;\n        } else {\n            return &quot;Unknown request - - MAKE-ACCOUNT&quot;;\n        }\n    }\n    return dispatch;\n}\n          \nconst acc = make_account(100);\n    \n(acc(&quot;withdraw&quot;))(50);\n    \n(acc(&quot;withdraw&quot;))(60);\n    '+'\n'+'(acc(&quot;deposit&quot;))(40);'+'\n'+''+'\n'); var url = 'https://sourceacademy.nus.edu.sg/playground#chap=3&amp;prgrm='+compressed; window.open(url); ">(acc("deposit"))(40);</pre></div></div>

        <div class="snippet" id="javascript_49_18_div"><div class="pre-prettyprint"><pre class="prettyprint" title="Evaluate Javascript expression" onclick="var compressed = LZString.compressToEncodedURIComponent('\nfunction make_account(balance) {\n    function withdraw(amount) {\n        if (balance &gt;= amount) {\n            balance = balance - amount;\n            return balance;\n        } else {\n            return &quot;Insufficient funds&quot;;\n        }\n    }\n    function deposit(amount) {\n        balance = balance + amount;\n        return balance;\n    }\n    function dispatch(m) {\n        if (m === &quot;withdraw&quot;) {\n            return withdraw;\n        } else if (m === &quot;deposit&quot;) {\n            return deposit;\n        } else {\n            return &quot;Unknown request - - MAKE-ACCOUNT&quot;;\n        }\n    }\n    return dispatch;\n}\n          \nconst acc = make_account(100);\n    \n(acc(&quot;withdraw&quot;))(50);\n    \n(acc(&quot;withdraw&quot;))(60);\n    \n(acc(&quot;deposit&quot;))(40);\n    '+'\n'+'(acc(&quot;withdraw&quot;))(60);'+'\n'+''+'\n'); var url = 'https://sourceacademy.nus.edu.sg/playground#chap=3&amp;prgrm='+compressed; window.open(url); ">(acc("withdraw"))(60);</pre></div></div>
      </p>
</div>

      <div class="permalink">
<a name="p17" class="permalink"></a><p>
        Each call to <kbd>acc</kbd> returns the locally defined <kbd>deposit</kbd> or
        <kbd>withdraw</kbd>
        function, which is then applied to the specified <kbd>amount</kbd>.  As was the case with <kbd>make_withdraw</kbd>, another call to <kbd>make_account</kbd>

        <div class="snippet" id="javascript_49_19_div"><div class="pre-prettyprint"><pre class="prettyprint" title="Evaluate Javascript expression" onclick="var compressed = LZString.compressToEncodedURIComponent('\nfunction make_account(balance) {\n    function withdraw(amount) {\n        if (balance &gt;= amount) {\n            balance = balance - amount;\n            return balance;\n        } else {\n            return &quot;Insufficient funds&quot;;\n        }\n    }\n    function deposit(amount) {\n        balance = balance + amount;\n        return balance;\n    }\n    function dispatch(m) {\n        if (m === &quot;withdraw&quot;) {\n            return withdraw;\n        } else if (m === &quot;deposit&quot;) {\n            return deposit;\n        } else {\n            return &quot;Unknown request - - MAKE-ACCOUNT&quot;;\n        }\n    }\n    return dispatch;\n}\n          '+'\n'+'const acc2 = make_account(100);'+'\n'+''+'\n'); var url = 'https://sourceacademy.nus.edu.sg/playground#chap=3&amp;prgrm='+compressed; window.open(url); ">const acc2 = make_account(100);</pre></div></div>

        will produce a completely separate account object, which maintains its
        own local <kbd>balance</kbd>.
      </p>
</div>

      <div class="permalink">
<a name="ex_3.1" class="permalink"></a><EXERCISE><b><a class="exercise-number permalink" id="ex_3.1">Exercise 3.1 </a></b>
        An 
        
        <EM>accumulator</EM> is a
        function
        that is called repeatedly with a
        single numeric argument and accumulates its arguments into a sum.
        Each time it is called, it returns the currently accumulated sum.
        Write a
        function

        
<kbd>make_accumulator</kbd>
that generates accumulators,
        each maintaining an independent sum.  The input to 
<kbd>make_accumulator</kbd>
should specify the initial value of the sum; for
        example

<div class="snippet" id="javascript_49_20_div"><div class="pre-prettyprint"><pre class="prettyprint" title="Evaluate Javascript expression" onclick="var compressed = LZString.compressToEncodedURIComponent(''+'\n'+'// make_accumulator to be written by students\nconst a = make_accumulator(5);'+'\n'+''+'\n'); var url = 'https://sourceacademy.nus.edu.sg/playground#chap=3&amp;prgrm='+compressed; window.open(url); ">// make_accumulator to be written by students
const a = make_accumulator(5);</pre></div></div>

  <div class="snippet" id="javascript_49_21_div"><div class="pre-prettyprint"><pre class="prettyprint" title="Evaluate Javascript expression" onclick="var compressed = LZString.compressToEncodedURIComponent('\n// make_accumulator to be written by students\nconst a = make_accumulator(5);\n  '+'\n'+'a(10);  // output: 15'+'\n'+''+'\n'); var url = 'https://sourceacademy.nus.edu.sg/playground#chap=3&amp;prgrm='+compressed; window.open(url); ">a(10);  // output: 15</pre></div></div>
        
  
        
  <div class="snippet" id="javascript_49_22_div"><div class="pre-prettyprint"><pre class="prettyprint" title="Evaluate Javascript expression" onclick="var compressed = LZString.compressToEncodedURIComponent('\n// make_accumulator to be written by students\nconst a = make_accumulator(5);\n  \na(10);  // output: 15\n    '+'\n'+'a(10);  // output: 25'+'\n'+''+'\n'); var url = 'https://sourceacademy.nus.edu.sg/playground#chap=3&amp;prgrm='+compressed; window.open(url); ">a(10);  // output: 25</pre></div></div>

  

  <div class="Solution">
<div class="solution_btn"><button class="btn btn-secondary solution_btn" href="#solution_49_1_div" data-toggle="collapse">Solution</button></div>
<div class="solution_content collapse" id="solution_49_1_div"><SOLUTION>
        <div class="snippet" id="javascript_49_23_div"><div class="pre-prettyprint"><pre class="prettyprint" title="Evaluate Javascript expression" onclick="var compressed = LZString.compressToEncodedURIComponent(''+'\n'+'function make_accumulator(current) {\n    function add(arg) {\n        current = current + arg;\n        return current;\n    }\n    return add;\n}'+'\n'+'\n// make_accumulator to be written by students\nconst a = make_accumulator(5);\n  \na(10);  // output: 15\n    \na(10);  // output: 25\n    '+'\n'); var url = 'https://sourceacademy.nus.edu.sg/playground#chap=3&amp;prgrm='+compressed; window.open(url); ">function make_accumulator(current) {
    function add(arg) {
        current = current + arg;
        return current;
    }
    return add;
}</pre></div></div>
  </SOLUTION></div>
</div>
      </EXERCISE>
</div>

      <div class="permalink">
<a name="ex_3.2" class="permalink"></a><EXERCISE><b><a class="exercise-number permalink" id="ex_3.2">Exercise 3.2 </a></b>
        In software-testing applications, it is useful to be able to count the
        number of times a given
        function
        is called during the course of a
        computation.  Write a
        function
        
        
        
<kbd>make_monitored</kbd>
that takes as
        input a
        function, <kbd>f</kbd>, that itself takes one input.  The result
        returned by 
<kbd>make_monitored</kbd>
is a third
        function, say <kbd>mf</kbd>,
        that keeps track of the number of times it has been called by
        maintaining an internal counter. If the input to <kbd>mf</kbd> is the
string <kbd>"how many calls?"</kbd>, 
then <kbd>mf</kbd> returns the
        value of the counter.  If the input is the 
string <kbd>"reset count"</kbd>, then <kbd>mf</kbd> resets the counter to zero.  For any other
        input, <kbd>mf</kbd> returns the result of calling <kbd>f</kbd> on that input
        and increments the counter.  For instance, we could make a monitored
        version of the <kbd>sqrt</kbd>
        function:

<div class="snippet" id="javascript_49_24_div"><div class="pre-prettyprint"><pre class="prettyprint" title="Evaluate Javascript expression" onclick="var compressed = LZString.compressToEncodedURIComponent(''+'\n'+'// make_monitored function to be written by students\nconst s = make_monitored(math_sqrt);'+'\n'+''+'\n'); var url = 'https://sourceacademy.nus.edu.sg/playground#chap=3&amp;prgrm='+compressed; window.open(url); ">// make_monitored function to be written by students
const s = make_monitored(math_sqrt);</pre></div></div>

<div class="snippet" id="javascript_49_25_div"><div class="pre-prettyprint"><pre class="prettyprint" title="Evaluate Javascript expression" onclick="var compressed = LZString.compressToEncodedURIComponent('\n// make_monitored function to be written by students\nconst s = make_monitored(math_sqrt);\n    '+'\n'+'s(100);'+'\n'+''+'\n'); var url = 'https://sourceacademy.nus.edu.sg/playground#chap=3&amp;prgrm='+compressed; window.open(url); ">s(100);</pre></div></div>

<div class="snippet" id="javascript_49_26_div"><div class="pre-prettyprint"><pre class="prettyprint" title="Evaluate Javascript expression" onclick="var compressed = LZString.compressToEncodedURIComponent('\n// make_monitored function to be written by students\nconst s = make_monitored(math_sqrt);\n    \ns(100);\n    '+'\n'+'s(&quot;how many calls?&quot;); // returns 1'+'\n'+''+'\n'); var url = 'https://sourceacademy.nus.edu.sg/playground#chap=3&amp;prgrm='+compressed; window.open(url); ">s("how many calls?"); // returns 1</pre></div></div>

<div class="Solution">
<div class="solution_btn"><button class="btn btn-secondary solution_btn" href="#solution_49_2_div" data-toggle="collapse">Solution</button></div>
<div class="solution_content collapse" id="solution_49_2_div"><SOLUTION>

  <div class="snippet" id="javascript_49_27_div"><div class="pre-prettyprint"><pre class="prettyprint" title="Evaluate Javascript expression" onclick="var compressed = LZString.compressToEncodedURIComponent(''+'\n'+'const s = make_monitored(math_sqrt);\ns(100);\ndisplay(s(&quot;how many calls&quot;));\ns(5);\ndisplay(s(&quot;how many calls&quot;));'+'\n'+''+'\n'); var url = 'https://sourceacademy.nus.edu.sg/playground#chap=3&amp;prgrm='+compressed; window.open(url); ">const s = make_monitored(math_sqrt);
s(100);
display(s("how many calls"));
s(5);
display(s("how many calls"));</pre></div></div>
  <div class="snippet" id="javascript_49_28_div"><div class="pre-prettyprint"><pre class="prettyprint" title="Evaluate Javascript expression" onclick="var compressed = LZString.compressToEncodedURIComponent(''+'\n'+'function make_monitored(f) {\n    let counter = 0; //initialized to 0\n    function mf(cmd) {\n        if (cmd === &quot;how many calls&quot;) {\n            return counter;\n        } else if (cmd === &quot;reset count&quot;) {\n            counter = 0;\n            return counter;\n        } else {\n            counter = counter + 1;\n            return f(cmd);\n        }\n    }\n    return mf;\n}'+'\n'+'\nconst s = make_monitored(math_sqrt);\ns(100);\ndisplay(s(&quot;how many calls&quot;));\ns(5);\ndisplay(s(&quot;how many calls&quot;));\n          '+'\n'); var url = 'https://sourceacademy.nus.edu.sg/playground#chap=3&amp;prgrm='+compressed; window.open(url); ">function make_monitored(f) {
    let counter = 0; //initialized to 0
    function mf(cmd) {
        if (cmd === "how many calls") {
            return counter;
        } else if (cmd === "reset count") {
            counter = 0;
            return counter;
        } else {
            counter = counter + 1;
            return f(cmd);
        }
    }
    return mf;
}</pre></div></div>
  </SOLUTION></div>
</div>
	      
      </EXERCISE>
</div>


      <div class="permalink">
<a name="ex_3.3" class="permalink"></a><EXERCISE><b><a class="exercise-number permalink" id="ex_3.3">Exercise 3.3 </a></b>
        
        
        Modify the 
<kbd>make_account</kbd>
        function
        so that it creates
        password-protected accounts.  That is, 
<kbd>make_account</kbd>
should take
        a symbol as an additional argument, as in

        <div class="snippet" id="javascript_49_29_div"><div class="pre-prettyprint"><pre class="prettyprint" title="Evaluate Javascript expression" onclick="var compressed = LZString.compressToEncodedURIComponent(''+'\n'+'// make_account function to be written by students\nconst acc = make_account(100, &quot;secret password&quot;);'+'\n'+''+'\n'); var url = 'https://sourceacademy.nus.edu.sg/playground#chap=3&amp;prgrm='+compressed; window.open(url); ">// make_account function to be written by students
const acc = make_account(100, "secret password");</pre></div></div>

        The resulting account object should process a request only if it is
        accompanied by the password with which the account was created, and
        should otherwise return a complaint:

        <div class="snippet" id="javascript_49_30_div"><div class="pre-prettyprint"><pre class="prettyprint" title="Evaluate Javascript expression" onclick="var compressed = LZString.compressToEncodedURIComponent('\n// make_account function to be written by students\nconst acc = make_account(100, &quot;secret password&quot;);\n    '+'\n'+'(acc(&quot;secret password&quot;, &quot;withdraw&quot;))(40); // result: 60'+'\n'+''+'\n'); var url = 'https://sourceacademy.nus.edu.sg/playground#chap=3&amp;prgrm='+compressed; window.open(url); ">(acc("secret password", "withdraw"))(40); // result: 60</pre></div></div>

        <div class="snippet" id="javascript_49_31_div"><div class="pre-prettyprint"><pre class="prettyprint" title="Evaluate Javascript expression" onclick="var compressed = LZString.compressToEncodedURIComponent('\n// make_account function to be written by students\nconst acc = make_account(100, &quot;secret password&quot;);\n    \n(acc(&quot;secret password&quot;, &quot;withdraw&quot;))(40); // result: 60\n    '+'\n'+'(acc(&quot;some other password&quot;, &quot;deposit&quot;))(40);  \n// result: incorrect password'+'\n'+''+'\n'); var url = 'https://sourceacademy.nus.edu.sg/playground#chap=3&amp;prgrm='+compressed; window.open(url); ">(acc("some other password", "deposit"))(40);  
// result: incorrect password</pre></div></div>


	<div class="Solution">
<div class="solution_btn"><button class="btn btn-secondary solution_btn" href="#solution_49_3_div" data-toggle="collapse">Solution</button></div>
<div class="solution_content collapse" id="solution_49_3_div"><SOLUTION>
        <div class="snippet" id="javascript_49_32_div"><div class="pre-prettyprint"><pre class="prettyprint" title="Evaluate Javascript expression" onclick="var compressed = LZString.compressToEncodedURIComponent(''+'\n'+'function make_account(balance, p) {\n    function withdraw(amount) {\n        if (balance &gt;= amount) {\n            balance = balance - amount;\n            return balance;\n        } else {\n            return &quot;Insufficient funds&quot;;\n        }\n    }\n    function deposit(amount) {\n        balance = balance + amount;\n        return balance;\n    }\n    function dispatch(m, q) {\n        if (p === q) {\n            if (m === &quot;withdraw&quot;) {\n                return withdraw;\n            } else if (m === &quot;deposit&quot;) {\n                return deposit;\n            } else {\n                return &quot;Unknown request - make_account&quot;;\n            }\n    	} else {\n            return q =&gt; &quot;Incorrect Password&quot;;\n        }\n    }\n    return dispatch;\n}\n\nconst a = make_account(100, &quot;eva&quot;);\n(a(&quot;withdraw&quot;, &quot;eva&quot;))(50); //withdraws 50\n(a(&quot;withdraw&quot;, &quot;ben&quot;))(40); //incorrect password'+'\n'+''+'\n'); var url = 'https://sourceacademy.nus.edu.sg/playground#chap=3&amp;prgrm='+compressed; window.open(url); ">function make_account(balance, p) {
    function withdraw(amount) {
        if (balance &gt;= amount) {
            balance = balance - amount;
            return balance;
        } else {
            return "Insufficient funds";
        }
    }
    function deposit(amount) {
        balance = balance + amount;
        return balance;
    }
    function dispatch(m, q) {
        if (p === q) {
            if (m === "withdraw") {
                return withdraw;
            } else if (m === "deposit") {
                return deposit;
            } else {
                return "Unknown request - make_account";
            }
    	} else {
            return q =&gt; "Incorrect Password";
        }
    }
    return dispatch;
}

const a = make_account(100, "eva");
(a("withdraw", "eva"))(50); //withdraws 50
(a("withdraw", "ben"))(40); //incorrect password</pre></div></div>
  </SOLUTION></div>
</div>

      </EXERCISE>
</div>


      <div class="permalink">
<a name="ex_3.4" class="permalink"></a><EXERCISE><b><a class="exercise-number permalink" id="ex_3.4">Exercise 3.4 </a></b>
        Modify the 
<kbd>make_account</kbd>
        function
        of
        exercise <REF NAME="ex:password-protection"><a class="superscript" id="3.1.1-ex-link-3.3" href="49#ex_3.3">3.3</a></REF> by adding another local state
        variable so that, if an account is accessed more than seven
        consecutive times with an incorrect password, it invokes the
        function
<kbd>call_the_cops</kbd>. 
     	
  <div class="Solution">
<div class="solution_btn"><button class="btn btn-secondary solution_btn" href="#solution_49_4_div" data-toggle="collapse">Solution</button></div>
<div class="solution_content collapse" id="solution_49_4_div"><SOLUTION>
    <div class="snippet" id="javascript_49_33_div"><div class="pre-prettyprint"><pre class="prettyprint" title="Evaluate Javascript expression" onclick="var compressed = LZString.compressToEncodedURIComponent(''+'\n'+'function make_account(balance, p) {\n\n    let invalid_attempts = 0; //initializes to 0\n\n    function withdraw(amount) {\n        if (balance &gt;= amount) {\n            balance = balance - amount;\n            return balance;\n        } else {\n            return &quot;Insufficient funds&quot;;\n        }\n    }\n\n    function deposit(amount) {\n        balance = balance + amount;\n        return balance;\n    }\n\n    function call_the_cops() {\n        return &quot;calling the cops as you have exceeded &quot; +\n               &quot;the max no of failed attempts&quot;;\n    }\n\n    function dispatch(m, q) {\n        if (invalid_attempts &lt;= 7) {\n            if (p === q) {\n                if (m === &quot;withdraw&quot;) {\n                    return withdraw;\n                } else if (m === &quot;deposit&quot;) {\n                    return deposit;\n                } else {\n                    return &quot;Unknown request - make_account&quot;;\n                }\n            } else {\n                invalid_attempts = invalid_attempts + 1;\n    	        return &quot;Incorrect Password&quot;;\n            }\n        } else {\n            return call_the_cops();\n        }\n    }\n\n    return dispatch;\n\n}'+'\n'+'\nconst a = make_account(100, &quot;eva&quot;);\n(a(&quot;withdraw&quot;, &quot;eva&quot;))(50);\n(a(&quot;withdraw&quot;, &quot;eva&quot;))(50);\n(a(&quot;withdraw&quot;, &quot;eva&quot;))(50);\n(a(&quot;withdraw&quot;, &quot;eva&quot;))(50);\n(a(&quot;withdraw&quot;, &quot;eva&quot;))(50);\n(a(&quot;withdraw&quot;, &quot;eva&quot;))(50);\n    '+'\n'); var url = 'https://sourceacademy.nus.edu.sg/playground#chap=3&amp;prgrm='+compressed; window.open(url); ">function make_account(balance, p) {

    let invalid_attempts = 0; //initializes to 0

    function withdraw(amount) {
        if (balance &gt;= amount) {
            balance = balance - amount;
            return balance;
        } else {
            return "Insufficient funds";
        }
    }

    function deposit(amount) {
        balance = balance + amount;
        return balance;
    }

    function call_the_cops() {
        return "calling the cops as you have exceeded " +
               "the max no of failed attempts";
    }

    function dispatch(m, q) {
        if (invalid_attempts &lt;= 7) {
            if (p === q) {
                if (m === "withdraw") {
                    return withdraw;
                } else if (m === "deposit") {
                    return deposit;
                } else {
                    return "Unknown request - make_account";
                }
            } else {
                invalid_attempts = invalid_attempts + 1;
    	        return "Incorrect Password";
            }
        } else {
            return call_the_cops();
        }
    }

    return dispatch;

}</pre></div></div>

    
    
  </SOLUTION></div>
</div>
	      
	</EXERCISE>
</div>
      
      

    <hr>
<div class="footnote">
<a class="footnote-number" id="footnote-1" href="49#footnote-link-1">[1] </a><FOOTNOTE>Actually,
          this is not quite true.  One exception was the 
          
          
          random-number generator
          in section <REF NAME="sec:primality"><a class="superscript" id="3.1.1-sec-link-1.2.6" href="17">1.2.6</a></REF>.  Another exception involved the
          
          operation/type tables we introduced in section <REF NAME="sec:data-directed"><a class="superscript" id="3.1.1-sec-link-2.4.3" href="42">2.4.3</a></REF>,
          where the values of two calls to <kbd>get</kbd> with the same arguments
          depended on intervening calls to <kbd>put</kbd>.
          On the other hand, until we introduce
          assignment, we have no way to create such
          functions
          ourselves.</FOOTNOTE>
</div>
<div class="footnote">
<a class="footnote-number" id="footnote-2" href="49#footnote-link-2">[2] </a><FOOTNOTE>Note that assignment statements look similar to and should not be confused
            with constant and variable declarations of the form
            <kbd EVAL="no" LATEX="yes" class="snippet">const $\textit{name}$ = $\textit{value}$;</kbd>
	    and
            <kbd EVAL="no" LATEX="yes" class="snippet">let $\textit{name}$ = $\textit{value}$;</kbd>
            in which a newly declared $\textit{name}$
            is associated with a $\textit{value}$. Also similar in looks but not
	    in meaning are expressions of the form 
            <kbd EVAL="no" LATEX="yes" class="snippet">$\textit{expression}_1$ === $\textit{expression}_2$</kbd>
	    which evaluate to <kbd>true</kbd>
	    if $\textit{expression}_1$ evaluates to the same value as
	    $\textit{expression}_2$ and to
	    <kbd>false</kbd>, otherwise.
            </FOOTNOTE>
</div>
<div class="footnote">
<a class="footnote-number" id="footnote-3" href="49#footnote-link-3">[3] </a><FOOTNOTE>We have already used 
          
          sequential composition implicitly in our
          programs, because in JavaScript the body of a
          function can be a sequence
          of statements, not just a single
	  <kbd>return</kbd> statement,
	  as discussed in
	  section <REF NAME="sec:block-structure"><a class="superscript" id="3.1.1-sec-link-1.1.8" href="10">1.1.8</a></REF>.</FOOTNOTE>
</div>
<div class="footnote">
<a class="footnote-number" id="footnote-4" href="49#footnote-link-4">[4] </a><FOOTNOTE>Blocks as bodies
	    of function definition expressions were introduced in
	    section <REF NAME="sec:graphics"><a class="superscript" id="3.1.1-sec-link-2.2.4" href="33">2.2.4</a></REF>.
	    </FOOTNOTE>
</div>
<div class="footnote">
<a class="footnote-number" id="footnote-5" href="49#footnote-link-5">[5] </a><FOOTNOTE>In programming-language jargon, the variable
	    <kbd>balance</kbd> is said to be 
            
            
            <EM>encapsulated</EM> within the <kbd>new_withdraw</kbd>
	    function.  Encapsulation reflects the general system-design principle known as the 
            
            
            <EM>hiding principle</EM>: One can
            make a system more modular and robust by protecting parts of the
            system from each other; that is, by providing information access only
            to those parts of the system that have a <QUOTE>need to know.</QUOTE></FOOTNOTE>
</div>
<div class="footnote">
<a class="footnote-number" id="footnote-6" href="49#footnote-link-6">[6] </a><FOOTNOTE>In contrast
	with 
	<kbd>make_withdraw</kbd>
	above, we do not
        have to use
	
	<kbd>let</kbd>
	to make <kbd>balance</kbd> a local variable, since
        formal parameters are already local.  This will be clearer after the
        discussion of the environment model of evaluation
	in section <REF NAME="sec:environment-model"><a class="superscript" id="3.1.1-sec-link-3.2" href="52">3.2</a></REF>.
        (See also exercise <REF NAME="ex:local-state-variable"><a class="superscript" id="3.1.1-ex-link-3.10" href="55#ex_3.10">3.10</a></REF>.)</FOOTNOTE>
</div></SUBSECTION></div>
    </div>

    <div class="nav">

        <button type="button" class="btn btn-secondary" style="background-color: #fff;">
          <a href="48">&lt; Previous</a>
        </button>

    <div style="flex-grow: 1;"></div>
    
        <button type="button" class="btn btn-secondary" style="background-color: #fff;">
          <a class="scroll-next" href="50">Next &gt;</a>
        </button>


  </div>
  <div class="chapter_sign">
        3.1.1 
        Local State Variables
      
    </div>
  <script>
//<![CDATA[
var chapter_id = 49;
//]]>
</script>
  <div class="next-page"></div>
</div>

     </div><!-- /.container -->


     <!--<script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-alpha.6/js/bootstrap.min.js" integrity="sha384-vBWWzlZJ8ea9aCX4pEW3rVHjgjt7zpkNpZk+02D9phzyeVkE+jo0ieGizqPLForn" crossorigin="anonymous"></script>
     -->
   </body>
</html>
