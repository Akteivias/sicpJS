<!DOCTYPE html>
<html lang="en">
  <head>

<!-- Global site tag (gtag.js) - Google Analytics -->
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-156801664-1"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'UA-156801664-1');
</script>
    
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=Edge,chrome=1">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="description" content="2.2.2 
        Hierarchical Structures
      " />
    <title>
         2.2.2 
        Hierarchical Structures
      
    </title>

    <meta name="csrf-param" content="authenticity_token" />
<meta name="csrf-token" content="LVYeB0ZwQrHEKMeP2hE4wWuzZ+CKl0gc55WbUp86e99aP2kBgj5CK/U1jYe1zpuxTTFKuZQ08m15VQxZkYHk9g==" />

    <!--<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-alpha.6/css/bootstrap.min.css" integrity="sha384-rwoIResjU2yc3z8GV/NPeZWAv56rSmLldC3R/AZzGRnGxQQKnKkoFVhFQhNUwEyJ" crossorigin="anonymous">
    -->
    <link href="https://fonts.googleapis.com/css?family=Inconsolata&display?swap" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css?family=Droid+Sans|Droid+Serif" rel="stylesheet">
    <link rel="stylesheet" media="all" href="../assets/application-646697584dca3e04ba2ffbdf497816ce21a735eef61eccd54a0f8bf08a4e82e9.css" />

   <link rel="shortcut icon" type="image/x-icon" href="../assets/favicon-17dbf972938cc63d48794e3be2c66977e723014f9a9518097da971fb34202187.ico" />

<!--    <link rel="shortcut icon" type="image/png" href="/images/lambda.png" /> -->

    <!-- for support of progressive web app, see github README -->
    <link rel="manifest" href="../static/manifest.json">

    <script src="https://code.jquery.com/jquery-3.2.1.min.js" 
		     	  integrity="sha256-hwg4gsxgFZhOsEEamdOYGBf13FyQuiTwlAQgxVSNgt4="
	          crossorigin="anonymous">
    </script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/tether/1.4.0/js/tether.min.js"></script>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.6/umd/popper.min.js" integrity="sha384-wHAiFfRlMFy6i5SRaxvfOCifBUQy1xHdJ/yoi7FRNXMRBu5WHdZYu1hA6ZOblgut" crossorigin="anonymous"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.2.1/js/bootstrap.min.js" integrity="sha384-B0UglyR+jN6CkvvICOB2joaf5I4l3gm9GU6Hc1og6Ls7i6U/mkkaduKaBhlAXv9k" crossorigin="anonymous"></script>
    
    <!-- <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-alpha.6/js/bootstrap.min.js" integrity="sha384-vBWWzlZJ8ea9aCX4pEW3rVHjgjt7zpkNpZk+02D9phzyeVkE+jo0ieGizqPLForn" crossorigin="anonymous"></script> -->
    <script type="text/javascript" 
      src="https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.4/latest.js?config=TeX-AMS-MML_HTMLorMML-full">
    </script>
   <!--  <script type="text/javascript" 
      src="../MathJax/MathJax.js?config=TeX-AMS-MML_HTMLorMML-full">
    </script> -->

    <script src="../assets/application-77eef7aa2695bed514b473158fa8f35a6ae4cb10c6e0f2ae8e2b485af0611d43.js"></script>

    <!-- Rendering inline LaTeX -->
    <script type="text/x-mathjax-config">
      MathJax.Hub.Config({
        tex2jax: {
          inlineMath: [ ['$','$'], ["\\(","\\)"] ],
          processEscapes: true,
          jax: ["input/TeX","output/HTML-CSS"]
        }
      });
    </script>
    <!--<script src="/mathjax/MathJax.js?config=TeX-AMS_HTML-full.js" type="text/javascript"></script>-->
    <!-- Le HTML5 shim, for IE6-8 support of HTML elements -->
    <!--[if lt IE 9]>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.2/html5shiv.min.js" type="text/javascript"></script>
    <![endif]-->
  </head>
  <body>

    
    <!-- support for progressive web app, see README -->
    <script>
      if ('serviceWorker' in navigator && !navigator.serviceWorker.controller) {
          navigator.serviceWorker.register("/sw.js").then(function(reg) {
              console.log("Service worker has been registered for scope: " + reg.scope);
          });
      }
    </script>

     <nav class="navbar navbar-expand-sm navbar-dark bg-dark fixed-top justify-content-between">
       <button id="btn" class="navbar-toggler collapsed" type="button" data-toggle="collapse" data-target="#nav-sidebar" aria-controls="nav-sidebar" aria-expanded="false" aria-label="Toggle navigation" title="navigation">
         <span class="navbar-toggler-icon"></span>
       </button>
       <span class="navbar-brand-short"><a title="Go back to front page" href="../index.html" class="gray">SICP &mdash; JS</a></span>
       <span class="navbar-brand-long" ><a title="Go back to front page" href="../index.html" class="gray">Structure and Interpretation
            of Computer Programs &mdash; JavaScript Adaptation</a></span>

       <!-- edit the search engine by visiting: 
	    https://cse.google.com/cse/setup/basic?cx=015760785273492757659:nc_tznrzlsg 
	       -->
       <form class="form-inline ml-auto" id="xxx">
         <div id="search-box">
	         <script>
	           (function() {
	               var cx = "015760785273492757659:nc_tznrzlsg";
	               var gcse = document.createElement("script");
	               gcse.type = "text/javascript";
	               gcse.async = true;
	               gcse.src = "https://cse.google.com/cse.js?cx=" + cx;
	               var s = document.getElementsByTagName("script")[0];
	               s.parentNode.insertBefore(gcse, s);
	           })();
	           window.onload = function()
	           { 
	               var searchBox =  document.getElementById("gsc-i-id1");
	               searchBox.placeholder="search web edition";
	               searchBox.title="search web edition"; 
	           }
	         </script>
	         <gcse:search></gcse:search>
         </div>
       </form>
       <span class="navbar-brand-short">
         &nbsp;
         &nbsp;
         <a href="https://sicp.comp.nus.edu.sg/source/" title="Go to the Source language(s) definition(s)" class="gray">S</a>
       </span>
       <span class="navbar-brand-long">
         &nbsp;
         &nbsp;
         <a href="https://sicp.comp.nus.edu.sg/source/" title="Go to the Source language(s) definition(s)" class="gray">Source</a>
       </span>
     </nav>
     
     <div class="container scroll">

       <div class="collapse" id="nav-sidebar" role="tablist" aria-multiselectable="true">
	 <!-- insert a dummy entry, to give one extra line of space -->
         <a class="navbar-brand" href="index.html">&nbsp;</a>
                     <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-122">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-122" aria-expanded="false" aria-controls="sidebar-collapse-122">
                    <a href="122">        Foreword    </a>
                  </span>
                </h5>
              </div>
            </div>

                     <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-123">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-123" aria-expanded="false" aria-controls="sidebar-collapse-123">
                    <a href="123">        Prefaces    </a>
                  </span>
                </h5>
              </div>
            </div>

                     <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-124">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-124" aria-expanded="false" aria-controls="sidebar-collapse-124">
                    <a href="124">Acknowledgments    </a>
                  </span>
                </h5>
              </div>
            </div>

                     <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-1">
                <h5 class="mb-0">
                  <a class="sidebar-show collapsed" data-toggle="collapse" href="#sidebar-collapse-1" aria-expanded="true" aria-controls="sidebar-collapse-1">
                     &#10148;   <!-- ➤ (because this one is rendered blue on mobile: ▶  -->
                  </a>
                  <a class="sidebar-hide collapsed" data-toggle="collapse" href="#sidebar-collapse-1" aria-expanded="true" aria-controls="sidebar-collapse-1">
                    &#x25BC;    <!-- ▼ (because the corresponding one is not rendered) -->
                  </a>
                    <a href="1">1        Building Abstractions with       Functions    </a>
                </h5>
              </div>
              <div id="sidebar-collapse-1" class="collapse" role="tabpanel" aria-labelledby="headingOne">
                <div class="card-block">
                                <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-2">
                <h5 class="mb-0">
                  <a class="sidebar-show collapsed" data-toggle="collapse" href="#sidebar-collapse-2" aria-expanded="true" aria-controls="sidebar-collapse-2">
                     &#10148;   <!-- ➤ (because this one is rendered blue on mobile: ▶  -->
                  </a>
                  <a class="sidebar-hide collapsed" data-toggle="collapse" href="#sidebar-collapse-2" aria-expanded="true" aria-controls="sidebar-collapse-2">
                    &#x25BC;    <!-- ▼ (because the corresponding one is not rendered) -->
                  </a>
                    <a href="2">1.1  The Elements of Programming</a>
                </h5>
              </div>
              <div id="sidebar-collapse-2" class="collapse" role="tabpanel" aria-labelledby="headingOne">
                <div class="card-block">
                                <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-3">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-3" aria-expanded="false" aria-controls="sidebar-collapse-3">
                    <a href="3">1.1.1  Expressions</a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-4">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-4" aria-expanded="false" aria-controls="sidebar-collapse-4">
                    <a href="4">1.1.2  Naming and the Environment</a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-5">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-5" aria-expanded="false" aria-controls="sidebar-collapse-5">
                    <a href="5">1.1.3            Evaluating          Operator Combinations        </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-6">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-6" aria-expanded="false" aria-controls="sidebar-collapse-6">
                    <a href="6">1.1.4            Functions        </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-7">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-7" aria-expanded="false" aria-controls="sidebar-collapse-7">
                    <a href="7">1.1.5            The Substitution Model for                                                 Function                              Application        </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-8">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-8" aria-expanded="false" aria-controls="sidebar-collapse-8">
                    <a href="8">1.1.6            Conditional Expressions and Predicates        </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-9">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-9" aria-expanded="false" aria-controls="sidebar-collapse-9">
                    <a href="9">1.1.7  Example: Square Roots by Newtons Method</a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-10">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-10" aria-expanded="false" aria-controls="sidebar-collapse-10">
                    <a href="10">1.1.8                                                  Functions                                as Black-Box Abstractions        </a>
                  </span>
                </h5>
              </div>
            </div>

                </div>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-11">
                <h5 class="mb-0">
                  <a class="sidebar-show collapsed" data-toggle="collapse" href="#sidebar-collapse-11" aria-expanded="true" aria-controls="sidebar-collapse-11">
                     &#10148;   <!-- ➤ (because this one is rendered blue on mobile: ▶  -->
                  </a>
                  <a class="sidebar-hide collapsed" data-toggle="collapse" href="#sidebar-collapse-11" aria-expanded="true" aria-controls="sidebar-collapse-11">
                    &#x25BC;    <!-- ▼ (because the corresponding one is not rendered) -->
                  </a>
                    <a href="11">1.2              Functions            and the Processes They Generate      </a>
                </h5>
              </div>
              <div id="sidebar-collapse-11" class="collapse" role="tabpanel" aria-labelledby="headingOne">
                <div class="card-block">
                                <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-12">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-12" aria-expanded="false" aria-controls="sidebar-collapse-12">
                    <a href="12">1.2.1  Linear Recursion and Iteration</a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-13">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-13" aria-expanded="false" aria-controls="sidebar-collapse-13">
                    <a href="13">1.2.2  Tree Recursion</a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-14">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-14" aria-expanded="false" aria-controls="sidebar-collapse-14">
                    <a href="14">1.2.3  Orders of Growth</a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-15">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-15" aria-expanded="false" aria-controls="sidebar-collapse-15">
                    <a href="15">1.2.4  Exponentiation</a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-16">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-16" aria-expanded="false" aria-controls="sidebar-collapse-16">
                    <a href="16">1.2.5  Greatest Common Divisors</a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-17">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-17" aria-expanded="false" aria-controls="sidebar-collapse-17">
                    <a href="17">1.2.6  Example: Testing for Primality</a>
                  </span>
                </h5>
              </div>
            </div>

                </div>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-18">
                <h5 class="mb-0">
                  <a class="sidebar-show collapsed" data-toggle="collapse" href="#sidebar-collapse-18" aria-expanded="true" aria-controls="sidebar-collapse-18">
                     &#10148;   <!-- ➤ (because this one is rendered blue on mobile: ▶  -->
                  </a>
                  <a class="sidebar-hide collapsed" data-toggle="collapse" href="#sidebar-collapse-18" aria-expanded="true" aria-controls="sidebar-collapse-18">
                    &#x25BC;    <!-- ▼ (because the corresponding one is not rendered) -->
                  </a>
                    <a href="18">1.3          Formulating Abstractions with Higher-Order         Functions      </a>
                </h5>
              </div>
              <div id="sidebar-collapse-18" class="collapse" role="tabpanel" aria-labelledby="headingOne">
                <div class="card-block">
                                <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-19">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-19" aria-expanded="false" aria-controls="sidebar-collapse-19">
                    <a href="19">1.3.1            Functions          as Arguments        </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-20">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-20" aria-expanded="false" aria-controls="sidebar-collapse-20">
                    <a href="20">1.3.2            Function Definition Expressions          </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-21">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-21" aria-expanded="false" aria-controls="sidebar-collapse-21">
                    <a href="21">1.3.3              Functions            as General Methods          </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-22">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-22" aria-expanded="false" aria-controls="sidebar-collapse-22">
                    <a href="22">1.3.4      Functions    as Returned Values  </a>
                  </span>
                </h5>
              </div>
            </div>

                </div>
              </div>
            </div>

                </div>
              </div>
            </div>

                     <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-23">
                <h5 class="mb-0">
                  <a class="sidebar-show collapsed" data-toggle="collapse" href="#sidebar-collapse-23" aria-expanded="true" aria-controls="sidebar-collapse-23">
                     &#10148;   <!-- ➤ (because this one is rendered blue on mobile: ▶  -->
                  </a>
                  <a class="sidebar-hide collapsed" data-toggle="collapse" href="#sidebar-collapse-23" aria-expanded="true" aria-controls="sidebar-collapse-23">
                    &#x25BC;    <!-- ▼ (because the corresponding one is not rendered) -->
                  </a>
                    <a href="23">2  Building Abstractions with Data</a>
                </h5>
              </div>
              <div id="sidebar-collapse-23" class="collapse" role="tabpanel" aria-labelledby="headingOne">
                <div class="card-block">
                                <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-24">
                <h5 class="mb-0">
                  <a class="sidebar-show collapsed" data-toggle="collapse" href="#sidebar-collapse-24" aria-expanded="true" aria-controls="sidebar-collapse-24">
                     &#10148;   <!-- ➤ (because this one is rendered blue on mobile: ▶  -->
                  </a>
                  <a class="sidebar-hide collapsed" data-toggle="collapse" href="#sidebar-collapse-24" aria-expanded="true" aria-controls="sidebar-collapse-24">
                    &#x25BC;    <!-- ▼ (because the corresponding one is not rendered) -->
                  </a>
                    <a href="24">2.1  Introduction to Data Abstraction</a>
                </h5>
              </div>
              <div id="sidebar-collapse-24" class="collapse" role="tabpanel" aria-labelledby="headingOne">
                <div class="card-block">
                                <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-25">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-25" aria-expanded="false" aria-controls="sidebar-collapse-25">
                    <a href="25">2.1.1      Example: Arithmetic Operations for Rational Numbers  </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-26">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-26" aria-expanded="false" aria-controls="sidebar-collapse-26">
                    <a href="26">2.1.2          Abstraction Barriers      </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-27">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-27" aria-expanded="false" aria-controls="sidebar-collapse-27">
                    <a href="27">2.1.3          What Is Meant by Data?      </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-28">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-28" aria-expanded="false" aria-controls="sidebar-collapse-28">
                    <a href="28">2.1.4          Extended Exercise: Interval Arithmetic      </a>
                  </span>
                </h5>
              </div>
            </div>

                </div>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-29">
                <h5 class="mb-0">
                  <a class="sidebar-show collapsed" data-toggle="collapse" href="#sidebar-collapse-29" aria-expanded="true" aria-controls="sidebar-collapse-29">
                     &#10148;   <!-- ➤ (because this one is rendered blue on mobile: ▶  -->
                  </a>
                  <a class="sidebar-hide collapsed" data-toggle="collapse" href="#sidebar-collapse-29" aria-expanded="true" aria-controls="sidebar-collapse-29">
                    &#x25BC;    <!-- ▼ (because the corresponding one is not rendered) -->
                  </a>
                    <a href="29">2.2  Hierarchical Data and the Closure Property</a>
                </h5>
              </div>
              <div id="sidebar-collapse-29" class="collapse" role="tabpanel" aria-labelledby="headingOne">
                <div class="card-block">
                                <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-30">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-30" aria-expanded="false" aria-controls="sidebar-collapse-30">
                    <a href="30">2.2.1          Representing Sequences      </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-31">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-31" aria-expanded="false" aria-controls="sidebar-collapse-31">
                    <a href="31">2.2.2          Hierarchical Structures      </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-32">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-32" aria-expanded="false" aria-controls="sidebar-collapse-32">
                    <a href="32">2.2.3          Sequences as Conventional Interfaces      </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-33">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-33" aria-expanded="false" aria-controls="sidebar-collapse-33">
                    <a href="33">2.2.4          Example: A Picture Language      </a>
                  </span>
                </h5>
              </div>
            </div>

                </div>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-34">
                <h5 class="mb-0">
                  <a class="sidebar-show collapsed" data-toggle="collapse" href="#sidebar-collapse-34" aria-expanded="true" aria-controls="sidebar-collapse-34">
                     &#10148;   <!-- ➤ (because this one is rendered blue on mobile: ▶  -->
                  </a>
                  <a class="sidebar-hide collapsed" data-toggle="collapse" href="#sidebar-collapse-34" aria-expanded="true" aria-controls="sidebar-collapse-34">
                    &#x25BC;    <!-- ▼ (because the corresponding one is not rendered) -->
                  </a>
                    <a href="34">2.3  Symbolic Data</a>
                </h5>
              </div>
              <div id="sidebar-collapse-34" class="collapse" role="tabpanel" aria-labelledby="headingOne">
                <div class="card-block">
                                <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-35">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-35" aria-expanded="false" aria-controls="sidebar-collapse-35">
                    <a href="35">2.3.1          Strings      </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-36">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-36" aria-expanded="false" aria-controls="sidebar-collapse-36">
                    <a href="36">2.3.2          Example: Symbolic Differentiation      </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-37">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-37" aria-expanded="false" aria-controls="sidebar-collapse-37">
                    <a href="37">2.3.3          Example: Representing Sets      </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-38">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-38" aria-expanded="false" aria-controls="sidebar-collapse-38">
                    <a href="38">2.3.4          Example: Huffman Encoding Trees      </a>
                  </span>
                </h5>
              </div>
            </div>

                </div>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-39">
                <h5 class="mb-0">
                  <a class="sidebar-show collapsed" data-toggle="collapse" href="#sidebar-collapse-39" aria-expanded="true" aria-controls="sidebar-collapse-39">
                     &#10148;   <!-- ➤ (because this one is rendered blue on mobile: ▶  -->
                  </a>
                  <a class="sidebar-hide collapsed" data-toggle="collapse" href="#sidebar-collapse-39" aria-expanded="true" aria-controls="sidebar-collapse-39">
                    &#x25BC;    <!-- ▼ (because the corresponding one is not rendered) -->
                  </a>
                    <a href="39">2.4  Multiple Representations for Abstract Data</a>
                </h5>
              </div>
              <div id="sidebar-collapse-39" class="collapse" role="tabpanel" aria-labelledby="headingOne">
                <div class="card-block">
                                <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-40">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-40" aria-expanded="false" aria-controls="sidebar-collapse-40">
                    <a href="40">2.4.1          Representations for Complex Numbers      </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-41">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-41" aria-expanded="false" aria-controls="sidebar-collapse-41">
                    <a href="41">2.4.2          Tagged data      </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-42">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-42" aria-expanded="false" aria-controls="sidebar-collapse-42">
                    <a href="42">2.4.3          Data-Directed Programming and Additivity      </a>
                  </span>
                </h5>
              </div>
            </div>

                </div>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-43">
                <h5 class="mb-0">
                  <a class="sidebar-show collapsed" data-toggle="collapse" href="#sidebar-collapse-43" aria-expanded="true" aria-controls="sidebar-collapse-43">
                     &#10148;   <!-- ➤ (because this one is rendered blue on mobile: ▶  -->
                  </a>
                  <a class="sidebar-hide collapsed" data-toggle="collapse" href="#sidebar-collapse-43" aria-expanded="true" aria-controls="sidebar-collapse-43">
                    &#x25BC;    <!-- ▼ (because the corresponding one is not rendered) -->
                  </a>
                    <a href="43">2.5  Systems with Generic Operations</a>
                </h5>
              </div>
              <div id="sidebar-collapse-43" class="collapse" role="tabpanel" aria-labelledby="headingOne">
                <div class="card-block">
                                <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-44">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-44" aria-expanded="false" aria-controls="sidebar-collapse-44">
                    <a href="44">2.5.1          Generic Arithmetic Operations      </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-45">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-45" aria-expanded="false" aria-controls="sidebar-collapse-45">
                    <a href="45">2.5.2          Combining Data of Different Types      </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-46">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-46" aria-expanded="false" aria-controls="sidebar-collapse-46">
                    <a href="46">2.5.3          Example: Symbolic Algebra      </a>
                  </span>
                </h5>
              </div>
            </div>

                </div>
              </div>
            </div>

                </div>
              </div>
            </div>

                     <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-47">
                <h5 class="mb-0">
                  <a class="sidebar-show collapsed" data-toggle="collapse" href="#sidebar-collapse-47" aria-expanded="true" aria-controls="sidebar-collapse-47">
                     &#10148;   <!-- ➤ (because this one is rendered blue on mobile: ▶  -->
                  </a>
                  <a class="sidebar-hide collapsed" data-toggle="collapse" href="#sidebar-collapse-47" aria-expanded="true" aria-controls="sidebar-collapse-47">
                    &#x25BC;    <!-- ▼ (because the corresponding one is not rendered) -->
                  </a>
                    <a href="47">3  Modularity, Objects, and State</a>
                </h5>
              </div>
              <div id="sidebar-collapse-47" class="collapse" role="tabpanel" aria-labelledby="headingOne">
                <div class="card-block">
                                <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-48">
                <h5 class="mb-0">
                  <a class="sidebar-show collapsed" data-toggle="collapse" href="#sidebar-collapse-48" aria-expanded="true" aria-controls="sidebar-collapse-48">
                     &#10148;   <!-- ➤ (because this one is rendered blue on mobile: ▶  -->
                  </a>
                  <a class="sidebar-hide collapsed" data-toggle="collapse" href="#sidebar-collapse-48" aria-expanded="true" aria-controls="sidebar-collapse-48">
                    &#x25BC;    <!-- ▼ (because the corresponding one is not rendered) -->
                  </a>
                    <a href="48">3.1  Assignment and Local State</a>
                </h5>
              </div>
              <div id="sidebar-collapse-48" class="collapse" role="tabpanel" aria-labelledby="headingOne">
                <div class="card-block">
                                <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-49">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-49" aria-expanded="false" aria-controls="sidebar-collapse-49">
                    <a href="49">3.1.1          Local State Variables      </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-50">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-50" aria-expanded="false" aria-controls="sidebar-collapse-50">
                    <a href="50">3.1.2          The Benefits of Introducing Assignment      </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-51">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-51" aria-expanded="false" aria-controls="sidebar-collapse-51">
                    <a href="51">3.1.3          The Costs of Introducing Assignment      </a>
                  </span>
                </h5>
              </div>
            </div>

                </div>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-52">
                <h5 class="mb-0">
                  <a class="sidebar-show collapsed" data-toggle="collapse" href="#sidebar-collapse-52" aria-expanded="true" aria-controls="sidebar-collapse-52">
                     &#10148;   <!-- ➤ (because this one is rendered blue on mobile: ▶  -->
                  </a>
                  <a class="sidebar-hide collapsed" data-toggle="collapse" href="#sidebar-collapse-52" aria-expanded="true" aria-controls="sidebar-collapse-52">
                    &#x25BC;    <!-- ▼ (because the corresponding one is not rendered) -->
                  </a>
                    <a href="52">3.2  The Environment Model of Evaluation</a>
                </h5>
              </div>
              <div id="sidebar-collapse-52" class="collapse" role="tabpanel" aria-labelledby="headingOne">
                <div class="card-block">
                                <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-53">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-53" aria-expanded="false" aria-controls="sidebar-collapse-53">
                    <a href="53">3.2.1          The Rules for Evaluation      </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-54">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-54" aria-expanded="false" aria-controls="sidebar-collapse-54">
                    <a href="54">3.2.2          Applying Simple        Functions      </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-55">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-55" aria-expanded="false" aria-controls="sidebar-collapse-55">
                    <a href="55">3.2.3          Frames as the Repository of Local State      </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-56">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-56" aria-expanded="false" aria-controls="sidebar-collapse-56">
                    <a href="56">3.2.4          Internal Definitions      </a>
                  </span>
                </h5>
              </div>
            </div>

                </div>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-57">
                <h5 class="mb-0">
                  <a class="sidebar-show collapsed" data-toggle="collapse" href="#sidebar-collapse-57" aria-expanded="true" aria-controls="sidebar-collapse-57">
                     &#10148;   <!-- ➤ (because this one is rendered blue on mobile: ▶  -->
                  </a>
                  <a class="sidebar-hide collapsed" data-toggle="collapse" href="#sidebar-collapse-57" aria-expanded="true" aria-controls="sidebar-collapse-57">
                    &#x25BC;    <!-- ▼ (because the corresponding one is not rendered) -->
                  </a>
                    <a href="57">3.3  Modeling with Mutable Data</a>
                </h5>
              </div>
              <div id="sidebar-collapse-57" class="collapse" role="tabpanel" aria-labelledby="headingOne">
                <div class="card-block">
                                <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-58">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-58" aria-expanded="false" aria-controls="sidebar-collapse-58">
                    <a href="58">3.3.1          Mutable List Structure      </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-59">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-59" aria-expanded="false" aria-controls="sidebar-collapse-59">
                    <a href="59">3.3.2          Representing Queues      </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-60">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-60" aria-expanded="false" aria-controls="sidebar-collapse-60">
                    <a href="60">3.3.3          Representing Tables      </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-61">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-61" aria-expanded="false" aria-controls="sidebar-collapse-61">
                    <a href="61">3.3.4          A Simulator for Digital Circuits      </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-62">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-62" aria-expanded="false" aria-controls="sidebar-collapse-62">
                    <a href="62">3.3.5          Propagation of Constraints      </a>
                  </span>
                </h5>
              </div>
            </div>

                </div>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-63">
                <h5 class="mb-0">
                  <a class="sidebar-show collapsed" data-toggle="collapse" href="#sidebar-collapse-63" aria-expanded="true" aria-controls="sidebar-collapse-63">
                     &#10148;   <!-- ➤ (because this one is rendered blue on mobile: ▶  -->
                  </a>
                  <a class="sidebar-hide collapsed" data-toggle="collapse" href="#sidebar-collapse-63" aria-expanded="true" aria-controls="sidebar-collapse-63">
                    &#x25BC;    <!-- ▼ (because the corresponding one is not rendered) -->
                  </a>
                    <a href="63">3.4  Concurrency: Time Is of the Essence</a>
                </h5>
              </div>
              <div id="sidebar-collapse-63" class="collapse" role="tabpanel" aria-labelledby="headingOne">
                <div class="card-block">
                                <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-64">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-64" aria-expanded="false" aria-controls="sidebar-collapse-64">
                    <a href="64">3.4.1      The Nature of Time in Concurrent Systems  </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-65">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-65" aria-expanded="false" aria-controls="sidebar-collapse-65">
                    <a href="65">3.4.2      Mechanisms for Controlling Concurrency  </a>
                  </span>
                </h5>
              </div>
            </div>

                </div>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-66">
                <h5 class="mb-0">
                  <a class="sidebar-show collapsed" data-toggle="collapse" href="#sidebar-collapse-66" aria-expanded="true" aria-controls="sidebar-collapse-66">
                     &#10148;   <!-- ➤ (because this one is rendered blue on mobile: ▶  -->
                  </a>
                  <a class="sidebar-hide collapsed" data-toggle="collapse" href="#sidebar-collapse-66" aria-expanded="true" aria-controls="sidebar-collapse-66">
                    &#x25BC;    <!-- ▼ (because the corresponding one is not rendered) -->
                  </a>
                    <a href="66">3.5  Streams</a>
                </h5>
              </div>
              <div id="sidebar-collapse-66" class="collapse" role="tabpanel" aria-labelledby="headingOne">
                <div class="card-block">
                                <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-67">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-67" aria-expanded="false" aria-controls="sidebar-collapse-67">
                    <a href="67">3.5.1      Streams Are Delayed Lists  </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-68">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-68" aria-expanded="false" aria-controls="sidebar-collapse-68">
                    <a href="68">3.5.2      Infinite Streams  </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-69">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-69" aria-expanded="false" aria-controls="sidebar-collapse-69">
                    <a href="69">3.5.3      Exploiting the Stream Paradigm  </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-70">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-70" aria-expanded="false" aria-controls="sidebar-collapse-70">
                    <a href="70">3.5.4      Streams and Delayed Evaluation  </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-71">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-71" aria-expanded="false" aria-controls="sidebar-collapse-71">
                    <a href="71">3.5.5      Modularity of Functional Programs and Modularity of Objects  </a>
                  </span>
                </h5>
              </div>
            </div>

                </div>
              </div>
            </div>

                </div>
              </div>
            </div>

                     <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-72">
                <h5 class="mb-0">
                  <a class="sidebar-show collapsed" data-toggle="collapse" href="#sidebar-collapse-72" aria-expanded="true" aria-controls="sidebar-collapse-72">
                     &#10148;   <!-- ➤ (because this one is rendered blue on mobile: ▶  -->
                  </a>
                  <a class="sidebar-hide collapsed" data-toggle="collapse" href="#sidebar-collapse-72" aria-expanded="true" aria-controls="sidebar-collapse-72">
                    &#x25BC;    <!-- ▼ (because the corresponding one is not rendered) -->
                  </a>
                    <a href="72">4  Metalinguistic Abstraction</a>
                </h5>
              </div>
              <div id="sidebar-collapse-72" class="collapse" role="tabpanel" aria-labelledby="headingOne">
                <div class="card-block">
                                <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-73">
                <h5 class="mb-0">
                  <a class="sidebar-show collapsed" data-toggle="collapse" href="#sidebar-collapse-73" aria-expanded="true" aria-controls="sidebar-collapse-73">
                     &#10148;   <!-- ➤ (because this one is rendered blue on mobile: ▶  -->
                  </a>
                  <a class="sidebar-hide collapsed" data-toggle="collapse" href="#sidebar-collapse-73" aria-expanded="true" aria-controls="sidebar-collapse-73">
                    &#x25BC;    <!-- ▼ (because the corresponding one is not rendered) -->
                  </a>
                    <a href="73">4.1  The Metacircular Evaluator</a>
                </h5>
              </div>
              <div id="sidebar-collapse-73" class="collapse" role="tabpanel" aria-labelledby="headingOne">
                <div class="card-block">
                                <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-74">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-74" aria-expanded="false" aria-controls="sidebar-collapse-74">
                    <a href="74">4.1.1      The Core of the Evaluator  </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-75">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-75" aria-expanded="false" aria-controls="sidebar-collapse-75">
                    <a href="75">4.1.2      Representing                Statements and Expressions      </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-76">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-76" aria-expanded="false" aria-controls="sidebar-collapse-76">
                    <a href="76">4.1.3      Evaluator Data Structures  </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-77">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-77" aria-expanded="false" aria-controls="sidebar-collapse-77">
                    <a href="77">4.1.4      Running the Evaluator as a Program  </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-78">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-78" aria-expanded="false" aria-controls="sidebar-collapse-78">
                    <a href="78">4.1.5    Data as Programs      </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-79">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-79" aria-expanded="false" aria-controls="sidebar-collapse-79">
                    <a href="79">4.1.6      Internal Declarations  </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-80">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-80" aria-expanded="false" aria-controls="sidebar-collapse-80">
                    <a href="80">4.1.7      Separating Syntactic Analysis from Execution  </a>
                  </span>
                </h5>
              </div>
            </div>

                </div>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-81">
                <h5 class="mb-0">
                  <a class="sidebar-show collapsed" data-toggle="collapse" href="#sidebar-collapse-81" aria-expanded="true" aria-controls="sidebar-collapse-81">
                     &#10148;   <!-- ➤ (because this one is rendered blue on mobile: ▶  -->
                  </a>
                  <a class="sidebar-hide collapsed" data-toggle="collapse" href="#sidebar-collapse-81" aria-expanded="true" aria-controls="sidebar-collapse-81">
                    &#x25BC;    <!-- ▼ (because the corresponding one is not rendered) -->
                  </a>
                    <a href="81">4.2    Lazy Evaluation</a>
                </h5>
              </div>
              <div id="sidebar-collapse-81" class="collapse" role="tabpanel" aria-labelledby="headingOne">
                <div class="card-block">
                                <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-82">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-82" aria-expanded="false" aria-controls="sidebar-collapse-82">
                    <a href="82">4.2.1      Normal Order and Applicative Order  </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-83">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-83" aria-expanded="false" aria-controls="sidebar-collapse-83">
                    <a href="83">4.2.2      An Interpreter with Lazy Evaluation  </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-84">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-84" aria-expanded="false" aria-controls="sidebar-collapse-84">
                    <a href="84">4.2.3      Streams as Lazy Lists  </a>
                  </span>
                </h5>
              </div>
            </div>

                </div>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-85">
                <h5 class="mb-0">
                  <a class="sidebar-show collapsed" data-toggle="collapse" href="#sidebar-collapse-85" aria-expanded="true" aria-controls="sidebar-collapse-85">
                     &#10148;   <!-- ➤ (because this one is rendered blue on mobile: ▶  -->
                  </a>
                  <a class="sidebar-hide collapsed" data-toggle="collapse" href="#sidebar-collapse-85" aria-expanded="true" aria-controls="sidebar-collapse-85">
                    &#x25BC;    <!-- ▼ (because the corresponding one is not rendered) -->
                  </a>
                    <a href="85">4.3   Nondeterministic Computing</a>
                </h5>
              </div>
              <div id="sidebar-collapse-85" class="collapse" role="tabpanel" aria-labelledby="headingOne">
                <div class="card-block">
                                <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-86">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-86" aria-expanded="false" aria-controls="sidebar-collapse-86">
                    <a href="86">4.3.1    Amb and Search      </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-87">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-87" aria-expanded="false" aria-controls="sidebar-collapse-87">
                    <a href="87">4.3.2    Examples of Nondeterministic Programs      </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-88">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-88" aria-expanded="false" aria-controls="sidebar-collapse-88">
                    <a href="88">4.3.3    Implementing the amb Evaluator      </a>
                  </span>
                </h5>
              </div>
            </div>

                </div>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-89">
                <h5 class="mb-0">
                  <a class="sidebar-show collapsed" data-toggle="collapse" href="#sidebar-collapse-89" aria-expanded="true" aria-controls="sidebar-collapse-89">
                     &#10148;   <!-- ➤ (because this one is rendered blue on mobile: ▶  -->
                  </a>
                  <a class="sidebar-hide collapsed" data-toggle="collapse" href="#sidebar-collapse-89" aria-expanded="true" aria-controls="sidebar-collapse-89">
                    &#x25BC;    <!-- ▼ (because the corresponding one is not rendered) -->
                  </a>
                    <a href="89">4.4  Logic Programming</a>
                </h5>
              </div>
              <div id="sidebar-collapse-89" class="collapse" role="tabpanel" aria-labelledby="headingOne">
                <div class="card-block">
                                <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-90">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-90" aria-expanded="false" aria-controls="sidebar-collapse-90">
                    <a href="90">4.4.1    Deductive Information Retrieval      </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-91">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-91" aria-expanded="false" aria-controls="sidebar-collapse-91">
                    <a href="91">4.4.2    How the Query System Works      </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-92">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-92" aria-expanded="false" aria-controls="sidebar-collapse-92">
                    <a href="92">4.4.3    Is Logic Programming Mathematical Logic?      </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-93">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-93" aria-expanded="false" aria-controls="sidebar-collapse-93">
                    <a href="93">4.4.4    Implementing the Query System      </a>
                  </span>
                </h5>
              </div>
            </div>

                </div>
              </div>
            </div>

                </div>
              </div>
            </div>

                     <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-94">
                <h5 class="mb-0">
                  <a class="sidebar-show collapsed" data-toggle="collapse" href="#sidebar-collapse-94" aria-expanded="true" aria-controls="sidebar-collapse-94">
                     &#10148;   <!-- ➤ (because this one is rendered blue on mobile: ▶  -->
                  </a>
                  <a class="sidebar-hide collapsed" data-toggle="collapse" href="#sidebar-collapse-94" aria-expanded="true" aria-controls="sidebar-collapse-94">
                    &#x25BC;    <!-- ▼ (because the corresponding one is not rendered) -->
                  </a>
                    <a href="94">5  Computing with Register Machines</a>
                </h5>
              </div>
              <div id="sidebar-collapse-94" class="collapse" role="tabpanel" aria-labelledby="headingOne">
                <div class="card-block">
                                <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-95">
                <h5 class="mb-0">
                  <a class="sidebar-show collapsed" data-toggle="collapse" href="#sidebar-collapse-95" aria-expanded="true" aria-controls="sidebar-collapse-95">
                     &#10148;   <!-- ➤ (because this one is rendered blue on mobile: ▶  -->
                  </a>
                  <a class="sidebar-hide collapsed" data-toggle="collapse" href="#sidebar-collapse-95" aria-expanded="true" aria-controls="sidebar-collapse-95">
                    &#x25BC;    <!-- ▼ (because the corresponding one is not rendered) -->
                  </a>
                    <a href="95">5.1  Designing Register Machines</a>
                </h5>
              </div>
              <div id="sidebar-collapse-95" class="collapse" role="tabpanel" aria-labelledby="headingOne">
                <div class="card-block">
                                <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-96">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-96" aria-expanded="false" aria-controls="sidebar-collapse-96">
                    <a href="96">5.1.1    A Language for Describing Register Machines      </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-97">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-97" aria-expanded="false" aria-controls="sidebar-collapse-97">
                    <a href="97">5.1.2    Abstraction in Machine Design      </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-98">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-98" aria-expanded="false" aria-controls="sidebar-collapse-98">
                    <a href="98">5.1.3    Subroutines      </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-99">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-99" aria-expanded="false" aria-controls="sidebar-collapse-99">
                    <a href="99">5.1.4    Using a Stack to Implement Recursion      </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-100">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-100" aria-expanded="false" aria-controls="sidebar-collapse-100">
                    <a href="100">5.1.5    Instruction Summary      </a>
                  </span>
                </h5>
              </div>
            </div>

                </div>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-101">
                <h5 class="mb-0">
                  <a class="sidebar-show collapsed" data-toggle="collapse" href="#sidebar-collapse-101" aria-expanded="true" aria-controls="sidebar-collapse-101">
                     &#10148;   <!-- ➤ (because this one is rendered blue on mobile: ▶  -->
                  </a>
                  <a class="sidebar-hide collapsed" data-toggle="collapse" href="#sidebar-collapse-101" aria-expanded="true" aria-controls="sidebar-collapse-101">
                    &#x25BC;    <!-- ▼ (because the corresponding one is not rendered) -->
                  </a>
                    <a href="101">5.2  A Register-Machine Simulator</a>
                </h5>
              </div>
              <div id="sidebar-collapse-101" class="collapse" role="tabpanel" aria-labelledby="headingOne">
                <div class="card-block">
                                <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-102">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-102" aria-expanded="false" aria-controls="sidebar-collapse-102">
                    <a href="102">5.2.1    The Machine Model      </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-103">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-103" aria-expanded="false" aria-controls="sidebar-collapse-103">
                    <a href="103">5.2.2    The Assembler      </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-104">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-104" aria-expanded="false" aria-controls="sidebar-collapse-104">
                    <a href="104">5.2.3    Generating Execution  Functions  for Instructions      </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-105">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-105" aria-expanded="false" aria-controls="sidebar-collapse-105">
                    <a href="105">5.2.4    Monitoring Machine Performance      </a>
                  </span>
                </h5>
              </div>
            </div>

                </div>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-106">
                <h5 class="mb-0">
                  <a class="sidebar-show collapsed" data-toggle="collapse" href="#sidebar-collapse-106" aria-expanded="true" aria-controls="sidebar-collapse-106">
                     &#10148;   <!-- ➤ (because this one is rendered blue on mobile: ▶  -->
                  </a>
                  <a class="sidebar-hide collapsed" data-toggle="collapse" href="#sidebar-collapse-106" aria-expanded="true" aria-controls="sidebar-collapse-106">
                    &#x25BC;    <!-- ▼ (because the corresponding one is not rendered) -->
                  </a>
                    <a href="106">5.3  Storage Allocation and Garbage Collection</a>
                </h5>
              </div>
              <div id="sidebar-collapse-106" class="collapse" role="tabpanel" aria-labelledby="headingOne">
                <div class="card-block">
                                <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-107">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-107" aria-expanded="false" aria-controls="sidebar-collapse-107">
                    <a href="107">5.3.1    Memory as Vectors      </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-108">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-108" aria-expanded="false" aria-controls="sidebar-collapse-108">
                    <a href="108">5.3.2    Maintaining the Illusion of Infinite Memory      </a>
                  </span>
                </h5>
              </div>
            </div>

                </div>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-109">
                <h5 class="mb-0">
                  <a class="sidebar-show collapsed" data-toggle="collapse" href="#sidebar-collapse-109" aria-expanded="true" aria-controls="sidebar-collapse-109">
                     &#10148;   <!-- ➤ (because this one is rendered blue on mobile: ▶  -->
                  </a>
                  <a class="sidebar-hide collapsed" data-toggle="collapse" href="#sidebar-collapse-109" aria-expanded="true" aria-controls="sidebar-collapse-109">
                    &#x25BC;    <!-- ▼ (because the corresponding one is not rendered) -->
                  </a>
                    <a href="109">5.4  The Explicit-Control Evaluator</a>
                </h5>
              </div>
              <div id="sidebar-collapse-109" class="collapse" role="tabpanel" aria-labelledby="headingOne">
                <div class="card-block">
                                <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-110">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-110" aria-expanded="false" aria-controls="sidebar-collapse-110">
                    <a href="110">5.4.1    The Core of the Explicit-Control Evaluator      </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-111">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-111" aria-expanded="false" aria-controls="sidebar-collapse-111">
                    <a href="111">5.4.2    Sequence Evaluation and Tail Recursion      </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-112">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-112" aria-expanded="false" aria-controls="sidebar-collapse-112">
                    <a href="112">5.4.3    Conditionals, Assignments, and Definitions      </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-113">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-113" aria-expanded="false" aria-controls="sidebar-collapse-113">
                    <a href="113">5.4.4    Running the Evaluator      </a>
                  </span>
                </h5>
              </div>
            </div>

                </div>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-114">
                <h5 class="mb-0">
                  <a class="sidebar-show collapsed" data-toggle="collapse" href="#sidebar-collapse-114" aria-expanded="true" aria-controls="sidebar-collapse-114">
                     &#10148;   <!-- ➤ (because this one is rendered blue on mobile: ▶  -->
                  </a>
                  <a class="sidebar-hide collapsed" data-toggle="collapse" href="#sidebar-collapse-114" aria-expanded="true" aria-controls="sidebar-collapse-114">
                    &#x25BC;    <!-- ▼ (because the corresponding one is not rendered) -->
                  </a>
                    <a href="114">5.5  Compilation</a>
                </h5>
              </div>
              <div id="sidebar-collapse-114" class="collapse" role="tabpanel" aria-labelledby="headingOne">
                <div class="card-block">
                                <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-115">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-115" aria-expanded="false" aria-controls="sidebar-collapse-115">
                    <a href="115">5.5.1    Structure of the Compiler      </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-116">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-116" aria-expanded="false" aria-controls="sidebar-collapse-116">
                    <a href="116">5.5.2    Compiling Expressions      </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-117">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-117" aria-expanded="false" aria-controls="sidebar-collapse-117">
                    <a href="117">5.5.3    Compiling Combinations      </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-118">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-118" aria-expanded="false" aria-controls="sidebar-collapse-118">
                    <a href="118">5.5.4    Combining Instruction Sequences      </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-119">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-119" aria-expanded="false" aria-controls="sidebar-collapse-119">
                    <a href="119">5.5.5    An Example of Compiled Code      </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-120">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-120" aria-expanded="false" aria-controls="sidebar-collapse-120">
                    <a href="120">5.5.6    Lexical Addressing      </a>
                  </span>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-121">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-121" aria-expanded="false" aria-controls="sidebar-collapse-121">
                    <a href="121">5.5.7    Interfacing Compiled Code to the Evaluator      </a>
                  </span>
                </h5>
              </div>
            </div>

                </div>
              </div>
            </div>

                </div>
              </div>
            </div>

                     <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-125">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-125" aria-expanded="false" aria-controls="sidebar-collapse-125">
                    <a href="125">References</a>
                  </span>
                </h5>
              </div>
            </div>

                     <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-126">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-126" aria-expanded="false" aria-controls="sidebar-collapse-126">
                    <a href="126">Index</a>
                  </span>
                </h5>
              </div>
            </div>

                     <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-127">
                <h5 class="mb-0">
                  <span class="collapsed" data-toggle="collapse" href="#sidebar-collapse-127" aria-expanded="false" aria-controls="sidebar-collapse-127">
                    <a href="127">JavaScript Adaptation Making-of</a>
                  </span>
                </h5>
              </div>
            </div>

       </div>

           <div id="permalink-msg">
  <div class="screen">
    <div class="alert alert-success">
      <strong>Permalink copied!</strong> 
    </div>
  </div>
</div>
<div class="chapter-content">

  <div class="chapter-title">
    <div class="permalink">
      <a name="top" class="permalink">2.2.2 
        Hierarchical Structures
      </a>
    </div>
  </div>
    <div class="chapter-text" >
        <div class="SUBSECTION"><SUBSECTION>
      

      
      
      
      
      
      <div class="permalink">
<a name="p1" class="permalink"></a><p>
        The representation of sequences in terms of lists generalizes
        naturally to represent sequences whose elements may
        themselves be sequences.  For example, we can regard the object
        <kbd>[[1, [2, null]], [3, [4, null]]]</kbd> constructed by

        <div class="snippet" id="javascript_31_0_div"><div class="pre-prettyprint"><pre class="prettyprint" title="Evaluate Javascript expression" onclick="var compressed = LZString.compressToEncodedURIComponent(''+'\n'+'pair(list(1, 2), list(3, 4));'+'\n'+''+'\n'); var url = 'https://sourceacademy.nus.edu.sg/playground#chap=2&amp;prgrm='+compressed; window.open(url); ">pair(list(1, 2), list(3, 4));</pre></div></div>
        as a list of three items, the first of which is itself a list, <kbd>[1, [2, null]]</kbd>. Figure <REF NAME="fig:cons-of-2-lists"><a class="superscript" id="2.2.2-fig-link-2.5" href="31#fig_2.5">2.5</a></REF> shows
        the representation of this structure in terms of pairs.

      <SPLIT>
	
	
              <img src="img_javascript/ch2-Z-G-15.svg">
	
      </SPLIT>
	      
      </p>
</div>

      <div class="permalink">
<a name="p2" class="permalink"></a><p>
        Another way to think of sequences whose elements are sequences is as
        <EM>trees</EM>.  The elements of the sequence are the branches of the
        tree, and elements that are themselves sequences are subtrees.
        Figure <REF NAME="fig:list-as-tree-javascript"><a class="superscript" id="2.2.2-fig-link-2.6" href="31#fig_2.6">2.6</a></REF> shows the structure in
        Figure <REF NAME="fig:cons-of-2-lists"><a class="superscript" id="2.2.2-fig-link-2.5" href="31#fig_2.5">2.5</a></REF> viewed as a tree.

        <SPLIT>
          
          
            <img src="img_javascript/ch2-Z-G-16.svg">
          
        </SPLIT>
      </p>
</div>

      <div class="permalink">
<a name="p3" class="permalink"></a><p>
        
        Recursion is a natural tool for dealing with tree structures, since
        we can often reduce operations on trees to operations on their
        branches, which reduce in turn to operations on the branches of the
        branches, and so on, until we reach the leaves of the tree.
        As an example, compare the <kbd>length</kbd>
        function
        of
        section <REF NAME="sec:sequences"><a class="superscript" id="2.2.2-sec-link-2.2.1" href="30">2.2.1</a></REF> with the
        
        
        <kbd>count_leaves</kbd>
        function, which
        returns the total number of leaves of a tree:

        <div class="snippet" id="javascript_31_1_div"><div class="pre-prettyprint"><pre class="prettyprint" title="Evaluate Javascript expression" onclick="var compressed = LZString.compressToEncodedURIComponent(''+'\n'+'const x = pair(pair(1, pair(2,null)), pair(3, pair(4,null)));'+'\n'+''+'\n'); var url = 'https://sourceacademy.nus.edu.sg/playground#chap=2&amp;prgrm='+compressed; window.open(url); ">const x = pair(pair(1, pair(2,null)), pair(3, pair(4,null)));</pre></div></div>

        <div class="snippet" id="javascript_31_2_div"><div class="pre-prettyprint"><pre class="prettyprint" title="Evaluate Javascript expression" onclick="var compressed = LZString.compressToEncodedURIComponent('\nconst x = pair(pair(1, pair(2,null)), pair(3, pair(4,null)));\n          '+'\n'+'length(x);\n// 3'+'\n'+''+'\n'); var url = 'https://sourceacademy.nus.edu.sg/playground#chap=2&amp;prgrm='+compressed; window.open(url); ">length(x);
// 3</pre></div></div>

        <div class="snippet" id="javascript_31_3_div"><div class="pre-prettyprint"><pre class="prettyprint" title="Evaluate Javascript expression" onclick="var compressed = LZString.compressToEncodedURIComponent('\nconst x = pair(pair(1, pair(2,null)), pair(3, pair(4,null)));\n          \nfunction count_leaves(x) {\n    return is_null(x)\n           ? 0\n           : ! is_pair(x)\n             ? 1\n             : count_leaves(head(x)) +\n               count_leaves(tail(x));\n}\n          '+'\n'+'count_leaves(x);\n// 4'+'\n'+''+'\n'); var url = 'https://sourceacademy.nus.edu.sg/playground#chap=2&amp;prgrm='+compressed; window.open(url); ">count_leaves(x);
// 4</pre></div></div>

        <div class="snippet" id="javascript_31_4_div"><div class="pre-prettyprint"><pre class="prettyprint" title="Evaluate Javascript expression" onclick="var compressed = LZString.compressToEncodedURIComponent('\nconst x = pair(pair(1, pair(2,null)), pair(3, pair(4,null)));\n          '+'\n'+'list(x, x);\n// [[[[1, [2, null]], [3, [4, null]]],\n//  [[[1, [2, null]], [3, [4, null]]], null]]'+'\n'+''+'\n'); var url = 'https://sourceacademy.nus.edu.sg/playground#chap=2&amp;prgrm='+compressed; window.open(url); ">list(x, x);
// [[[[1, [2, null]], [3, [4, null]]],
//  [[[1, [2, null]], [3, [4, null]]], null]]</pre></div></div>

        <div class="snippet" id="javascript_31_5_div"><div class="pre-prettyprint"><pre class="prettyprint" title="Evaluate Javascript expression" onclick="var compressed = LZString.compressToEncodedURIComponent('\nconst x = pair(pair(1, pair(2,null)), pair(3, pair(4,null)));\n          '+'\n'+'length(list(x, x));\n// 2'+'\n'+''+'\n'); var url = 'https://sourceacademy.nus.edu.sg/playground#chap=2&amp;prgrm='+compressed; window.open(url); ">length(list(x, x));
// 2</pre></div></div>

        <div class="snippet" id="javascript_31_6_div"><div class="pre-prettyprint"><pre class="prettyprint" title="Evaluate Javascript expression" onclick="var compressed = LZString.compressToEncodedURIComponent('\nconst x = pair(pair(1, pair(2,null)), pair(3, pair(4,null)));\n          \nfunction count_leaves(x) {\n    return is_null(x)\n           ? 0\n           : ! is_pair(x)\n             ? 1\n             : count_leaves(head(x)) +\n               count_leaves(tail(x));\n}\n          '+'\n'+'count_leaves(list(x, x));\n// 8'+'\n'+''+'\n'); var url = 'https://sourceacademy.nus.edu.sg/playground#chap=2&amp;prgrm='+compressed; window.open(url); ">count_leaves(list(x, x));
// 8</pre></div></div>
      </p>
</div>

      <div class="permalink">
<a name="p4" class="permalink"></a><p>
        To implement <kbd>count_leaves</kbd>, recall the recursive plan for computing
        <kbd>length</kbd>:

        <UL>
          <LI> The <kbd>length</kbd> of a list <kbd>x</kbd> is 1 plus the <kbd>length</kbd> of the
            <kbd>tail</kbd> of <kbd>x</kbd>.
          </LI>
          <LI>
            The <kbd>length</kbd> of the empty list is 0.
          </LI>
        </UL>
        The function <kbd>count_leaves</kbd> is similar.  The value for the empty list is the same:
        <UL>
          <LI>
            <kbd>count_leaves</kbd> of the empty list is 0.
          </LI>
        </UL>
        But in the reduction step, where we strip off the <kbd>head</kbd> of the
        list, we must take into account that the <kbd>head</kbd> may itself be a
        tree whose leaves we need to count.  Thus, the appropriate reduction
        step is
        <UL>
          <LI>
            <kbd>count_leaves</kbd> of a tree <kbd>x</kbd> is <kbd>count_leaves</kbd> of the <kbd>head</kbd> of <kbd>x</kbd> plus <kbd>count_leaves</kbd> of the
            <kbd>tail</kbd> of <kbd>x</kbd>.
          </LI>
        </UL>
        Finally, by taking <kbd>head</kbd>s we reach
        actual leaves, so we need another base case:
        <UL>
          <LI>
            <kbd>count_leaves</kbd> of a leaf is 1.
          </LI>
        </UL>
        To aid in writing recursive
        functions
        on trees, our JavaScript environment provides the primitive
        predicate
        
        
        <kbd>is_pair</kbd>, which tests whether its argument is a pair.
        Here is the complete
        function:

        <div class="snippet" id="javascript_31_7_div"><div class="pre-prettyprint"><pre class="prettyprint" title="Evaluate Javascript expression" onclick="var compressed = LZString.compressToEncodedURIComponent(''+'\n'+'function count_leaves(x) {\n    return is_null(x)\n           ? 0\n           : ! is_pair(x)\n             ? 1\n             : count_leaves(head(x)) +\n               count_leaves(tail(x));\n}'+'\n'+'\ncount_leaves(pair(list(1, 2), list(3, 4)));\n          '+'\n'); var url = 'https://sourceacademy.nus.edu.sg/playground#chap=2&amp;prgrm='+compressed; window.open(url); ">function count_leaves(x) {
    return is_null(x)
           ? 0
           : ! is_pair(x)
             ? 1
             : count_leaves(head(x)) +
               count_leaves(tail(x));
}</pre></div></div>

        

      </p>
</div>

      <div class="permalink">
<a name="ex_2.24" class="permalink"></a><EXERCISE><b><a class="exercise-number permalink" id="ex_2.24">Exercise 2.24 </a></b>
        Suppose we evaluate the expression
        <kbd>list(1, list(2, list(3, 4)))</kbd>.
        Give the result printed by the interpreter, the corresponding
        box-and-pointer structure, and the interpretation of this as a tree
        (as in Figure <REF NAME="fig:list-as-tree-javascript"><a class="superscript" id="2.2.2-fig-link-2.6" href="31#fig_2.6">2.6</a></REF>).
        
        <div class="Solution">
<div class="solution_btn"><button class="btn btn-secondary solution_btn" href="#solution_31_1_div" data-toggle="collapse">Solution</button></div>
<div class="solution_content collapse" id="solution_31_1_div"><solution>
          <ol>
            <li>
              <snippet eval="no">
                <name>count_leaves_example_result</name>
                
                
                  [1, [[2, [[3, [4, null]], null]], null]]
	              
	            </snippet>
            </li>
            <li>
              <img src="img_javascript/ch2-Z-G-ex-2-24.png">	 
            </li>
            <li>
              <img src="img_javascript/ch2-Z-G-ex-2-24-tree.png">	 
            </li>
          </ol>
        </solution></div>
</div>
      </EXERCISE>
</div>

      <div class="permalink">
<a name="ex_2.25" class="permalink"></a><EXERCISE><b><a class="exercise-number permalink" id="ex_2.25">Exercise 2.25 </a></b>
        Give combinations of <kbd>head</kbd>s and <kbd>tail</kbd>s that will pick 7 from
        each of the following lists<SPLIT>, given as printed by our interpreter:</SPLIT>

        <div class="snippet" id="javascript_31_8_div"><div class="pre-prettyprint"><pre class="prettyprint no-eval">[1, [3, [[5, [7, null]], [9, null]]]]

[[7, null], null]

[1,
 [
  [2,
   [
    [3, 
     [
      [4, 
       [
        [5, 
         [
          [6, 
           [7, 
            null
           ]
          ], 
          null
         ]
        ], 
        null
       ]
      ], 
      null
     ]
    ], 
    null
   ]
  ], 
  null
 ]
]</pre></div></div>
  <div class="Solution">
<div class="solution_btn"><button class="btn btn-secondary solution_btn" href="#solution_31_2_div" data-toggle="collapse">Solution</button></div>
<div class="solution_content collapse" id="solution_31_2_div"><SOLUTION>
    <UL>
      <LI>
        <div class="snippet" id="javascript_31_9_div"><div class="pre-prettyprint"><pre class="prettyprint no-eval">head(tail(head(tail(tail(the_first_list)))));</pre></div></div>
      </LI>
      <LI>
        <div class="snippet" id="javascript_31_10_div"><div class="pre-prettyprint"><pre class="prettyprint no-eval">head(head(the_second_list));</pre></div></div>
      </LI>
      <LI>
        <div class="snippet" id="javascript_31_11_div"><div class="pre-prettyprint"><pre class="prettyprint no-eval">head(tail(head(tail(head(tail(head(tail(head(
    tail(head(tail(the_third_list))))))))))));</pre></div></div>
      </LI>
    </UL>
  </SOLUTION></div>
</div>
      </EXERCISE>
</div>

      <div class="permalink">
<a name="ex_2.26" class="permalink"></a><EXERCISE><b><a class="exercise-number permalink" id="ex_2.26">Exercise 2.26 </a></b>
        Suppose we define <kbd>x</kbd> and <kbd>y</kbd> to be two lists:

        <div class="snippet" id="javascript_31_12_div"><div class="pre-prettyprint"><pre class="prettyprint" title="Evaluate Javascript expression" onclick="var compressed = LZString.compressToEncodedURIComponent(''+'\n'+'const x = list(1, 2, 3);\n\nconst y = list(4, 5, 6);'+'\n'+''+'\n'); var url = 'https://sourceacademy.nus.edu.sg/playground#chap=2&amp;prgrm='+compressed; window.open(url); ">const x = list(1, 2, 3);

const y = list(4, 5, 6);</pre></div></div>

        What result is printed by the interpreter in response to evaluating
        each of the following expressions:

        <div class="snippet" id="javascript_31_13_div"><div class="pre-prettyprint"><pre class="prettyprint" title="Evaluate Javascript expression" onclick="var compressed = LZString.compressToEncodedURIComponent('\nconst x = list(1, 2, 3);\n\nconst y = list(4, 5, 6);\n        '+'\n'+'append(x, y);'+'\n'+''+'\n'); var url = 'https://sourceacademy.nus.edu.sg/playground#chap=2&amp;prgrm='+compressed; window.open(url); ">append(x, y);</pre></div></div>


        <div class="snippet" id="javascript_31_14_div"><div class="pre-prettyprint"><pre class="prettyprint" title="Evaluate Javascript expression" onclick="var compressed = LZString.compressToEncodedURIComponent('\nconst x = list(1, 2, 3);\n\nconst y = list(4, 5, 6);\n        '+'\n'+'pair(x, y);'+'\n'+''+'\n'); var url = 'https://sourceacademy.nus.edu.sg/playground#chap=2&amp;prgrm='+compressed; window.open(url); ">pair(x, y);</pre></div></div>

        <div class="snippet" id="javascript_31_15_div"><div class="pre-prettyprint"><pre class="prettyprint" title="Evaluate Javascript expression" onclick="var compressed = LZString.compressToEncodedURIComponent('\nconst x = list(1, 2, 3);\n\nconst y = list(4, 5, 6);\n        '+'\n'+'list(x, y);'+'\n'+''+'\n'); var url = 'https://sourceacademy.nus.edu.sg/playground#chap=2&amp;prgrm='+compressed; window.open(url); ">list(x, y);</pre></div></div>

	<div class="Solution">
<div class="solution_btn"><button class="btn btn-secondary solution_btn" href="#solution_31_3_div" data-toggle="collapse">Solution</button></div>
<div class="solution_content collapse" id="solution_31_3_div"><SOLUTION>
	  <OL>
	    <LI>
        <div class="snippet" id="javascript_31_16_div"><div class="pre-prettyprint"><pre class="prettyprint" title="Evaluate Javascript expression" onclick="var compressed = LZString.compressToEncodedURIComponent('\nconst x = list(1, 2, 3);\n\nconst y = list(4, 5, 6);\n        \nappend(x, y);\n        '+'\n'+'// result: [1, [2, [3, [4, [5, [6, null]]]]]]'+'\n'+''+'\n'); var url = 'https://sourceacademy.nus.edu.sg/playground#chap=2&amp;prgrm='+compressed; window.open(url); ">[1, [2, [3, [4, [5, [6, null]]]]]]</pre></div></div>
	    </LI>
	    <LI>
        <div class="snippet" id="javascript_31_17_div"><div class="pre-prettyprint"><pre class="prettyprint" title="Evaluate Javascript expression" onclick="var compressed = LZString.compressToEncodedURIComponent('\nconst x = list(1, 2, 3);\n\nconst y = list(4, 5, 6);\n        \npair(x, y);\n        '+'\n'+'// result: [[1, [2, [3, null]]], [4, [5, [6, null]]]]'+'\n'+''+'\n'); var url = 'https://sourceacademy.nus.edu.sg/playground#chap=2&amp;prgrm='+compressed; window.open(url); ">[[1, [2, [3, null]]], [4, [5, [6, null]]]]</pre></div></div>
	    </LI>
	    <LI>
        <div class="snippet" id="javascript_31_18_div"><div class="pre-prettyprint"><pre class="prettyprint" title="Evaluate Javascript expression" onclick="var compressed = LZString.compressToEncodedURIComponent('\nconst x = list(1, 2, 3);\n\nconst y = list(4, 5, 6);\n        \nlist(x, y);\n        '+'\n'+'// result: [[1, [2, [3, null]]], [[4, [5, [6, null]]], null]]'+'\n'+''+'\n'); var url = 'https://sourceacademy.nus.edu.sg/playground#chap=2&amp;prgrm='+compressed; window.open(url); ">[[1, [2, [3, null]]], [[4, [5, [6, null]]], null]]</pre></div></div>
	    </LI>
	  
	  </OL>
	</SOLUTION></div>
</div>
	
      </EXERCISE>
</div>

      <div class="permalink">
<a name="ex_2.27" class="permalink"></a><EXERCISE><b><a class="exercise-number permalink" id="ex_2.27">Exercise 2.27 </a></b>
        Modify your <kbd>reverse</kbd>
        function
        of exercise <REF NAME="ex:reverse"><a class="superscript" id="2.2.2-ex-link-2.18" href="30#ex_2.18">2.18</a></REF> to
        produce a
        
        
        <kbd>deep_reverse</kbd>
        function
        that takes a list as argument
        and returns as its value the list with its elements reversed and with
        all sublists deep-reversed as well.  For example,
        <div class="snippet" id="javascript_31_19_div"><div class="pre-prettyprint"><pre class="prettyprint" title="Evaluate Javascript expression" onclick="var compressed = LZString.compressToEncodedURIComponent(''+'\n'+'const x = list(list(1, 2), list(3, 4));'+'\n'+''+'\n'); var url = 'https://sourceacademy.nus.edu.sg/playground#chap=2&amp;prgrm='+compressed; window.open(url); ">const x = list(list(1, 2), list(3, 4));</pre></div></div>

        <div class="snippet" id="javascript_31_20_div"><div class="pre-prettyprint"><pre class="prettyprint" title="Evaluate Javascript expression" onclick="var compressed = LZString.compressToEncodedURIComponent('\nconst x = list(list(1, 2), list(3, 4));\n        '+'\n'+'x;\n// [[1, [2, null]], [[3, [4, null]], null]]'+'\n'+''+'\n'); var url = 'https://sourceacademy.nus.edu.sg/playground#chap=2&amp;prgrm='+compressed; window.open(url); ">x;
// [[1, [2, null]], [[3, [4, null]], null]]</pre></div></div>

        <div class="snippet" id="javascript_31_21_div"><div class="pre-prettyprint"><pre class="prettyprint" title="Evaluate Javascript expression" onclick="var compressed = LZString.compressToEncodedURIComponent('\nconst x = list(list(1, 2), list(3, 4));\n        '+'\n'+'reverse(x);\n// [[3, [4, null]], [[1, [2, null]], null]]'+'\n'+''+'\n'); var url = 'https://sourceacademy.nus.edu.sg/playground#chap=2&amp;prgrm='+compressed; window.open(url); ">reverse(x);
// [[3, [4, null]], [[1, [2, null]], null]]</pre></div></div>

        
        <div class="snippet" id="javascript_31_22_div"><div class="pre-prettyprint"><pre class="prettyprint" title="Evaluate Javascript expression" onclick="var compressed = LZString.compressToEncodedURIComponent('\nconst x = list(list(1, 2), list(3, 4));\n        \n// deep_reverse to be written by student\n          '+'\n'+'deep_reverse(x);\n// [[4, [3, null]], [[2, [1, null]], null]]'+'\n'+''+'\n'); var url = 'https://sourceacademy.nus.edu.sg/playground#chap=2&amp;prgrm='+compressed; window.open(url); ">deep_reverse(x);
// [[4, [3, null]], [[2, [1, null]], null]]</pre></div></div>

<div class="Solution">
<div class="solution_btn"><button class="btn btn-secondary solution_btn" href="#solution_31_4_div" data-toggle="collapse">Solution</button></div>
<div class="solution_content collapse" id="solution_31_4_div"><SOLUTION>
  <div class="snippet" id="javascript_31_23_div"><div class="pre-prettyprint"><pre class="prettyprint" title="Evaluate Javascript expression" onclick="var compressed = LZString.compressToEncodedURIComponent('\nconst x = list(list(1, 2), list(3, 4));\n        \n// deep_reverse to be written by student\n          '+'\n'+'function deep_reverse(items){\n    return is_null(items)\n           ? null\n           : is_pair(items)\n             ? append(deep_reverse(tail(items)), \n                      pair(deep_reverse(head(items)), \n                           null))\n	     : items;\n}'+'\n'+'\ndeep_reverse(x);\n// [[4, [3, null]], [[2, [1, null]], null]]\n          '+'\n'); var url = 'https://sourceacademy.nus.edu.sg/playground#chap=2&amp;prgrm='+compressed; window.open(url); ">function deep_reverse(items){
    return is_null(items)
           ? null
           : is_pair(items)
             ? append(deep_reverse(tail(items)), 
                      pair(deep_reverse(head(items)), 
                           null))
	     : items;
}</pre></div></div>
</SOLUTION></div>
</div>
      </EXERCISE>
</div>

      <div class="permalink">
<a name="ex_2.28" class="permalink"></a><EXERCISE><b><a class="exercise-number permalink" id="ex_2.28">Exercise 2.28 </a></b>
        
        Write a
        function

        
        
        <kbd>fringe</kbd> that takes as argument a tree
        (represented as a list) and returns a list whose elements are all the
        leaves of the tree arranged in left-to-right order.  For example,

        

        <div class="snippet" id="javascript_31_24_div"><div class="pre-prettyprint"><pre class="prettyprint" title="Evaluate Javascript expression" onclick="var compressed = LZString.compressToEncodedURIComponent(''+'\n'+'const x = list(list(1, 2), list(3, 4));'+'\n'+''+'\n'); var url = 'https://sourceacademy.nus.edu.sg/playground#chap=2&amp;prgrm='+compressed; window.open(url); ">const x = list(list(1, 2), list(3, 4));</pre></div></div>

        <div class="snippet" id="javascript_31_25_div"><div class="pre-prettyprint"><pre class="prettyprint" title="Evaluate Javascript expression" onclick="var compressed = LZString.compressToEncodedURIComponent('\nconst x = list(list(1, 2), list(3, 4));\n          \n// fringe to be written by student\n          '+'\n'+'fringe(x);\n// [1, [2, [3, [4, null]]]]'+'\n'+''+'\n'); var url = 'https://sourceacademy.nus.edu.sg/playground#chap=2&amp;prgrm='+compressed; window.open(url); ">fringe(x);
// [1, [2, [3, [4, null]]]]</pre></div></div>

        <div class="snippet" id="javascript_31_26_div"><div class="pre-prettyprint"><pre class="prettyprint" title="Evaluate Javascript expression" onclick="var compressed = LZString.compressToEncodedURIComponent('\nconst x = list(list(1, 2), list(3, 4));\n          \n// fringe to be written by student\n          '+'\n'+'fringe(list(x, x));\n// [1, [2, [3, [4, [1, [2, [3, [4, null]]]]]]]]'+'\n'+''+'\n'); var url = 'https://sourceacademy.nus.edu.sg/playground#chap=2&amp;prgrm='+compressed; window.open(url); ">fringe(list(x, x));
// [1, [2, [3, [4, [1, [2, [3, [4, null]]]]]]]]</pre></div></div>

<div class="Solution">
<div class="solution_btn"><button class="btn btn-secondary solution_btn" href="#solution_31_5_div" data-toggle="collapse">Solution</button></div>
<div class="solution_content collapse" id="solution_31_5_div"><SOLUTION>
  <div class="snippet" id="javascript_31_27_div"><div class="pre-prettyprint"><pre class="prettyprint" title="Evaluate Javascript expression" onclick="var compressed = LZString.compressToEncodedURIComponent('\nconst x = list(list(1, 2), list(3, 4));\n          \n// fringe to be written by student\n          '+'\n'+'function fringe(x) {\n    return is_null(x)\n           ? null\n           : is_pair(x)\n             ? append(fringe(head(x)), fringe(tail(x)))\n             : list(x);\n}'+'\n'+'\nfringe(list(x, x));\n// [1, [2, [3, [4, [1, [2, [3, [4, null]]]]]]]]\n          '+'\n'); var url = 'https://sourceacademy.nus.edu.sg/playground#chap=2&amp;prgrm='+compressed; window.open(url); ">function fringe(x) {
    return is_null(x)
           ? null
           : is_pair(x)
             ? append(fringe(head(x)), fringe(tail(x)))
             : list(x);
}</pre></div></div>
</SOLUTION></div>
</div>
      </EXERCISE>
</div>

      <div class="permalink">
<a name="ex_2.29" class="permalink"></a><EXERCISE><b><a class="exercise-number permalink" id="ex_2.29">Exercise 2.29 </a></b>
        
        A binary mobile consists of two branches, a left branch and a right
        branch.  Each branch is a rod of a certain length, from which hangs
        either a weight or another binary mobile.  We can represent a binary
        mobile using compound data by constructing it from two branches (for
        example, using <kbd>list</kbd>):

        <div class="snippet" id="javascript_31_28_div"><div class="pre-prettyprint"><pre class="prettyprint" title="Evaluate Javascript expression" onclick="var compressed = LZString.compressToEncodedURIComponent(''+'\n'+'function make_mobile(left, right) {\n   return list(left, right);\n}'+'\n'+''+'\n'); var url = 'https://sourceacademy.nus.edu.sg/playground#chap=2&amp;prgrm='+compressed; window.open(url); ">function make_mobile(left, right) {
   return list(left, right);
}</pre></div></div>

        A branch is constructed from a <kbd>length</kbd> (which must be a number)
        together with a <kbd>structure</kbd>, which may be either a number
        (representing a simple weight) or another mobile:

        <div class="snippet" id="javascript_31_29_div"><div class="pre-prettyprint"><pre class="prettyprint" title="Evaluate Javascript expression" onclick="var compressed = LZString.compressToEncodedURIComponent(''+'\n'+'function make_branch(length, structure) {\n   return list(length, structure);\n}'+'\n'+''+'\n'); var url = 'https://sourceacademy.nus.edu.sg/playground#chap=2&amp;prgrm='+compressed; window.open(url); ">function make_branch(length, structure) {
   return list(length, structure);
}</pre></div></div>

        <OL>
          <LI>
            Write the corresponding selectors <kbd>left_branch</kbd> and
            <kbd>right_branch</kbd>, which return the branches of a mobile, and
                <kbd>branch_length</kbd> and <kbd>branch_structure</kbd>, which return
            the components of a branch.
          </LI>

          <LI>
            Using your selectors, define a
            function
            <kbd>total_weight</kbd>
            that returns the total weight of a mobile.
          </LI>

          <LI>
            A mobile is said to be
            
            <EM>balanced</EM> if the torque applied
            by its top-left branch is equal to that applied by its top-right
            branch (that is, if the length of the left rod multiplied by the
            weight hanging from that rod is equal to the corresponding product for
            the right side) and if each of the submobiles hanging off its branches
            is balanced. Design a predicate that tests whether a binary mobile is
            balanced.
          </LI>

          <LI>
            Suppose we change the representation of mobiles so that the
            constructors are

            <div class="snippet" id="javascript_31_30_div"><div class="pre-prettyprint"><pre class="prettyprint" title="Evaluate Javascript expression" onclick="var compressed = LZString.compressToEncodedURIComponent(''+'\n'+'function make_mobile(left, right) {\n   return pair(left, right);\n}\nfunction make_branch(length, structure) {\n   return pair(length, structure);\n}'+'\n'+''+'\n'); var url = 'https://sourceacademy.nus.edu.sg/playground#chap=2&amp;prgrm='+compressed; window.open(url); ">function make_mobile(left, right) {
   return pair(left, right);
}
function make_branch(length, structure) {
   return pair(length, structure);
}</pre></div></div>

            How much do you need to change your programs to convert to the new
            representation?
          </LI>
        </OL>
        
  <div class="Solution">
<div class="solution_btn"><button class="btn btn-secondary solution_btn" href="#solution_31_6_div" data-toggle="collapse">Solution</button></div>
<div class="solution_content collapse" id="solution_31_6_div"><SOLUTION>
    <OL>
      <LI>
    <div class="snippet" id="javascript_31_31_div"><div class="pre-prettyprint"><pre class="prettyprint" title="Evaluate Javascript expression" onclick="var compressed = LZString.compressToEncodedURIComponent('\nfunction make_mobile(left, right) {\n   return list(left, right);\n}\n        \nfunction make_branch(length, structure) {\n   return list(length, structure);\n}\n          '+'\n'+'function left_branch(m) {\n    return head(m);\n}\nfunction right_branch(m) {\n    return head(tail(m));\n}\nfunction branch_length(b) {\n    return head(b);\n}\nfunction branch_structure(b) {\n    return head(tail(b));\n}'+'\n'+''+'\n'); var url = 'https://sourceacademy.nus.edu.sg/playground#chap=2&amp;prgrm='+compressed; window.open(url); ">function left_branch(m) {
    return head(m);
}
function right_branch(m) {
    return head(tail(m));
}
function branch_length(b) {
    return head(b);
}
function branch_structure(b) {
    return head(tail(b));
}</pre></div></div>
      </LI>
      <LI>
<div class="snippet" id="javascript_31_32_div"><div class="pre-prettyprint"><pre class="prettyprint" title="Evaluate Javascript expression" onclick="var compressed = LZString.compressToEncodedURIComponent('\nfunction make_mobile(left, right) {\n   return list(left, right);\n}\n        \nfunction make_branch(length, structure) {\n   return list(length, structure);\n}\n          \nfunction left_branch(m) {\n    return head(m);\n}\nfunction right_branch(m) {\n    return head(tail(m));\n}\nfunction branch_length(b) {\n    return head(b);\n}\nfunction branch_structure(b) {\n    return head(tail(b));\n}\n'+'\n'+'function is_weight(x){\n    return is_number(x);\n}\nfunction total_weight(x) {\n    return is_weight(x)\n        ? x\n        : total_weight(branch_structure(\n                         left_branch(x))) +\n          total_weight(branch_structure(\n                         right_branch(x)));\n}'+'\n'+'\nconst m = make_mobile(\n              make_branch(10,\n                  make_mobile(make_branch(10, 2), \n                      make_branch(4, 5))), \n              make_branch(10, 23));      \ntotal_weight(m);\n    '+'\n'); var url = 'https://sourceacademy.nus.edu.sg/playground#chap=2&amp;prgrm='+compressed; window.open(url); ">function is_weight(x){
    return is_number(x);
}
function total_weight(x) {
    return is_weight(x)
        ? x
        : total_weight(branch_structure(
                         left_branch(x))) +
          total_weight(branch_structure(
                         right_branch(x)));
}</pre></div></div>

    
      </LI>
      <LI>
<div class="snippet" id="javascript_31_33_div"><div class="pre-prettyprint"><pre class="prettyprint" title="Evaluate Javascript expression" onclick="var compressed = LZString.compressToEncodedURIComponent('\nfunction make_mobile(left, right) {\n   return list(left, right);\n}\n        \nfunction make_branch(length, structure) {\n   return list(length, structure);\n}\n          \nfunction left_branch(m) {\n    return head(m);\n}\nfunction right_branch(m) {\n    return head(tail(m));\n}\nfunction branch_length(b) {\n    return head(b);\n}\nfunction branch_structure(b) {\n    return head(tail(b));\n}\n\nfunction is_weight(x){\n    return is_number(x);\n}\nfunction total_weight(x) {\n    return is_weight(x)\n        ? x\n        : total_weight(branch_structure(\n                         left_branch(x))) +\n          total_weight(branch_structure(\n                         right_branch(x)));\n}\n'+'\n'+'function is_balanced(x) {\n    return is_weight(x) ||\n        ( is_balanced(branch_structure(\n                                  left_branch(x))) &amp;&amp;\n          is_balanced(branch_structure(\n                                  right_branch(x))) &amp;&amp;\n          total_weight(branch_structure(\n                                  left_branch(x))) \n          * branch_length(left_branch(x))\n          ===\n          total_weight(branch_structure(\n                                  right_branch(x))) \n          * branch_length(right_branch(x))\n        );\n}'+'\n'+'\nconst m = make_mobile(\n              make_branch(20, \n                  make_mobile(make_branch(10, 2),\n                              make_branch(4, 5))), \n              make_branch(28, 5));\nis_balanced(m);\n    '+'\n'); var url = 'https://sourceacademy.nus.edu.sg/playground#chap=2&amp;prgrm='+compressed; window.open(url); ">function is_balanced(x) {
    return is_weight(x) ||
        ( is_balanced(branch_structure(
                                  left_branch(x))) &amp;&amp;
          is_balanced(branch_structure(
                                  right_branch(x))) &amp;&amp;
          total_weight(branch_structure(
                                  left_branch(x))) 
          * branch_length(left_branch(x))
          ===
          total_weight(branch_structure(
                                  right_branch(x))) 
          * branch_length(right_branch(x))
        );
}</pre></div></div>

      </LI>
      <LI>
	With this alternative representation, the accessor functions for
	mobile and branch need to change as follows:

    <div class="snippet" id="javascript_31_34_div"><div class="pre-prettyprint"><pre class="prettyprint no-eval">function left_branch(m) {
  return head(m);
}
function right_branch(m) {
  return tail(m);
}
function branch_length(b) {
  return head(b);
}
function branch_structure(b) {
  return tail(b);
}</pre></div></div>

      </LI>
    </OL>
  </SOLUTION></div>
</div>
      </EXERCISE>
</div>

      
      
      
      

      <div class="permalink">
<a name="h1" class="permalink"></a><h2>
        Mapping over trees
      </h2>
</div>

      
      

      <div class="permalink">
<a name="p5" class="permalink"></a><p>
        Just as <kbd>map</kbd> is a powerful abstraction for dealing with sequences,
        <kbd>map</kbd> together with recursion is a powerful abstraction for
        dealing with trees.  For instance, the <kbd>scale_tree</kbd>
        function, analogous to <kbd>scale_list</kbd> of
        section <REF NAME="sec:sequences"><a class="superscript" id="2.2.2-sec-link-2.2.1" href="30">2.2.1</a></REF>, takes as arguments a numeric factor and a
        tree whose leaves are numbers.  It returns a tree of the same shape,
        where each number is multiplied by the factor.
        The recursive plan for <kbd>scale_tree</kbd> is similar to the one for
        <kbd>count_leaves</kbd>:

        <div class="snippet" id="javascript_31_35_div"><div class="pre-prettyprint"><pre class="prettyprint" title="Evaluate Javascript expression" onclick="var compressed = LZString.compressToEncodedURIComponent(''+'\n'+'function scale_tree(tree, factor) {\n    return is_null(tree)\n           ? null\n           : ! is_pair(tree)\n             ? tree * factor\n             : pair(scale_tree(head(tree), factor), \n                    scale_tree(tail(tree), factor));\n}'+'\n'+'\nscale_tree(list(1, list(2, list(3, 4), 5), list(6, 7)),\n           10);\n          '+'\n'); var url = 'https://sourceacademy.nus.edu.sg/playground#chap=2&amp;prgrm='+compressed; window.open(url); ">function scale_tree(tree, factor) {
    return is_null(tree)
           ? null
           : ! is_pair(tree)
             ? tree * factor
             : pair(scale_tree(head(tree), factor), 
                    scale_tree(tail(tree), factor));
}</pre></div></div>

        
      </p>
</div>

      <div class="permalink">
<a name="p6" class="permalink"></a><p>
        Another way to implement <kbd>scale_tree</kbd> is to regard the
        tree as a sequence of sub-trees and use <kbd>map</kbd>.  We map
        over the sequence, scaling each sub-tree in turn, and return the list
        of results.  In the base case, where the tree is a leaf, we simply
        multiply by the factor:

        <div class="snippet" id="javascript_31_36_div"><div class="pre-prettyprint"><pre class="prettyprint" title="Evaluate Javascript expression" onclick="var compressed = LZString.compressToEncodedURIComponent(''+'\n'+'function scale_tree(tree, factor) {\n    return map(sub_tree =&gt; is_pair(sub_tree)\n                           ? scale_tree(sub_tree, factor)\n                           : sub_tree * factor, \n               tree);\n}'+'\n'+'\nscale_tree(list(1, list(2, list(3, 4), 5), list(6, 7)),\n           10);\n          '+'\n'); var url = 'https://sourceacademy.nus.edu.sg/playground#chap=2&amp;prgrm='+compressed; window.open(url); ">function scale_tree(tree, factor) {
    return map(sub_tree =&gt; is_pair(sub_tree)
                           ? scale_tree(sub_tree, factor)
                           : sub_tree * factor, 
               tree);
}</pre></div></div>
      </p>
</div>

      <div class="permalink">
<a name="p7" class="permalink"></a><p>
        Many tree operations can be implemented by similar combinations of
        sequence operations and recursion.
      </p>
</div>

      <div class="permalink">
<a name="ex_2.30" class="permalink"></a><EXERCISE><b><a class="exercise-number permalink" id="ex_2.30">Exercise 2.30 </a></b>
        Define a
        function
        <kbd>square_tree</kbd> analogous to the <kbd>square_list</kbd>
        function
        of exercise <REF NAME="ex:square-list"><a class="superscript" id="2.2.2-ex-link-2.21" href="30#ex_2.21">2.21</a></REF>.  That is, <kbd>square_tree</kbd> should behave as follows:

        
	
        <div class="snippet" id="javascript_31_37_div"><div class="pre-prettyprint"><pre class="prettyprint" title="Evaluate Javascript expression" onclick="var compressed = LZString.compressToEncodedURIComponent('\n// square_tree to be written by student	    \n	  '+'\n'+'square_tree(list(1,\n                 list(2, list(3, 4), 5), \n                 list(6, 7)));\n// result: [1, [[4, [[9, [16, null]], \n//                   [25, null]]], \n//              [[36, [49, null]], null]]]'+'\n'+''+'\n'); var url = 'https://sourceacademy.nus.edu.sg/playground#chap=2&amp;prgrm='+compressed; window.open(url); ">square_tree(list(1,
                 list(2, list(3, 4), 5), 
                 list(6, 7)));
// result: [1, [[4, [[9, [16, null]], 
//                   [25, null]]], 
//              [[36, [49, null]], null]]]</pre></div></div>
        Define <kbd>square_tree</kbd> both directly (i.e., without using any
        higher-order
        functions) and also by using <kbd>map</kbd> and recursion.
        
	<div class="Solution">
<div class="solution_btn"><button class="btn btn-secondary solution_btn" href="#solution_31_7_div" data-toggle="collapse">Solution</button></div>
<div class="solution_content collapse" id="solution_31_7_div"><SOLUTION>
Directly:	  
    <div class="snippet" id="javascript_31_38_div"><div class="pre-prettyprint"><pre class="prettyprint" title="Evaluate Javascript expression" onclick="var compressed = LZString.compressToEncodedURIComponent('\nfunction square(x) {\n    return x * x;\n}\n                \n// square_tree to be written by student	    \n	  '+'\n'+'function square_tree(tree) {\n    return is_null(tree)\n           ? null\n           : ! is_pair(tree)\n             ? square(tree)\n             : pair(square_tree(head(tree)),\n	            square_tree(tail(tree)));\n}'+'\n'+'\nsquare_tree(list(1,\n                 list(2, list(3, 4), 5), \n                 list(6, 7)));\n// result: [1, [[4, [[9, [16, null]], \n//                   [25, null]]], \n//              [[36, [49, null]], null]]]\n          '+'\n'); var url = 'https://sourceacademy.nus.edu.sg/playground#chap=2&amp;prgrm='+compressed; window.open(url); ">function square_tree(tree) {
    return is_null(tree)
           ? null
           : ! is_pair(tree)
             ? square(tree)
             : pair(square_tree(head(tree)),
	            square_tree(tail(tree)));
}</pre></div></div>
The version using <kbd>map</kbd>:
<div class="snippet" id="javascript_31_39_div"><div class="pre-prettyprint"><pre class="prettyprint" title="Evaluate Javascript expression" onclick="var compressed = LZString.compressToEncodedURIComponent('\nfunction square(x) {\n    return x * x;\n}\n                \n// square_tree to be written by student	    \n	  '+'\n'+'function square_tree(tree) {\n    return map(sub_tree =&gt; ! is_pair(sub_tree)\n                           ? square(sub_tree)\n                           : square_tree(sub_tree),\n               tree);\n}'+'\n'+'\nsquare_tree(list(1,\n                 list(2, list(3, 4), 5), \n                 list(6, 7)));\n// result: [1, [[4, [[9, [16, null]], \n//                   [25, null]]], \n//              [[36, [49, null]], null]]]\n          '+'\n'); var url = 'https://sourceacademy.nus.edu.sg/playground#chap=2&amp;prgrm='+compressed; window.open(url); ">function square_tree(tree) {
    return map(sub_tree =&gt; ! is_pair(sub_tree)
                           ? square(sub_tree)
                           : square_tree(sub_tree),
               tree);
}</pre></div></div>
  </SOLUTION></div>
</div>
      </EXERCISE>
</div>

      <div class="permalink">
<a name="ex_2.31" class="permalink"></a><EXERCISE><b><a class="exercise-number permalink" id="ex_2.31">Exercise 2.31 </a></b>
        Abstract your answer to exercise <REF NAME="ex:square-tree"><a class="superscript" id="2.2.2-ex-link-2.30" href="31#ex_2.30">2.30</a></REF> to produce a
        function

        
        <kbd>tree_map</kbd> with the property that <kbd>square_tree</kbd>
        could be defined as

        

        <div class="snippet" id="javascript_31_40_div"><div class="pre-prettyprint"><pre class="prettyprint" title="Evaluate Javascript expression" onclick="var compressed = LZString.compressToEncodedURIComponent('\n// tree_map to be written by student\n          '+'\n'+'function square_tree(tree) {\n   return tree_map(square, tree);\n}'+'\n'+''+'\n'); var url = 'https://sourceacademy.nus.edu.sg/playground#chap=2&amp;prgrm='+compressed; window.open(url); ">function square_tree(tree) {
   return tree_map(square, tree);
}</pre></div></div>
  <div class="Solution">
<div class="solution_btn"><button class="btn btn-secondary solution_btn" href="#solution_31_8_div" data-toggle="collapse">Solution</button></div>
<div class="solution_content collapse" id="solution_31_8_div"><SOLUTION>
    <div class="snippet" id="javascript_31_41_div"><div class="pre-prettyprint"><pre class="prettyprint" title="Evaluate Javascript expression" onclick="var compressed = LZString.compressToEncodedURIComponent('\nfunction square(x) {\n    return x * x;\n}\n                \n// tree_map to be written by student\n          \nfunction square_tree(tree) {\n   return tree_map(square, tree);\n}\n        \n// square_tree to be written by student	    \n	  '+'\n'+'function tree_map(f, tree) {\n    return map(sub_tree =&gt; is_null(sub_tree)\n                           ? null\n                           : is_pair(sub_tree)\n                             ? tree_map(f, sub_tree)\n                             : f(sub_tree),\n               tree);\n}'+'\n'+'\nsquare_tree(list(1,\n                 list(2, list(3, 4), 5), \n                 list(6, 7)));\n// result: [1, [[4, [[9, [16, null]], \n//                   [25, null]]], \n//              [[36, [49, null]], null]]]\n          '+'\n'); var url = 'https://sourceacademy.nus.edu.sg/playground#chap=2&amp;prgrm='+compressed; window.open(url); ">function tree_map(f, tree) {
    return map(sub_tree =&gt; is_null(sub_tree)
                           ? null
                           : is_pair(sub_tree)
                             ? tree_map(f, sub_tree)
                             : f(sub_tree),
               tree);
}</pre></div></div></SOLUTION></div>
</div>
      </EXERCISE>
</div>

      <div class="permalink">
<a name="ex_2.32" class="permalink"></a><EXERCISE><b><a class="exercise-number permalink" id="ex_2.32">Exercise 2.32 </a></b>
        We can represent a
        
        set as a list of distinct elements, and we can
        represent the set of all subsets of the set as a list of lists.  For
        example, if the set is <kbd>[1, [2, [3, null]]]</kbd>, then the set of all subsets 
        
	looks as follows:
	<div class="snippet" id="javascript_31_42_div"><div class="pre-prettyprint"><pre class="prettyprint no-eval">[null, [[3, null], [[2, null], [[2, [3, null]], 
    [[1, null], [[2, [3, null]], [[1, [2, null]], 
        [[1, [2, [3, null]]], null]]]]]]]]</pre></div></div>
	
	 Complete the
        following definition of a
        function
        that generates the set of subsets
        of a set and give a clear explanation of why it works:
        <div class="snippet" id="javascript_31_43_div"><div class="pre-prettyprint"><pre class="prettyprint no-eval">function subsets(s) {
    if (is_null(s)) {
        return list(null);
    } else {
        const rest = subsets(tail(s));
        return append(rest, map(??, rest));
    }
}</pre></div></div>
	<div class="Solution">
<div class="solution_btn"><button class="btn btn-secondary solution_btn" href="#solution_31_9_div" data-toggle="collapse">Solution</button></div>
<div class="solution_content collapse" id="solution_31_9_div"><SOLUTION>
    <div class="snippet" id="javascript_31_44_div"><div class="pre-prettyprint"><pre class="prettyprint" title="Evaluate Javascript expression" onclick="var compressed = LZString.compressToEncodedURIComponent(''+'\n'+'function subsets(s) {\n    if (is_null(s)) {\n        return list(null);\n    } else {\n        const rest = subsets(tail(s));\n        return append(rest, map(x =&gt; pair(head(s), x), rest));\n    }\n}'+'\n'+'\n subsets(list(1, 2, 3));\n    '+'\n'); var url = 'https://sourceacademy.nus.edu.sg/playground#chap=2&amp;prgrm='+compressed; window.open(url); ">function subsets(s) {
    if (is_null(s)) {
        return list(null);
    } else {
        const rest = subsets(tail(s));
        return append(rest, map(x =&gt; pair(head(s), x), rest));
    }
}</pre></div></div>
    
    The argument starts in a similar way as the argument for the function
    <kbd>cc</kbd>
    in section <REF NAME="sec:tree-recursion"><a class="superscript" id="2.2.2-sec-link-1.2.2" href="13">1.2.2</a></REF>: 
    A subset either contains the first element $e$ of the given set,
    or it doesn't. If it doesn't, the problem becomes strictly smaller:
    Compute all subsets of the tail of the list that represents the given
    set. If it does, it must result from adding $e$ to
    a subset that doesn't contain $e$. In the end,
    we need to append both lists of subsets to obtain the list of all subsets.
    </SOLUTION></div>
</div>
      </EXERCISE>
</div>
      
      

    </SUBSECTION></div>
    </div>

    <div class="nav">

        <button type="button" class="btn btn-secondary" style="background-color: #fff;">
          <a href="30">&lt; Previous</a>
        </button>

    <div style="flex-grow: 1;"></div>
    
        <button type="button" class="btn btn-secondary" style="background-color: #fff;">
          <a class="scroll-next" href="32">Next &gt;</a>
        </button>


  </div>
  <div class="chapter_sign">
        2.2.2 
        Hierarchical Structures
      
    </div>
  <script>
//<![CDATA[
var chapter_id = 31;
//]]>
</script>
  <div class="next-page"></div>
</div>

     </div><!-- /.container -->


     <!--<script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-alpha.6/js/bootstrap.min.js" integrity="sha384-vBWWzlZJ8ea9aCX4pEW3rVHjgjt7zpkNpZk+02D9phzyeVkE+jo0ieGizqPLForn" crossorigin="anonymous"></script>
     -->
   </body>
</html>
