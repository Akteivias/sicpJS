diff --git a/xml/chapter1/section1/subsection8.xml b/xml/chapter1/section1/subsection8.xml
index fdab3d7f..56246fe4 100644
--- a/xml/chapter1/section1/subsection8.xml
+++ b/xml/chapter1/section1/subsection8.xml
@@ -1209,7 +1209,7 @@ function sqrt(x) {
                ? guess
                : sqrt_iter(improve(guess));
     }
-    return sqrt_iter(1.0);
+    return sqrt_iter(1);
 }
       </JAVASCRIPT>
     </SNIPPET>
diff --git a/xml/chapter2/section2/subsection4.xml b/xml/chapter2/section2/subsection4.xml
index 352e21da..410a1228 100644
--- a/xml/chapter2/section2/subsection4.xml
+++ b/xml/chapter2/section2/subsection4.xml
@@ -1128,12 +1128,12 @@ function frame_coord_map(frame) {
     <SNIPPET HIDE="yes">
       <NAME>frame_coord_map_example</NAME>
       <JAVASCRIPT>
-const my_origin = make_vect(1.0, 2.0);
-const my_edge_1 = make_vect(3.0, 4.0);
-const my_edge_2 = make_vect(5.0, 6.0);
+const my_origin = make_vect(1, 2);
+const my_edge_1 = make_vect(3, 4);
+const my_edge_2 = make_vect(5, 6);
 const my_frame = make_frame(my_origin, my_edge_1, my_edge_2);
 const my_coord_map = frame_coord_map(my_frame);
-const my_vector = make_vect(1.0, 2.0);
+const my_vector = make_vect(1, 2);
 const my_mapped_vector = my_coord_map(my_vector);
 my_mapped_vector;
       </JAVASCRIPT>
@@ -1164,9 +1164,9 @@ my_mapped_vector;
 frame_coord_map(a_frame)(make_vect(0, 0));
       </JAVASCRIPT>
       <JAVASCRIPT_RUN>
-const a_frame = make_frame(make_vect(1.0, 2.0), 
-                           make_vect(3.0, 4.0),
-                           make_vect(5.0, 5.0));
+const a_frame = make_frame(make_vect(1, 2), 
+                           make_vect(3, 4),
+                           make_vect(5, 5));
 frame_coord_map(a_frame)(make_vect(0, 0));
       </JAVASCRIPT_RUN>
     </SNIPPET>
@@ -1182,9 +1182,9 @@ frame_coord_map(a_frame)(make_vect(0, 0));
 origin_frame(a_frame);
       </JAVASCRIPT>
       <JAVASCRIPT_RUN>
-const a_frame = make_frame(make_vect(1.0, 2.0), 
-                           make_vect(3.0, 4.0),
-                           make_vect(5.0, 5.0));
+const a_frame = make_frame(make_vect(1, 2), 
+                           make_vect(3, 4),
+                           make_vect(5, 5));
 origin_frame(a_frame);
       </JAVASCRIPT_RUN>
     </SNIPPET>
@@ -1282,8 +1282,8 @@ function sub_vect(vector1, vector2) {
       <SNIPPET HIDE="yes">
         <NAME>vector_functions_example</NAME>
         <JAVASCRIPT>
-const my_vector_1 = make_vect(1.0, 2.0);
-const my_vector_2 = make_vect(3.0, 4.0);
+const my_vector_1 = make_vect(1, 2);
+const my_vector_2 = make_vect(3, 4);
 add_vect(my_vector_1, my_vector_2);
 	</JAVASCRIPT>
       </SNIPPET>
@@ -1341,9 +1341,9 @@ function edge2_frame(frame) {
           <SNIPPET HIDE="yes">
             <NAME>frame_functions_example</NAME>
             <JAVASCRIPT>
-const my_origin = make_vect(1.0, 2.0);
-const my_edge_1 = make_vect(3.0, 4.0);
-const my_edge_2 = make_vect(5.0, 6.0);
+const my_origin = make_vect(1, 2);
+const my_edge_1 = make_vect(3, 4);
+const my_edge_2 = make_vect(5, 6);
 const my_frame = make_frame(my_origin, my_edge_1, my_edge_2);
 edge2_frame(my_frame);
 	    </JAVASCRIPT>
@@ -1483,17 +1483,17 @@ function segments_to_painter(segment_list) {
     <SNIPPET HIDE="yes">
       <NAME>segments_to_painter_example</NAME>
       <JAVASCRIPT>
-const my_origin = make_vect(1.0, 2.0);
-const my_edge_1 = make_vect(3.0, 4.0);
-const my_edge_2 = make_vect(5.0, 6.0);
+const my_origin = make_vect(1, 2);
+const my_edge_1 = make_vect(3, 4);
+const my_edge_2 = make_vect(5, 6);
 const my_frame = make_frame(my_origin, my_edge_1, my_edge_2);
 
-const my_start_1 = make_vect(0.0, 1.0);
-const my_end_1 = make_vect(1.0, 1.0);
+const my_start_1 = make_vect(0, 1);
+const my_end_1 = make_vect(1, 1);
 const my_segment_1 = make_segment(my_start_1, my_end_1);	      
 
-const my_start_2 = make_vect(0.0, 2.0);
-const my_end_2 = make_vect(2.0, 2.0);
+const my_start_2 = make_vect(0, 2);
+const my_end_2 = make_vect(2, 2);
 const my_segment_2 = make_segment(my_start_2, my_end_2);	      
 
 const my_painter = segments_to_painter(
@@ -1618,8 +1618,8 @@ function end_segment(v) {
 	<NAME>segment_functions_example</NAME>
 	<REQUIRES>vector_functions</REQUIRES>
 	<JAVASCRIPT>
-const my_start = make_vect(0.0, 1.0);
-const my_end = make_vect(1.0, 1.0);
+const my_start = make_vect(0, 1);
+const my_end = make_vect(1, 1);
 const my_segment = make_segment(my_start, my_end);
 
 my_segment;
@@ -1661,9 +1661,9 @@ my_segment;
             <NAME>unit_frame</NAME>
             <REQUIRES>frame_functions</REQUIRES>
 	    <JAVASCRIPT>
-const unit_origin = make_vect(0.0, 0.0);
-const unit_edge_1 = make_vect(1.0, 0.0);
-const unit_edge_2 = make_vect(0.0, 1.0);
+const unit_origin = make_vect(0, 0);
+const unit_edge_1 = make_vect(1, 0);
+const unit_edge_2 = make_vect(0, 1);
 const unit_frame = make_frame(unit_origin, 
                               unit_edge_1,
                               unit_edge_2);
@@ -1676,20 +1676,20 @@ const unit_frame = make_frame(unit_origin,
             <REQUIRES>segments_to_painter</REQUIRES>
 	    <EXAMPLE>outline_painter_example</EXAMPLE>
 	    <JAVASCRIPT>
-const outline_start_1 = make_vect(0.0, 0.0);
-const outline_end_1 = make_vect(1.0, 0.0);
+const outline_start_1 = make_vect(0, 0);
+const outline_end_1 = make_vect(1, 0);
 const outline_segment_1 = make_segment(outline_start_1, 
                                        outline_end_1);
-const outline_start_2 = make_vect(1.0, 0.0);
-const outline_end_2 = make_vect(1.0, 1.0);
+const outline_start_2 = make_vect(1, 0);
+const outline_end_2 = make_vect(1, 1);
 const outline_segment_2 = make_segment(outline_start_2, 
                                        outline_end_2);
-const outline_start_3 = make_vect(1.0, 1.0);
-const outline_end_3 = make_vect(0.0, 1.0);
+const outline_start_3 = make_vect(1, 1);
+const outline_end_3 = make_vect(0, 1);
 const outline_segment_3 = make_segment(outline_start_3, 
                                        outline_end_3);
-const outline_start_4 = make_vect(0.0, 1.0);
-const outline_end_4 = make_vect(0.0, 0.0);
+const outline_start_4 = make_vect(0, 1);
+const outline_end_4 = make_vect(0, 0);
 const outline_segment_4 = make_segment(outline_start_4, 
                                        outline_end_4);
 const outline_painter = segments_to_painter(
@@ -1717,12 +1717,12 @@ outline_painter(unit_frame);
             <REQUIRES>segments_to_painter</REQUIRES>
 	    <EXAMPLE>x_painter_example</EXAMPLE>
 	    <JAVASCRIPT>
-const x_start_1 = make_vect(0.0, 0.0);
-const x_end_1 = make_vect(1.0, 1.0);
+const x_start_1 = make_vect(0, 0);
+const x_end_1 = make_vect(1, 1);
 const x_segment_1 = make_segment(x_start_1, 
                                  x_end_1);
-const x_start_2 = make_vect(1.0, 0.0);
-const x_end_2 = make_vect(0.0, 1.0);
+const x_start_2 = make_vect(1, 0);
+const x_end_2 = make_vect(0, 1);
 const x_segment_2 = make_segment(x_start_2, 
                                  x_end_2);
 const x_painter = segments_to_painter(
@@ -1749,20 +1749,20 @@ x_painter(unit_frame);
             <REQUIRES>segments_to_painter</REQUIRES>
 	    <EXAMPLE>diamond_painter_example</EXAMPLE>
 	    <JAVASCRIPT>
-const diamond_start_1 = make_vect(0.5, 0.0);
-const diamond_end_1 = make_vect(1.0, 0.5);
+const diamond_start_1 = make_vect(0.5, 0);
+const diamond_end_1 = make_vect(1, 0.5);
 const diamond_segment_1 = make_segment(diamond_start_1, 
                                        diamond_end_1);
-const diamond_start_2 = make_vect(1.0, 0.5);
-const diamond_end_2 = make_vect(0.5, 1.0);
+const diamond_start_2 = make_vect(1, 0.5);
+const diamond_end_2 = make_vect(0.5, 1);
 const diamond_segment_2 = make_segment(diamond_start_2, 
                                        diamond_end_2);
-const diamond_start_3 = make_vect(0.5, 1.0);
-const diamond_end_3 = make_vect(0.0, 0.5);
+const diamond_start_3 = make_vect(0.5, 1);
+const diamond_end_3 = make_vect(0, 0.5);
 const diamond_segment_3 = make_segment(diamond_start_3, 
                                        diamond_end_3);
-const diamond_start_4 = make_vect(0.0, 0.5);
-const diamond_end_4 = make_vect(0.5, 0.0);
+const diamond_start_4 = make_vect(0, 0.5);
+const diamond_end_4 = make_vect(0.5, 0);
 const diamond_segment_4 = make_segment(diamond_start_4, 
                                        diamond_end_4);
 const diamond_painter = segments_to_painter(
@@ -1882,9 +1882,9 @@ function transform_painter(painter, origin,
       <JAVASCRIPT>
 function flip_vert(painter) {
     return transform_painter(painter, 
-                make_vect(0.0, 1.0),  // new origin
-                make_vect(1.0, 1.0),  // new end of edge1
-                make_vect(0.0, 0.0)); // new end of edge2
+                make_vect(0, 1),  // new origin
+                make_vect(1, 1),  // new end of edge1
+                make_vect(0, 0)); // new end of edge2
 }
       </JAVASCRIPT>
     </SNIPPET>
@@ -1933,8 +1933,8 @@ flipped_outline_painter(unit_frame);
 function shrink_to_upper_right(painter) {
     return transform_painter(painter, 
                              make_vect(0.5, 0.5), 
-                             make_vect(1.0, 0.5), 
-                             make_vect(0.5, 1.0));
+                             make_vect(1, 0.5), 
+                             make_vect(0.5, 1));
 }
       </JAVASCRIPT>
     </SNIPPET>
@@ -1975,9 +1975,9 @@ shrunk_outline_painter(unit_frame);
       <JAVASCRIPT>
 function rotate90(painter) {
     return transform_painter(painter, 
-                             make_vect(1.0, 0.0), 
-                             make_vect(1.0, 1.0), 
-                             make_vect(0.0, 0.0));
+                             make_vect(1, 0), 
+                             make_vect(1, 1), 
+                             make_vect(0, 0));
 }
       </JAVASCRIPT>
     </SNIPPET>
@@ -2025,7 +2025,7 @@ rotated_outline_painter(unit_frame);
       <JAVASCRIPT>
 function squash_inwards(painter) {
     return transform_painter(painter, 
-                             make_vect(0.0, 0.0), 
+                             make_vect(0, 0), 
                              make_vect(0.65, 0.35), 
                              make_vect(0.35, 0.65));
 }
@@ -2081,15 +2081,15 @@ squashed_outline_painter(unit_frame);
       </SCHEME>
       <JAVASCRIPT>
 function beside(painter1, painter2) {
-    const split_point = make_vect(0.5, 0.0);
+    const split_point = make_vect(0.5, 0);
     const paint_left = transform_painter(painter1, 
-                            make_vect(0.0, 0.0), 
+                            make_vect(0, 0), 
                             split_point, 
-                            make_vect(0.0, 1.0));
+                            make_vect(0, 1));
     const paint_right = transform_painter(painter2, 
                             split_point, 
-                            make_vect(1.0, 0.0), 
-                            make_vect(0.5, 1.0));
+                            make_vect(1, 0), 
+                            make_vect(0.5, 1));
     return frame => {
                paint_left(frame);
                paint_right(frame);
@@ -2163,9 +2163,9 @@ beside(x_painter, x_painter)(unit_frame);
             <JAVASCRIPT>
 function flip_horiz(painter) {
     return transform_painter(painter, 
-               make_vect(1.0, 0.0),  // new origin
-               make_vect(0.0, 0.0),  // new end of edge1
-               make_vect(1.0, 1.0)); // new end of edge2
+               make_vect(1, 0),  // new origin
+               make_vect(0, 0),  // new end of edge1
+               make_vect(1, 1)); // new end of edge2
 }
             </JAVASCRIPT>
           </SNIPPET>
@@ -2200,9 +2200,9 @@ flip_horiz(x_painter)(unit_frame);
 function rotate180(painter) {
     return transform_painter(
                painter, 
-               make_vect(1.0, 1.0),  // new origin
-               make_vect(0.0, 1.0),  // new end of edge1
-               make_vect(1.0, 0.0)); // new end of edge2
+               make_vect(1, 1),  // new origin
+               make_vect(0, 1),  // new end of edge1
+               make_vect(1, 0)); // new end of edge2
 }
             </JAVASCRIPT>
           </SNIPPET>
@@ -2237,9 +2237,9 @@ rotate180(x_painter)(unit_frame);
 function rotate270(painter) {
     return transform_painter(
                painter, 
-               make_vect(0.0, 1.0),  // new origin
-               make_vect(0.0, 0.0),  // new end of edge1
-               make_vect(1.0, 0.0)); // new end of edge2
+               make_vect(0, 1),  // new origin
+               make_vect(0, 0),  // new end of edge1
+               make_vect(1, 0)); // new end of edge2
 }
             </JAVASCRIPT>
           </SNIPPET>
@@ -2313,16 +2313,16 @@ rotate270(x_painter)(unit_frame);
             </SCHEME>
             <JAVASCRIPT>
 function below(painter1, painter2) {
-    const split_point = make_vect(0.0, 0.5);
+    const split_point = make_vect(0, 0.5);
     const paint_upper =
         transform_painter(painter1, 
                           split_point, 
-                          make_vect(1.0, 0.5), 
-                          make_vect(0.0, 1.0));
+                          make_vect(1, 0.5), 
+                          make_vect(0, 1));
     const paint_lower =
         transform_painter(painter2, 
-                          make_vect(0.0, 0.0), 
-                          make_vect(1.0, 0.0), 
+                          make_vect(0, 0), 
+                          make_vect(1, 0), 
                           split_point);
     return frame => {
                paint_upper(frame);
